{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\course\\\\639-UI\\\\react_native2_alpha-yyt86-main\\\\ComparisonView.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport moment from \"moment\";\nimport { Modal, Portal, Title, Provider, Surface, DataTable } from 'react-native-paper';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport ProgressBar from 'react-native-progress/Bar';\n\nvar ComparisonView = function (_React$Component) {\n  _inherits(ComparisonView, _React$Component);\n\n  var _super = _createSuper(ComparisonView);\n\n  function ComparisonView(props) {\n    var _this;\n\n    _classCallCheck(this, ComparisonView);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      dailyDuration: _this.props.route.params.dailyDuration,\n      dailyCalories: _this.props.route.params.dailyCalories,\n      dailyProtein: _this.props.route.params.dailyProtein,\n      dailyCarbo: _this.props.route.params.dailyCarbo,\n      dailyFats: _this.props.route.params.dailyFats,\n      dailyFoodCal: _this.props.route.params.dailyFoodCal,\n      goalDailyCalories: 0.0,\n      goalDailyProtein: 0.0,\n      goalDailyCarbohydrates: 0.0,\n      goalDailyFat: 0.0,\n      goalDailyActivity: 0.0,\n      accessToken: \"\",\n      username: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ComparisonView, [{\n    key: \"getStoredData\",\n    value: function getStoredData(key) {\n      var value;\n      return _regeneratorRuntime.async(function getStoredData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n            case 3:\n              value = _context.sent;\n              this.setState(_defineProperty({}, key, value));\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 7]], Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(this.getStoredData(\"accessToken\"));\n\n            case 2:\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(this.getStoredData(\"username\"));\n\n            case 4:\n              fetch('https://mysqlcs639.cs.wisc.edu/users/' + this.state.username, {\n                method: 'GET',\n                headers: {\n                  'x-access-token': this.state.accessToken\n                }\n              }).then(function (res) {\n                return res.json();\n              }).then(function (res) {\n                _this2.setState({\n                  goalDailyCalories: res.goalDailyCalories,\n                  goalDailyProtein: res.goalDailyProtein,\n                  goalDailyCarbohydrates: res.goalDailyCarbohydrates,\n                  goalDailyFat: res.goalDailyFat,\n                  goalDailyActivity: res.goalDailyActivity\n                });\n\n                _this2.setState({\n                  goalDailyCalories: parseFloat(_this2.state.goalDailyCalories),\n                  goalDailyProtein: parseFloat(_this2.state.goalDailyProtein),\n                  goalDailyCarbohydrates: parseFloat(_this2.state.goalDailyCarbohydrates),\n                  goalDailyFat: parseFloat(_this2.state.goalDailyFat),\n                  goalDailyActivity: parseFloat(_this2.state.goalDailyActivity)\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"calculate\",\n    value: function calculate() {\n      var compareArray = [];\n      var obj = {};\n      obj.name = 'Daily Activity';\n      obj.goal = this.state.goalDailyActivity;\n      obj.today = this.state.dailyDuration;\n      console.log(typeof this.state.dailyDuration);\n      console.log(this.state.dailyDuration / this.state.goalDailyActivity);\n\n      if (this.state.goalDailyActivity !== 0 && this.state.dailyDuration / this.state.goalDailyActivity < 1) {\n        obj.progress = this.state.dailyDuration / this.state.goalDailyActivity;\n        console.log(\"asdfasfdsf\");\n      } else {\n        obj.progress = 1;\n      }\n\n      compareArray.push(obj);\n      var obj1 = {};\n      obj1.name = 'Daily Calories';\n      obj1.goal = this.state.goalDailyCalories;\n      obj1.today = this.state.dailyCalories;\n\n      if (this.state.goalDailyCalories !== 0 && this.state.dailyCalories / this.state.goalDailyCalories < 1) {\n        obj1.progress = this.state.dailyCalories / this.state.goalDailyCalories;\n      } else {\n        obj1.progress = 1;\n      }\n\n      compareArray.push(obj1);\n      var obj2 = {};\n      obj2.name = 'Daily Protein';\n      obj2.goal = this.state.goalDailyProtein;\n      obj2.today = this.state.dailyProtein;\n\n      if (this.state.goalDailyProtein !== 0 && this.state.dailyProtein / this.state.goalDailyProtein < 1) {\n        obj2.progress = this.state.dailyProtein / this.state.goalDailyProtein;\n      } else {\n        obj2.progress = 1;\n      }\n\n      compareArray.push(obj2);\n      var obj3 = {};\n      obj3.name = 'Daily Carbohydrates';\n      obj3.goal = this.state.goalDailyCarbohydrates;\n      obj3.today = this.state.dailyCarbo;\n\n      if (this.state.goalDailyCarbohydrates !== 0 && this.state.dailyCarbo / this.state.goalDailyCarbohydrates < 1) {\n        obj3.progress = this.state.dailyCarbos / this.state.goalDailyCarbohydrates;\n      } else {\n        obj3.progress = 1;\n      }\n\n      compareArray.push(obj3);\n      var obj4 = {};\n      obj4.name = 'Daily Fats';\n      obj4.goal = this.state.goalDailyFat;\n      obj4.today = this.state.dailyFats;\n\n      if (this.state.goalDailyFat !== 0 && this.state.dailyFats / this.state.goalDailyFat < 1) {\n        obj4.progress = this.state.dailyFats / this.state.goalDailyFat;\n      } else {\n        obj4.progress = 1;\n      }\n\n      compareArray.push(obj4);\n      console.log(compareArray);\n      return compareArray;\n    }\n  }, {\n    key: \"displayComparison\",\n    value: function displayComparison() {\n      var cardList = [];\n      var compareArray = this.calculate();\n\n      for (var i = 0; i < compareArray.length; i++) {\n        var value = compareArray[i];\n        cardList.push(React.createElement(View, {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }\n        }, React.createElement(DataTable.Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 11\n          }\n        }, React.createElement(DataTable.Cell, {\n          style: {\n            justifyContent: 'flex-start'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 8\n          }\n        }, value.name), React.createElement(DataTable.Cell, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 8\n          }\n        }, value.today, \"/\", value.goal)), React.createElement(ProgressBar, {\n          progress: value.progress,\n          width: 200,\n          color: 'tomato',\n          borderWidth: '3',\n          borderColor: 'tomato',\n          height: 10,\n          borderRadius: 5,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }\n        }), React.createElement(View, {\n          style: styles.spaceSmall,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 16\n          }\n        })));\n      }\n\n      return cardList;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.mainContainer,\n        contentContainerStyle: {\n          flexGrow: 11,\n          justifyContent: 'center',\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 12\n        }\n      }, React.createElement(Icon, {\n        name: \"arrow-left\",\n        size: 40,\n        color: \"#900\",\n        style: {\n          marginLeft: 16\n        },\n        onPress: function onPress() {\n          return _this3.props.navigation.goBack();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }\n      }), this.displayComparison());\n    }\n  }]);\n\n  return ComparisonView;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  mainContainer: {\n    flex: 1\n  },\n  scrollViewContainer: {},\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  spaceSmall: {\n    width: 20,\n    height: 10\n  },\n  space: {\n    width: 20,\n    height: 20\n  }\n});\nexport default ComparisonView;","map":{"version":3,"sources":["F:/course/639-UI/react_native2_alpha-yyt86-main/ComparisonView.js"],"names":["React","moment","Modal","Portal","Title","Provider","Surface","DataTable","AsyncStorage","Icon","ProgressBar","ComparisonView","props","state","dailyDuration","route","params","dailyCalories","dailyProtein","dailyCarbo","dailyFats","dailyFoodCal","goalDailyCalories","goalDailyProtein","goalDailyCarbohydrates","goalDailyFat","goalDailyActivity","accessToken","username","key","getItem","value","setState","console","log","getStoredData","fetch","method","headers","then","res","json","parseFloat","compareArray","obj","name","goal","today","progress","push","obj1","obj2","obj3","dailyCarbos","obj4","cardList","calculate","i","length","justifyContent","styles","spaceSmall","mainContainer","flexGrow","alignItems","marginLeft","navigation","goBack","displayComparison","Component","StyleSheet","create","flex","scrollViewContainer","container","backgroundColor","width","height","space"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport moment from \"moment\";\r\nimport { Modal, Portal, Title, Provider, Surface, DataTable } from 'react-native-paper';\r\nimport {StyleSheet, Text, View, Button, TextInput, ScrollView } from 'react-native';\r\nimport { Dimensions } from 'react-native';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport Icon from 'react-native-vector-icons/FontAwesome5';\r\n// import * as Progress from 'react-native-progress';\r\nimport ProgressBar from 'react-native-progress/Bar';\r\n\r\nclass ComparisonView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dailyDuration: this.props.route.params.dailyDuration,\r\n            dailyCalories: this.props.route.params.dailyCalories,\r\n            dailyProtein: this.props.route.params.dailyProtein,\r\n            dailyCarbo: this.props.route.params.dailyCarbo,\r\n            dailyFats: this.props.route.params.dailyFats,\r\n             dailyFoodCal: this.props.route.params.dailyFoodCal,\r\n             goalDailyCalories: 0.0,\r\n            goalDailyProtein: 0.0,\r\n            goalDailyCarbohydrates: 0.0,\r\n             goalDailyFat: 0.0,\r\n            goalDailyActivity: 0.0,\r\n            accessToken: \"\",\r\n            username: \"\",\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    async getStoredData(key){\r\n        try{\r\n            let value = await AsyncStorage.getItem(key);\r\n            this.setState({[key]: value});\r\n         } catch (error) {\r\n            console.log(error);\r\n         }\r\n    }\r\n    \r\n\r\n    async componentDidMount() {\r\n      await this.getStoredData(\"accessToken\");\r\n        await this.getStoredData(\"username\");\r\n        // console.log(this.state.accessToken)\r\n        fetch('https://mysqlcs639.cs.wisc.edu/users/' + this.state.username, {\r\n          method: 'GET',\r\n          headers: { 'x-access-token': this.state.accessToken }\r\n        })\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            this.setState({\r\n              goalDailyCalories: res.goalDailyCalories,\r\n              goalDailyProtein: res.goalDailyProtein,\r\n              goalDailyCarbohydrates: res.goalDailyCarbohydrates,\r\n              goalDailyFat: res.goalDailyFat,\r\n              goalDailyActivity: res.goalDailyActivity\r\n            });\r\n\r\n            this.setState({\r\n              goalDailyCalories: parseFloat(this.state.goalDailyCalories),\r\n              goalDailyProtein: parseFloat(this.state.goalDailyProtein),\r\n              goalDailyCarbohydrates: parseFloat(this.state.goalDailyCarbohydrates),\r\n              goalDailyFat: parseFloat(this.state.goalDailyFat),\r\n              goalDailyActivity: parseFloat(this.state.goalDailyActivity)\r\n            })\r\n          });\r\n      }\r\n\r\n      calculate(){\r\n        // console.log(this.state.goalDailyActivity, \"goalDailyActivity\")\r\n        // console.log(this.state.goalDailyCalories, \"goalDailyCalories\")\r\n        // console.log(this.state.goalDailyFat, \"goalDailyFat\")\r\n        // console.log(this.state.goalDailyProtein, \"goalDailyProtein\")\r\n        // console.log(this.state. dailyCarbo, \" dailyCarbo\")\r\n        // console.log(this.state.dailyFats, \"dailyFats\")\r\n          let compareArray = [];\r\n          let obj = {}\r\n          obj.name = 'Daily Activity'\r\n          obj.goal = this.state.goalDailyActivity;\r\n          obj.today = this.state.dailyDuration;\r\n          console.log(typeof this.state.dailyDuration)\r\n          console.log( this.state.dailyDuration/this.state.goalDailyActivity)\r\n          if(this.state.goalDailyActivity !== 0 &&  this.state.dailyDuration/this.state.goalDailyActivity < 1){\r\n            obj.progress = this.state.dailyDuration/this.state.goalDailyActivity\r\n            console.log(\"asdfasfdsf\")\r\n          }\r\n          else{\r\n            obj.progress = 1\r\n          }\r\n          compareArray.push(obj);\r\n\r\n          let obj1 = {}\r\n          obj1.name = 'Daily Calories'\r\n          // console.log(this.state.goalDailyCalories, \"goalDailyCalories\")\r\n          // console.log(typeof this.state.dailyCalories)\r\n          obj1.goal = this.state.goalDailyCalories;\r\n          obj1.today = this.state.dailyCalories;\r\n          if(this.state.goalDailyCalories !== 0 && this.state.dailyCalories/this.state.goalDailyCalories < 1){\r\n            obj1.progress = this.state.dailyCalories/this.state.goalDailyCalories\r\n          }\r\n          else{\r\n            obj1.progress = 1\r\n          }\r\n          compareArray.push(obj1);\r\n\r\n          let obj2 = {}\r\n          obj2.name = 'Daily Protein'\r\n          obj2.goal = this.state.goalDailyProtein;\r\n          obj2.today = this.state.dailyProtein;\r\n          if(this.state.goalDailyProtein !== 0 && this.state.dailyProtein/this.state.goalDailyProtein < 1){\r\n            obj2.progress = this.state.dailyProtein/this.state.goalDailyProtein\r\n          }\r\n          else{\r\n            obj2.progress =  1\r\n          }\r\n          compareArray.push(obj2);\r\n\r\n          let obj3 = {}\r\n          obj3.name = 'Daily Carbohydrates'\r\n          obj3.goal = this.state.goalDailyCarbohydrates;\r\n          obj3.today = this.state.dailyCarbo;\r\n          if(this.state.goalDailyCarbohydrates !== 0 && this.state.dailyCarbo/this.state.goalDailyCarbohydrates < 1 ){\r\n            obj3.progress = this.state.dailyCarbos/this.state.goalDailyCarbohydrates\r\n          }\r\n          else{\r\n            obj3.progress =  1\r\n          }\r\n          compareArray.push(obj3);\r\n\r\n          let obj4 = {}\r\n          obj4.name = 'Daily Fats'\r\n          obj4.goal = this.state.goalDailyFat;\r\n          obj4.today = this.state.dailyFats;\r\n          if(this.state.goalDailyFat !== 0 &&  this.state.dailyFats/this.state.goalDailyFat < 1){\r\n            obj4.progress = this.state.dailyFats/this.state.goalDailyFat\r\n          }\r\n          else{\r\n            obj4.progress =  1\r\n          }\r\n          compareArray.push(obj4);   \r\n          console.log(compareArray)\r\n          return compareArray;\r\n         \r\n\r\n      }\r\n\r\n    //   renderItem(item){\r\n    //     return(\r\n    //       <View>\r\n    //       <DataTable.Row>\r\n    //    <DataTable.Cell style={{ justifyContent: 'flex-start'}} >{item.name}</DataTable.Cell>\r\n    //    <DataTable.Cell >{item.today}/{item.goal}</DataTable.Cell>\r\n      \r\n    //  </DataTable.Row>\r\n    //       {/* <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\r\n    //                 <Title>item.name</Title>\r\n    //                 <Text>{item.today}/{item.goal}</Text>\r\n    //             </View> */}\r\n    //             <Progress.Bar progress={item.progress} width={200} color={'tomato'} borderWidth={'3'} borderColor={'tomato'}  height={10} borderRadius={5}/>\r\n    //            <View style={styles.spaceSmall} />\r\n    //       </View>\r\n    //     )\r\n    //   }\r\n\r\n      displayComparison(){\r\n        let cardList = [];\r\n        let compareArray = this.calculate()\r\n        // console.log(this.state.activityArray, \"activity\")\r\n        for (let i = 0; i < compareArray.length; i++){\r\n        // for(const key of this.state.activityArray.keys()){\r\n          let value = compareArray[i];\r\n          // console.log(value, \"activity info\")\r\n          // console.log(value.id, \"activity id\")\r\n            cardList.push(\r\n              <View key={i}>\r\n          <DataTable.Row>\r\n       <DataTable.Cell style={{ justifyContent: 'flex-start'}} >{value.name}</DataTable.Cell>\r\n       <DataTable.Cell >{value.today}/{value.goal}</DataTable.Cell>\r\n      \r\n     </DataTable.Row>\r\n          {/* <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\r\n                    <Title>item.name</Title>\r\n                    <Text>{item.today}/{item.goal}</Text>\r\n                </View> */}\r\n                <ProgressBar progress={value.progress} width={200} color={'tomato'} borderWidth={'3'} borderColor={'tomato'}  height={10} borderRadius={5}/>\r\n               <View style={styles.spaceSmall} />\r\n          </View>\r\n              )\r\n\r\n        }\r\n        return cardList;\r\n    }\r\n      //this.state.dailyCalories/this.state.goalDailyCalories>1 ? 1: this.state.dailyCalories/this.state.goalDailyCalories\r\n    render() {\r\n        return (\r\n           <View style={styles.mainContainer} contentContainerStyle={{ flexGrow: 11, justifyContent: 'center', alignItems: \"center\" }}>\r\n            <Icon name=\"arrow-left\" size={40} color=\"#900\" style={{ marginLeft: 16 }} onPress={() => this.props.navigation.goBack()} />\r\n               {/* <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\r\n                   <Title>Daily Carbohydrates</Title>\r\n                   <Text>{this.state.dailyCarbo}/{this.state.goalDailyCarbohydrates}</Text>\r\n               </View>\r\n               <Progress.Bar progress={this.state.dailyCarbo/this.state.goalDailyCarbohydrates>1 ? 1: this.state.dailyCarbo/this.state.goalDailyCarbohydrates} \r\n               width={200} color={'tomato'} borderWidth={'3'} borderColor={'tomato'}  height={10} borderRadius={5}/>\r\n               <View style={styles.spaceSmall} /> */}\r\n               {this.displayComparison()}\r\n\r\n           </View> \r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    mainContainer: {\r\n        flex: 1\r\n      },\r\n      scrollViewContainer: {},\r\n      container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n      },\r\n    \r\n      spaceSmall: {\r\n        width: 20,\r\n        height: 10,\r\n      },\r\n      space: {\r\n        width: 20,\r\n        height: 20,\r\n      },\r\n});\r\n\r\nexport default ComparisonView;"]},"metadata":{},"sourceType":"module"}