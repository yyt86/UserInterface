{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\course\\\\639-UI\\\\react_native2_alpha-yyt86-main\\\\ActivityModal.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TimePicker from \"./TimePicker\";\nimport moment from \"moment\";\n\nvar ActivityModal = function (_React$Component) {\n  _inherits(ActivityModal, _React$Component);\n\n  var _super = _createSuper(ActivityModal);\n\n  function ActivityModal(props) {\n    var _this;\n\n    _classCallCheck(this, ActivityModal);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      name: \"\",\n      duration: 0.0,\n      date: _this.props.date,\n      calories: 0.0,\n      id: '',\n      accessToken: '',\n      modalVisible: _this.props.visible\n    };\n    return _this;\n  }\n\n  _createClass(ActivityModal, [{\n    key: \"getStoredData\",\n    value: function getStoredData(key) {\n      var value;\n      return _regeneratorRuntime.async(function getStoredData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n            case 3:\n              value = _context.sent;\n              this.setState(_defineProperty({}, key, value));\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 7]], Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        name: this.props.name,\n        duration: this.props.duration,\n        date: this.props.date,\n        calories: this.props.calories,\n        id: this.props.id,\n        accessToken: this.props.accessToken\n      });\n    }\n  }, {\n    key: \"handleSaveExercise\",\n    value: function handleSaveExercise() {\n      var _this2 = this;\n\n      this.setState({\n        duration: parseFloat(this.state.duration),\n        calories: parseFloat(this.state.calories)\n      }, function () {\n        return fetch('https://mysqlcs639.cs.wisc.edu/activities/' + _this2.props.id, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'x-access-token': _this2.props.accessToken\n          },\n          body: JSON.stringify({\n            name: _this2.state.name,\n            duration: _this2.state.duration,\n            date: moment(_this2.state.date).format(),\n            calories: _this2.state.calories\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (res) {\n          _this2.props.updateData();\n\n          alert(\"Your exercise has been updated!\");\n\n          _this2.props.hideModal();\n        }).catch(function (err) {\n          alert(\"Something went wrong! Verify you have filled out the fields correctly.\");\n        });\n      });\n    }\n  }, {\n    key: \"getDateTime\",\n    value: function getDateTime(date) {\n      this.setState({\n        date: date\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Modal, {\n        visible: this.props.visible,\n        transparent: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.centeredView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.modalView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.bigText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }\n      }, \"Exercise Details\"), React.createElement(View, {\n        style: styles.space,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlignVertical: \"center\",\n          fontWeight: \"700\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, \"Exercise Name\")), React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        placeholderTextColor: \"#d9bebd\",\n        onChangeText: function onChangeText(name) {\n          return _this3.setState({\n            name: name\n          });\n        },\n        defaultValue: this.state.name,\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }), React.createElement(View, {\n        style: styles.spaceSmall,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlignVertical: \"center\",\n          fontWeight: \"700\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, \"Duration (minutes)\")), React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        placeholderTextColor: \"#d9bebd\",\n        onChangeText: function onChangeText(duration) {\n          return _this3.setState({\n            duration: duration\n          });\n        },\n        defaultValue: this.state.duration + \"\",\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }\n      }), React.createElement(View, {\n        style: styles.spaceSmall,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlignVertical: \"center\",\n          fontWeight: \"700\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }, \"Calories Burnt (cal)\")), React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        placeholderTextColor: \"#d9bebd\",\n        onChangeText: function onChangeText(calories) {\n          return _this3.setState({\n            calories: calories\n          });\n        },\n        defaultValue: this.state.calories + \"\",\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }\n      }), React.createElement(View, {\n        style: styles.space,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlignVertical: \"center\",\n          fontWeight: \"700\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }, \"Exercise Data and Time\")), React.createElement(View, {\n        style: styles.spaceSmall,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }\n      }), React.createElement(TimePicker, {\n        date: this.state.date,\n        getDateTime: function getDateTime(data) {\n          return _this3.getDateTime(data);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }\n      }), React.createElement(View, {\n        style: styles.space,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlignVertical: \"center\",\n          fontWeight: \"400\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }\n      }, \"Looks good! Ready to save your work?\")), React.createElement(View, {\n        style: styles.space,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }\n      }), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }\n      }, React.createElement(Button, {\n        color: \"#942a21\",\n        style: styles.buttonInline,\n        title: \"SAVE EXERCISE\",\n        onPress: function onPress() {\n          _this3.handleSaveExercise();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }\n      }), React.createElement(View, {\n        style: styles.spaceHorizontal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }\n      }), React.createElement(Button, {\n        color: \"#a1635f\",\n        style: styles.buttonInline,\n        title: \"NEVER MIND\",\n        onPress: function onPress() {\n          return _this3.props.hideModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      })))));\n    }\n  }]);\n\n  return ActivityModal;\n}(React.Component);\n\n;\nvar styles = StyleSheet.create({\n  scrollView: {\n    height: Dimensions.get('window').height\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  bigText: {\n    fontSize: 20,\n    fontWeight: \"700\",\n    marginBottom: 5\n  },\n  spaceSmall: {\n    width: 20,\n    height: 10\n  },\n  space: {\n    width: 20,\n    height: 20\n  },\n  spaceHorizontal: {\n    display: \"flex\",\n    width: 20\n  },\n  buttonInline: {\n    display: \"flex\"\n  },\n  input: {\n    width: 200,\n    padding: 10,\n    margin: 5,\n    height: 40,\n    borderColor: '#c9392c',\n    borderWidth: 1\n  },\n  inputInline: {\n    flexDirection: \"row\",\n    display: \"flex\",\n    width: 200,\n    padding: 10,\n    margin: 5,\n    height: 40,\n    borderColor: '#c9392c',\n    borderWidth: 1\n  }\n});\nexport default ActivityModal;","map":{"version":3,"sources":["F:/course/639-UI/react_native2_alpha-yyt86-main/ActivityModal.js"],"names":["React","TimePicker","moment","ActivityModal","props","state","name","duration","date","calories","id","accessToken","modalVisible","visible","key","AsyncStorage","getItem","value","setState","console","log","parseFloat","fetch","method","headers","body","JSON","stringify","format","then","res","json","updateData","alert","hideModal","catch","err","styles","centeredView","modalView","bigText","space","textAlignVertical","fontWeight","input","spaceSmall","data","getDateTime","flexDirection","flexWrap","buttonInline","handleSaveExercise","spaceHorizontal","Component","StyleSheet","create","scrollView","height","Dimensions","get","flex","justifyContent","alignItems","marginTop","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","elevation","container","fontSize","marginBottom","display","borderColor","borderWidth","inputInline"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View, Button, TextInput, Dimensions , Modal,} from 'react-native';\r\nimport TimePicker from './TimePicker';\r\nimport moment from \"moment\";\r\n\r\n\r\nclass ActivityModal extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        name: \"\",\r\n        duration: 0.0,\r\n        date:  this.props.date,\r\n        calories: 0.0,\r\n        id: '',\r\n        accessToken: '',\r\n        modalVisible: this.props.visible,\r\n      }\r\n    }\r\n\r\n    async getStoredData(key){\r\n      try{\r\n          let value = await AsyncStorage.getItem(key);\r\n          this.setState({[key]: value});\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.setState({\r\n        name: this.props.name,\r\n        duration: this.props.duration,\r\n        date:  this.props.date,\r\n        calories: this.props.calories,\r\n        id: this.props.id,\r\n        accessToken: this.props.accessToken,\r\n      })\r\n    }\r\n      \r\n\r\n    handleSaveExercise() {\r\n      this.setState({\r\n        duration: parseFloat(this.state.duration),\r\n        calories: parseFloat(this.state.calories),\r\n      }, () => fetch('https://mysqlcs639.cs.wisc.edu/activities/' + this.props.id, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'x-access-token': this.props.accessToken\r\n        },\r\n        body: JSON.stringify({\r\n          name: this.state.name,\r\n            duration: this.state.duration,\r\n            date: moment(this.state.date).format(),\r\n            calories: this.state.calories,\r\n        })\r\n      })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          this.props.updateData()\r\n          alert(\"Your exercise has been updated!\");\r\n          this.props.hideModal()\r\n        })\r\n        .catch(err => {\r\n          alert(\"Something went wrong! Verify you have filled out the fields correctly.\");\r\n        }));\r\n\r\n    }\r\n\r\n\r\n\r\n    getDateTime(date){\r\n      this.setState({\r\n        date: date//moment(date).utcOffset(-6).format()\r\n      })\r\n    }\r\n      \r\n\r\n    render(){\r\n      return (   \r\n        <Modal  visible= {this.props.visible}  transparent={true}>\r\n          <View style={styles.centeredView}>\r\n            <View style={styles.modalView}>\r\n              <Text style={styles.bigText}>Exercise Details</Text>\r\n              <View style={styles.space} />\r\n              <View>\r\n                <Text style={{ textAlignVertical: \"center\", fontWeight: \"700\" }}>Exercise Name</Text>\r\n              </View>\r\n              <TextInput style={styles.input}\r\n                underlineColorAndroid=\"transparent\"\r\n                placeholderTextColor=\"#d9bebd\"\r\n                onChangeText={(name) => this.setState({ name: name })}\r\n                defaultValue={this.state.name}\r\n                autoCapitalize=\"none\" />\r\n              <View style={styles.spaceSmall}></View>\r\n\r\n              <View>\r\n                <Text style={{ textAlignVertical: \"center\", fontWeight: \"700\" }}>Duration (minutes)</Text>\r\n              </View>\r\n              <TextInput style={styles.input}\r\n                underlineColorAndroid=\"transparent\"\r\n                placeholderTextColor=\"#d9bebd\"\r\n                onChangeText={(duration) => this.setState({ duration: duration })}\r\n                defaultValue={this.state.duration + \"\"}\r\n                autoCapitalize=\"none\" />\r\n              <View style={styles.spaceSmall}></View>\r\n              <View>\r\n                <Text style={{ textAlignVertical: \"center\", fontWeight: \"700\" }}>Calories Burnt (cal)</Text>\r\n              </View>\r\n              <TextInput style={styles.input}\r\n                underlineColorAndroid=\"transparent\"\r\n              //   placeholder=\"52\"\r\n                placeholderTextColor=\"#d9bebd\"\r\n                onChangeText={(calories) => this.setState({ calories: calories })}\r\n                defaultValue={this.state.calories + \"\"}\r\n                autoCapitalize=\"none\" />\r\n          \r\n              <View style={styles.space} />\r\n              <View>\r\n                <Text style={{ textAlignVertical: \"center\", fontWeight: \"700\" }}>Exercise Data and Time</Text>    \r\n              </View>\r\n              <View style={styles.spaceSmall}></View>\r\n              <TimePicker  date={this.state.date}  getDateTime={(data) =>this.getDateTime(data)}/>\r\n              \r\n              <View style={styles.space} />\r\n              <View>\r\n              <Text style={{ textAlignVertical: \"center\", fontWeight: \"400\" }}>Looks good! Ready to save your work?</Text>\r\n              </View>\r\n                \r\n              <View style={styles.space} />  \r\n              <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\r\n              <Button color=\"#942a21\" style={styles.buttonInline} title=\"SAVE EXERCISE\"  onPress={() => {this.handleSaveExercise()}} />\r\n              <View style={styles.spaceHorizontal} />\r\n                <Button color=\"#a1635f\" style={styles.buttonInline} title=\"NEVER MIND\" onPress={() => this.props.hideModal()} />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n     );}\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    scrollView: {\r\n      height: Dimensions.get('window').height\r\n    },\r\n    centeredView: {\r\n      flex: 1,\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      marginTop: 22\r\n    },\r\n    \r\n    modalView: {\r\n      margin: 20,\r\n      backgroundColor: \"white\",\r\n      borderRadius: 20,\r\n      padding: 35,\r\n      alignItems: \"center\",\r\n      shadowColor: \"#000\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 2\r\n      },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 5\r\n    },\r\n   \r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n    },\r\n    bigText: {\r\n      fontSize: 20,\r\n      fontWeight: \"700\",\r\n      marginBottom: 5\r\n    },\r\n    spaceSmall: {\r\n      width: 20,\r\n      height: 10,\r\n    },\r\n    space: {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    spaceHorizontal: {\r\n      display: \"flex\",\r\n      width: 20\r\n    },\r\n    buttonInline: {\r\n      display: \"flex\"\r\n    },\r\n    input: {\r\n      width: 200,\r\n      padding: 10,\r\n      margin: 5,\r\n      height: 40,\r\n      borderColor: '#c9392c',\r\n      borderWidth: 1\r\n    },\r\n    inputInline: {\r\n      flexDirection: \"row\",\r\n      display: \"flex\",\r\n      width: 200,\r\n      padding: 10,\r\n      margin: 5,\r\n      height: 40,\r\n      borderColor: '#c9392c',\r\n      borderWidth: 1\r\n    }\r\n  });\r\n  \r\n  export default ActivityModal;"]},"metadata":{},"sourceType":"module"}