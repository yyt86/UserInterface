{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\course\\\\639-UI\\\\react_native2_alpha-yyt86-main\\\\MealCard.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Avatar, Button, Card, Title, Paragraph, Chip } from 'react-native-paper';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport MealModal from \"./MealModal\";\n\nvar MealCard = function (_React$Component) {\n  _inherits(MealCard, _React$Component);\n\n  var _super = _createSuper(MealCard);\n\n  function MealCard(props) {\n    var _this;\n\n    _classCallCheck(this, MealCard);\n\n    _this = _super.call(this, props);\n\n    _this.delete = function () {\n      _this.props.deleteMeal(_this.props.id);\n    };\n\n    _this.select = function () {\n      _this.props.navigation.navigate('Food');\n    };\n\n    _this.showModal = function () {\n      return _this.setState({\n        visible: true\n      });\n    };\n\n    _this.hideModal = function () {\n      return _this.setState({\n        visible: false\n      });\n    };\n\n    _this.randomColor = function () {\n      var color = ['red', '#66CCFF', '#FFCC00', '#1C9379', '#8A7BA7'];\n      var col = color[Math.floor(Math.random() * color.length)];\n      return col;\n    };\n\n    _this.state = {\n      visible: false\n    };\n    return _this;\n  }\n\n  _createClass(MealCard, [{\n    key: \"getModal\",\n    value: function getModal() {\n      if (this.state.visible) {\n        return React.createElement(MealModal, {\n          visible: this.state.visible,\n          updateData: this.props.updateData,\n          hideModal: this.hideModal,\n          id: this.props.id,\n          date: this.props.date,\n          accessToken: this.props.accessToken,\n          name: this.props.name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }\n        });\n      }\n    }\n  }, {\n    key: \"foodChips\",\n    value: function foodChips(food) {\n      var _this2 = this;\n\n      if (food !== null && typeof food !== 'undefined') {\n        return React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }\n        }, food.map(function (item, index) {\n          return React.createElement(View, {\n            key: index,\n            style: {\n              margin: 5,\n              flexWrap: 'wrap'\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 25\n            }\n          }, React.createElement(Chip, {\n            key: index,\n            mode: \"outlined\",\n            height: 30,\n            textStyle: {\n              color: 'white',\n              fontSize: 15\n            },\n            style: {\n              backgroundColor: '#1C9379'\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }\n          }, item.name));\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.id, \"card id\");\n      return React.createElement(Card, {\n        style: styles.card,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, React.createElement(Card.Title, {\n        stytle: {\n          fontWeight: \"700\",\n          fontSize: 18\n        },\n        title: this.props.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }), React.createElement(Card.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 18\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'column'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.left,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      }, React.createElement(Paragraph, {\n        style: styles.para,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }\n      }, this.props.date, \" \"), React.createElement(Paragraph, {\n        style: styles.para,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }\n      }, \"Meal calories : \", this.props.mealFoodCal), React.createElement(Paragraph, {\n        style: styles.para,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }\n      }, \"Meal proteins : \", this.props.mealProteins), React.createElement(Paragraph, {\n        style: styles.para,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }\n      }, \"Meal fats : \", this.props.mealFats), React.createElement(Paragraph, {\n        style: styles.para,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }\n      }, \"Meal carbohydrates : \", this.props.mealCarbo)), React.createElement(View, {\n        style: styles.spaceSmall,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }), this.foodChips(this.props.foods))), React.createElement(Card.Actions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 14\n        }\n      }, React.createElement(Button, {\n        onPress: this.showModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 18\n        }\n      }, \"Edit\"), React.createElement(Button, {\n        onPress: this.delete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 18\n        }\n      }, \"Delete\"), React.createElement(Button, {\n        onPress: this.select,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 18\n        }\n      }, \"Select_food\"), this.getModal()));\n    }\n  }]);\n\n  return MealCard;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  card: {\n    margin: 4,\n    backgroundColor: \"#fff\",\n    borderRadius: 5,\n    width: Dimensions.get('window').width * 0.9\n  },\n  left: {\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  cal: {\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    fontWeight: \"600\",\n    fontSize: 16\n  },\n  mainContainer: {\n    flex: 1\n  },\n  para: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontWeight: \"400\",\n    fontSize: 14\n  }\n});\nexport default MealCard;","map":{"version":3,"sources":["F:/course/639-UI/react_native2_alpha-yyt86-main/MealCard.js"],"names":["React","Avatar","Button","Card","Title","Paragraph","Chip","MealModal","MealCard","props","delete","deleteMeal","id","select","navigation","navigate","showModal","setState","visible","hideModal","randomColor","color","col","Math","floor","random","length","state","updateData","date","accessToken","name","food","flex","map","item","index","margin","flexWrap","fontSize","backgroundColor","console","log","styles","card","fontWeight","flexDirection","left","para","mealFoodCal","mealProteins","mealFats","mealCarbo","spaceSmall","foodChips","foods","getModal","Component","StyleSheet","create","borderRadius","width","Dimensions","get","alignItems","justifyContent","cal","mainContainer"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Avatar, Button, Card, Title, Paragraph, Chip } from 'react-native-paper';\r\nimport {StyleSheet, View, Dimensions, Modal} from \"react-native\";\r\nimport MealModal from \"./MealModal\"\r\n\r\nclass MealCard extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            visible: false,\r\n        }\r\n        \r\n    }\r\n    delete = () =>{\r\n        this.props.deleteMeal(this.props.id);\r\n    }\r\n\r\n    select = () =>{\r\n        // this.props.select(food);\r\n        this.props.navigation.navigate('Food')\r\n    }\r\n\r\n    showModal = () => this.setState({visible: true});\r\n    hideModal = () => this.setState({visible: false});\r\n\r\n    getModal(){\r\n        if(this.state.visible){\r\n            return(\r\n                <MealModal visible={this.state.visible} updateData = {this.props.updateData} hideModal={this.hideModal} \r\n                id={this.props.id} date={this.props.date} accessToken={this.props.accessToken} name={this.props.name} \r\n                           />\r\n            )\r\n        }\r\n    }\r\n\r\n    randomColor = () => {\r\n        let color = ['red', '#66CCFF', '#FFCC00', '#1C9379', '#8A7BA7'];\r\n        let col = color[Math.floor(Math.random() * color.length)];\r\n        return col;\r\n    };\r\n\r\n    foodChips(food){\r\n        if(food !== null && (typeof food !== 'undefined')){\r\n        return(\r\n            <View style = {{flex:1}}>{\r\n                food.map((item, index) => {\r\n                    return (\r\n                        <View key={index} style={{margin: 5,flexWrap: 'wrap',}}>\r\n                        <Chip key={index} mode=\"outlined\" height={30} \r\n                        textStyle={{ color:'white',fontSize: 15 }} \r\n                        style={{ backgroundColor: '#1C9379' }} \r\n                        // onPress={() => Alert.alert('Clicked Chip'+ item.name)}\r\n                        >\r\n                        {item.name}\r\n                        </Chip>\r\n                    </View>\r\n                    );\r\n                 })}\r\n            </View>\r\n        )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        console.log(this.props.id, \"card id\")\r\n        return(\r\n            <Card style={styles.card}>\r\n            <Card.Title stytle={{fontWeight: \"700\", fontSize: 18}} title={this.props.name} />\r\n                 <Card.Content>\r\n                    <View style={{flexDirection: 'column'}}>\r\n                        <View style={styles.left}>\r\n                            <Paragraph style={styles.para}>{this.props.date} </Paragraph>\r\n                            <Paragraph style={styles.para}>Meal calories : {this.props. mealFoodCal}</Paragraph>\r\n                            <Paragraph style={styles.para}>Meal proteins : {this.props. mealProteins}</Paragraph>\r\n                            <Paragraph style={styles.para}>Meal fats : {this.props. mealFats}</Paragraph>\r\n                            <Paragraph style={styles.para}>Meal carbohydrates : {this.props. mealCarbo}</Paragraph>\r\n                        </View>\r\n                        <View style={styles.spaceSmall}></View>\r\n                        {this.foodChips(this.props.foods)}\r\n                    </View>\r\n                     \r\n                 </Card.Content>\r\n             <Card.Actions>\r\n             \r\n      \r\n                 <Button onPress={this.showModal}>Edit</Button>\r\n                 <Button onPress={this.delete}>Delete</Button>\r\n                 <Button onPress={this.select}>Select_food</Button>\r\n                 {/* <Portal> */}\r\n                {/* <Modal visible={this.state.visible}> */}\r\n                {/* <MealModal visible={this.state.visible}  id={this.props.id} accessToken={this.props.accessToken} /> */}\r\n                {/* <Button color=\"#a1635f\" style={styles.buttonInline} title=\"NEVERMIND\" onPress={ this.hideModal} />\r\n                 </Modal> */}\r\n            {/* </Portal> */}\r\n            {this.getModal()}\r\n             </Card.Actions>\r\n             </Card>\r\n\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    card:{\r\n        margin: 4,\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: 5,\r\n        width: Dimensions.get('window').width *0.9,\r\n    },\r\n    left:{\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start'\r\n    },\r\n\r\n    cal:{\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        fontWeight: \"600\",\r\n         fontSize: 16 ,\r\n    },\r\n    mainContainer: {\r\n        flex: 1\r\n      },\r\n\r\n      para:{\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        fontWeight: \"400\",\r\n         fontSize: 14 ,\r\n    },\r\n    \r\n});\r\n\r\nexport default MealCard;"]},"metadata":{},"sourceType":"module"}