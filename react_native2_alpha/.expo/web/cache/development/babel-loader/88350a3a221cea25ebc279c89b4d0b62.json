{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\course\\\\639-UI\\\\react_native2_alpha-yyt86-main\\\\TodayView.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport moment from \"moment\";\nimport { Modal, Portal, Title, Provider, Surface, Headline } from 'react-native-paper';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport MealCard from \"./MealCard\";\nimport ActivityCard from \"./ActivityCard\";\n\nvar TodayView = function (_React$Component) {\n  _inherits(TodayView, _React$Component);\n\n  var _super = _createSuper(TodayView);\n\n  function TodayView(props) {\n    var _this;\n\n    _classCallCheck(this, TodayView);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      todayExercises: [],\n      todayMeals: [],\n      currentDate: new Date(),\n      dailyDuration: 0.0,\n      dailyCalories: 0.0,\n      dailyProtein: 0.0,\n      dailyCarbo: 0.0,\n      dailyActivity: 0,\n      dailyFats: 0.0,\n      dailyFoodCal: 0.0,\n      accessToken: '',\n      activityArray: ''\n    };\n    return _this;\n  }\n\n  _createClass(TodayView, [{\n    key: \"getStoredData\",\n    value: function getStoredData(key) {\n      var value;\n      return _regeneratorRuntime.async(function getStoredData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n            case 3:\n              value = _context.sent;\n              this.setState(_defineProperty({}, key, value));\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 7]], Promise);\n    }\n  }, {\n    key: \"getMeals\",\n    value: function getMeals() {\n      var _this2 = this;\n\n      var tempMeals = [];\n      var todayProteins = 0.0;\n      var todayCarbo = 0.0;\n      var todayFats = 0.0;\n      var todayFoodCal = 0.0;\n      fetch('https://mysqlcs639.cs.wisc.edu/meals/', {\n        method: 'GET',\n        headers: {\n          'x-access-token': this.state.accessToken\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        console.log(res, \"res meals\");\n\n        _this2.setState({\n          todayMeals: []\n        });\n\n        tempMeals = res.meals;\n\n        if (tempMeals !== null && typeof tempMeals !== 'undefined') {\n          var _loop = function _loop(i) {\n            if (moment(tempMeals[i].date).format('DD-MM-YYYY') === moment(_this2.state.currentDate).format('DD-MM-YYYY')) {\n              var meal = tempMeals[i];\n              var mealProteins = 0.0;\n              var mealCarbo = 0.0;\n              var mealFats = 0.0;\n              var mealFoodCal = 0.0;\n              fetch('https://mysqlcs639.cs.wisc.edu/meals/' + meal.id + '/foods', {\n                method: 'GET',\n                headers: {\n                  'x-access-token': _this2.state.accessToken\n                }\n              }).then(function (res2) {\n                return res2.json();\n              }).then(function (res2) {\n                tempMeals[i].foods = res2.foods;\n\n                if (res2.foods !== null && typeof res2.foods !== 'undefined') {\n                  for (var _iterator = _createForOfIteratorHelperLoose(res2.foods.values()), _step; !(_step = _iterator()).done;) {\n                    var food = _step.value;\n                    mealProteins += food.protein;\n                    mealCarbo += food.carbohydrates;\n                    mealFats += food.fat;\n                    mealFoodCal += food.calories;\n                    todayProteins += food.protein;\n                    todayCarbo += food.carbohydrates;\n                    todayFats += food.fat;\n                    todayFoodCal = +food.calories;\n                  }\n                }\n\n                tempMeals[i].mealProteins = mealProteins;\n                tempMeals[i].mealCarbo = mealCarbo;\n                tempMeals[i].mealFats = mealFats;\n                tempMeals[i].mealFoodCal = mealFoodCal;\n\n                _this2.setState(function (prevState) {\n                  return {\n                    todayMeals: [].concat(_toConsumableArray(prevState.todayMeals), [tempMeals[i]])\n                  };\n                });\n\n                _this2.setState({\n                  dailyProtein: todayProteins\n                });\n\n                _this2.setState({\n                  dailyCarbo: todayCarbo\n                });\n\n                _this2.setState({\n                  dailyFats: todayFats\n                });\n\n                _this2.setState({\n                  dailyFoodCal: todayFoodCal\n                });\n              });\n            }\n          };\n\n          for (var i = 0; i < tempMeals.length; i++) {\n            _loop(i);\n          }\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"getMeal\",\n    value: function getMeal() {\n      var _this3 = this;\n\n      var todayProteins = 0.0;\n      var todayCarbo = 0.0;\n      var todayFats = 0.0;\n      var todayFoodCal = 0.0;\n      fetch('https://mysqlcs639.cs.wisc.edu/meals/', {\n        method: 'GET',\n        headers: {\n          'x-access-token': this.state.accessToken\n        }\n      }).then(function (res1) {\n        return res1.json();\n      }).then(function (res1) {\n        if (res1.meals !== null && typeof res1.meals !== 'undefined') {\n          var _loop2 = function _loop2(meal) {\n            if (moment(meal.date).format('DD-MM-YYYY') === moment(_this3.state.currentDate).format('DD-MM-YYYY')) {\n              _this3.setState(function (prevState) {\n                return {\n                  todayMeals: [].concat(_toConsumableArray(prevState.todayMeals), [meal])\n                };\n              });\n\n              fetch('https://mysqlcs639.cs.wisc.edu/meals/' + meal.id + '/foods', {\n                method: 'GET',\n                headers: {\n                  'x-access-token': _this3.state.accessToken\n                }\n              }).then(function (res2) {\n                return res2.json();\n              }).then(function (res2) {\n                for (var _iterator3 = _createForOfIteratorHelperLoose(res2.foods.values()), _step3; !(_step3 = _iterator3()).done;) {\n                  var food = _step3.value;\n                  todayProteins += food.protein;\n                  todayCarbo += food.carbohydrates;\n                  todayFats += food.fat;\n                  todayFoodCal = +food.calories;\n                }\n\n                _this3.setState({\n                  dailyProtein: todayProteins\n                });\n\n                _this3.setState({\n                  dailyCarbo: todayCarbo\n                });\n\n                _this3.setState({\n                  dailyFats: todayFats\n                });\n\n                _this3.setState({\n                  dailyFoodCal: todayFoodCal\n                });\n              });\n            }\n          };\n\n          for (var _iterator2 = _createForOfIteratorHelperLoose(res1.meals.values()), _step2; !(_step2 = _iterator2()).done;) {\n            var meal = _step2.value;\n\n            _loop2(meal);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"displayMeals\",\n    value: function displayMeals() {\n      var cardList = [];\n\n      for (var i = 0; i < this.state.todayMeals.length; i++) {\n        var value = this.state.todayMeals[i];\n        var currentDate = moment(value.date).format(\"MMMM D, YYYY\");\n        cardList.push(React.createElement(MealCard, {\n          key: i,\n          name: value.name,\n          date: value.date,\n          food: value.food,\n          mealProteins: value.mealProteins,\n          id: value.id,\n          accessToken: this.state.accessToken,\n          mealCarbo: value.mealCarbo,\n          mealFats: value.mealFats,\n          mealFoodCal: value.mealFoodCal,\n          foods: value.foods,\n          todaymode: true,\n          mealmode: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      return cardList;\n    }\n  }, {\n    key: \"getExercise\",\n    value: function getExercise() {\n      var _this4 = this;\n\n      var todayDuration = 0;\n      var todarCalorie = 0;\n      fetch('https://mysqlcs639.cs.wisc.edu/activities/', {\n        method: 'GET',\n        headers: {\n          'x-access-token': this.state.accessToken\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        console.log(res, \"res in today\");\n\n        _this4.setState({\n          todayExercises: []\n        });\n\n        if (res.activities !== null && typeof res.activities !== 'undefined') {\n          var _loop3 = function _loop3(activity) {\n            if (moment(activity.date).format(\"MMM Do YY\") === moment(_this4.state.currentDate).format(\"MMM Do YY\")) {\n              _this4.setState(function (prevState) {\n                return {\n                  todayExercises: [].concat(_toConsumableArray(prevState.todayExercises), [activity])\n                };\n              });\n\n              todayDuration += activity.duration;\n              todarCalorie += activity.calories;\n\n              _this4.setState({\n                dailyActivity: _this4.state.todayExercises.length\n              });\n\n              _this4.setState({\n                dailyDuration: todayDuration\n              });\n\n              _this4.setState({\n                dailyCalories: todarCalorie\n              });\n            }\n          };\n\n          for (var _iterator4 = _createForOfIteratorHelperLoose(res.activities.values()), _step4; !(_step4 = _iterator4()).done;) {\n            var activity = _step4.value;\n\n            _loop3(activity);\n          }\n        }\n\n        console.log(_this4.state.todayExercises, \"today exercise\");\n      });\n    }\n  }, {\n    key: \"updateData\",\n    value: function updateData() {\n      var _this5 = this;\n\n      fetch('https://mysqlcs639.cs.wisc.edu/activities/', {\n        method: 'GET',\n        headers: {\n          'x-access-token': this.state.accessToken\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        console.log(res, \"res\");\n\n        _this5.setState({\n          activityArray: res.activities\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this6 = this;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(this.getStoredData(\"accessToken\"));\n\n            case 2:\n              console.log(this.state.accessToken, \"token\");\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(this.getStoredData(\"username\"));\n\n            case 5:\n              this.getExercise();\n              this.getMeals();\n              console.log(this.state.dailyDuration, \"this.state.dailyDuration\");\n              console.log(this.state.dailyCalories, \"this.state.dailyCalories\");\n              console.log(this.state.dailyCarbo, \"this.state.dailyCarbo\");\n              console.log(this.state.dailyProtein, \"this.state.dailyProtein\");\n              this.navListener = this.props.navigation.addListener('focus', function () {\n                console.log(_this6.state.todayExercises, \"todayExercises\");\n\n                _this6.getExercise();\n\n                _this6.getMeals();\n              });\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.navListener();\n    }\n  }, {\n    key: \"displayExercises\",\n    value: function displayExercises() {\n      var cardList = [];\n\n      for (var i = 0; i < this.state.todayExercises.length; i++) {\n        var value = this.state.todayExercises[i];\n        cardList.push(React.createElement(ActivityCard, {\n          key: i,\n          name: value.name,\n          date: value.date,\n          duration: value.duration,\n          calories: value.calories,\n          id: value.id,\n          accessToken: this.state.accessToken,\n          todaymode: true,\n          mealmode: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 25\n          }\n        }));\n      }\n\n      return cardList;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      return React.createElement(ScrollView, {\n        style: styles.mainContainer,\n        contentContainerStyle: {\n          flexGrow: 11,\n          justifyContent: 'center',\n          alignItems: \"center\"\n        },\n        keyboardShouldPersistTaps: \"handled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 15\n        }\n      }, React.createElement(Icon, {\n        name: \"calendar-day\",\n        size: 40,\n        color: \"#900\",\n        style: {\n          marginRight: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 15\n        }\n      }), React.createElement(Text, {\n        style: styles.bigText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 15\n        }\n      }, \"Today\")), React.createElement(Headline, {\n        style: {\n          fontWeight: '600',\n          color: '#900',\n          fontSize: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 15\n        }\n      }, moment(new Date()).format('YYYY/MM/DD, h:mm:ss a')), React.createElement(View, {\n        style: styles.space,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 15\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 17\n        }\n      }, React.createElement(Title, {\n        style: {\n          fontWeight: '700',\n          fontSize: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }\n      }, \" Exercises\"), React.createElement(View, {\n        style: styles.spaceSmall,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }\n      }), this.displayExercises(), React.createElement(View, {\n        style: styles.space,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 20\n        }\n      }), React.createElement(Title, {\n        style: {\n          fontWeight: '700',\n          fontSize: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 20\n        }\n      }, \" Meals\"), this.displayMeals()), React.createElement(View, {\n        style: styles.space,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 17\n        }\n      }), React.createElement(TouchableHighlight, {\n        style: styles.openButton,\n        onPress: function onPress() {\n          _this7.props.navigation.navigate('Comparison', {\n            dailyDuration: _this7.state.dailyDuration,\n            dailyCalories: _this7.state.dailyCalories,\n            dailyProtein: _this7.state.dailyProtein,\n            dailyCarbo: _this7.state.dailyCarbo,\n            dailyFats: _this7.state.dailyFats,\n            dailyFoodCal: _this7.state.dailyFoodCal\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 21\n        }\n      }, \"Check performance\")));\n    }\n  }]);\n\n  return TodayView;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  scrollView: {\n    height: Dimensions.get('window').height\n  },\n  mainContainer: {\n    flex: 1\n  },\n  scrollViewContainer: {},\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  spaceSmall: {\n    width: 20,\n    height: 10\n  },\n  space: {\n    width: 20,\n    height: 20\n  },\n  bigText: {\n    fontSize: 32,\n    fontWeight: \"700\",\n    marginBottom: 5\n  },\n  surface: {\n    flexDirection: 'row',\n    padding: 10,\n    height: 70,\n    width: Dimensions.get('window').width * 0.8,\n    backgroundColor: \"#FAFAD2\",\n    borderRadius: 8,\n    elevation: 6\n  },\n  surface1: {\n    flexDirection: 'row',\n    padding: 10,\n    height: 200,\n    backgroundColor: \"#FAFAD2\",\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    display: 'flex',\n    height: 30,\n    borderRadius: 6,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '90%',\n    backgroundColor: '#2AC062',\n    shadowColor: '#2AC062',\n    shadowOpacity: 0.5,\n    shadowOffset: {\n      height: 10,\n      width: 0\n    },\n    shadowRadius: 10\n  },\n  opacity: {\n    height: 30,\n    borderRadius: 6,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: Dimensions.get('window').width * 0.8,\n    backgroundColor: '#900'\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontSize: 16\n  },\n  openButton: {\n    backgroundColor: \"#900\",\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  }\n});\nexport default TodayView;","map":{"version":3,"sources":["F:/course/639-UI/react_native2_alpha-yyt86-main/TodayView.js"],"names":["React","moment","Modal","Portal","Title","Provider","Surface","Headline","AsyncStorage","Icon","MealCard","ActivityCard","TodayView","props","state","todayExercises","todayMeals","currentDate","Date","dailyDuration","dailyCalories","dailyProtein","dailyCarbo","dailyActivity","dailyFats","dailyFoodCal","accessToken","activityArray","key","getItem","value","setState","console","log","tempMeals","todayProteins","todayCarbo","todayFats","todayFoodCal","fetch","method","headers","then","res","json","meals","i","date","format","meal","mealProteins","mealCarbo","mealFats","mealFoodCal","id","res2","foods","values","food","protein","carbohydrates","fat","calories","prevState","length","catch","err","res1","cardList","push","name","todayDuration","todarCalorie","activities","activity","duration","getStoredData","getExercise","getMeals","navListener","navigation","addListener","styles","mainContainer","flexGrow","justifyContent","alignItems","flexDirection","flexWrap","marginRight","bigText","fontWeight","color","fontSize","space","spaceSmall","displayExercises","displayMeals","openButton","navigate","textStyle","Component","StyleSheet","create","scrollView","height","Dimensions","get","flex","scrollViewContainer","container","backgroundColor","width","marginBottom","surface","padding","borderRadius","elevation","surface1","button","display","shadowColor","shadowOpacity","shadowOffset","shadowRadius","opacity","buttonText","textAlign"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,QAA/B,EAAyCC,OAAzC,EAAmDC,QAAnD,QAAoE,oBAApE;;;;;;;;;AAGA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,IAAP;AACA,OAAOC,QAAP;AACA,OAAOC,YAAP;;IAEMC,S;;;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE,EADP;AAETC,MAAAA,UAAU,EAAE,EAFH;AAGTC,MAAAA,WAAW,EAAE,IAAIC,IAAJ,EAHJ;AAITC,MAAAA,aAAa,EAAE,GAJN;AAKTC,MAAAA,aAAa,EAAE,GALN;AAMTC,MAAAA,YAAY,EAAE,GANL;AAOTC,MAAAA,UAAU,EAAE,GAPH;AAQTC,MAAAA,aAAa,EAAE,CARN;AASTC,MAAAA,SAAS,EAAE,GATF;AAUTC,MAAAA,YAAY,EAAE,GAVL;AAWTC,MAAAA,WAAW,EAAE,EAXJ;AAYTC,MAAAA,aAAa,EAAC;AAZL,KAAb;AAFe;AAkBlB;;;;kCAEmBC,G;;;;;;;;+CAEMpB,YAAY,CAACqB,OAAb,CAAqBD,GAArB,C;;;AAAdE,cAAAA,K;AACJ,mBAAKC,QAAL,qBAAgBH,GAAhB,EAAsBE,KAAtB;;;;;;;AAEAE,cAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;+BAIE;AAAA;;AACR,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,aAAa,GAAG,GAApB;AACA,UAAIC,UAAU,GAAG,GAAjB;AACA,UAAIC,SAAS,GAAG,GAAhB;AACA,UAAIC,YAAY,GAAG,GAAnB;AACEC,MAAAA,KAAK,CAAC,uCAAD,EAA0C;AAC7CC,QAAAA,MAAM,EAAE,KADqC;AAE7CC,QAAAA,OAAO,EAAE;AAAE,4BAAkB,KAAK3B,KAAL,CAAWY;AAA/B;AAFoC,OAA1C,CAAL,CAIGgB,IAJH,CAIQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAJX,EAKGF,IALH,CAKQ,UAAAC,GAAG,EAAI;AACXX,QAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ,EAAiB,WAAjB;;AAEE,QAAA,MAAI,CAACZ,QAAL,CAAc;AAACf,UAAAA,UAAU,EAAE;AAAb,SAAd;;AACAkB,QAAAA,SAAS,GAAGS,GAAG,CAACE,KAAhB;;AACA,YAAGX,SAAS,KAAK,IAAd,IAAuB,OAAOA,SAAP,KAAqB,WAA/C,EAA4D;AAAA,qCACnDY,CADmD;AAE1D,gBAAG7C,MAAM,CAACiC,SAAS,CAACY,CAAD,CAAT,CAAaC,IAAd,CAAN,CAA0BC,MAA1B,CAAiC,YAAjC,MAAmD/C,MAAM,CAAC,MAAI,CAACa,KAAL,CAAWG,WAAZ,CAAN,CAA+B+B,MAA/B,CAAsC,YAAtC,CAAtD,EAA2G;AAC1G,kBAAIC,IAAI,GAAGf,SAAS,CAACY,CAAD,CAApB;AAEA,kBAAII,YAAY,GAAG,GAAnB;AACA,kBAAIC,SAAS,GAAG,GAAhB;AACD,kBAAIC,QAAQ,GAAG,GAAf;AACA,kBAAIC,WAAW,GAAG,GAAlB;AACEd,cAAAA,KAAK,CAAC,0CAA0CU,IAAI,CAACK,EAA/C,GAAoD,QAArD,EAA+D;AAC9Dd,gBAAAA,MAAM,EAAE,KADsD;AAE7DC,gBAAAA,OAAO,EAAE;AAAE,oCAAkB,MAAI,CAAC3B,KAAL,CAAWY;AAA/B;AAFoD,eAA/D,CAAL,CAIGgB,IAJH,CAIQ,UAAAa,IAAI;AAAA,uBAAIA,IAAI,CAACX,IAAL,EAAJ;AAAA,eAJZ,EAKGF,IALH,CAKQ,UAAAa,IAAI,EAAI;AACZrB,gBAAAA,SAAS,CAACY,CAAD,CAAT,CAAaU,KAAb,GAAqBD,IAAI,CAACC,KAA1B;;AACA,oBAAGD,IAAI,CAACC,KAAL,KAAe,IAAf,IAAwB,OAAOD,IAAI,CAACC,KAAZ,KAAsB,WAAjD,EAA8D;AAC5D,uEAAkBD,IAAI,CAACC,KAAL,CAAWC,MAAX,EAAlB,wCAAsC;AAAA,wBAA5BC,IAA4B;AAClCR,oBAAAA,YAAY,IAAIQ,IAAI,CAACC,OAArB;AACAR,oBAAAA,SAAS,IAAIO,IAAI,CAACE,aAAlB;AACAR,oBAAAA,QAAQ,IAAIM,IAAI,CAACG,GAAjB;AACAR,oBAAAA,WAAW,IAAIK,IAAI,CAACI,QAApB;AACA3B,oBAAAA,aAAa,IAAIuB,IAAI,CAACC,OAAtB;AACAvB,oBAAAA,UAAU,IAAIsB,IAAI,CAACE,aAAnB;AACAvB,oBAAAA,SAAS,IAAIqB,IAAI,CAACG,GAAlB;AACAvB,oBAAAA,YAAY,GAAG,CAACoB,IAAI,CAACI,QAArB;AACH;AACF;;AACC5B,gBAAAA,SAAS,CAACY,CAAD,CAAT,CAAaI,YAAb,GAA4BA,YAA5B;AACAhB,gBAAAA,SAAS,CAACY,CAAD,CAAT,CAAaK,SAAb,GAAyBA,SAAzB;AACAjB,gBAAAA,SAAS,CAACY,CAAD,CAAT,CAAaM,QAAb,GAAwBA,QAAxB;AACAlB,gBAAAA,SAAS,CAACY,CAAD,CAAT,CAAaO,WAAb,GAA2BA,WAA3B;;AACF,gBAAA,MAAI,CAACtB,QAAL,CAAc,UAAAgC,SAAS;AAAA,yBAAK;AAC1B/C,oBAAAA,UAAU,+BAAM+C,SAAS,CAAC/C,UAAhB,IAA4BkB,SAAS,CAACY,CAAD,CAArC;AADgB,mBAAL;AAAA,iBAAvB;;AAIA,gBAAA,MAAI,CAACf,QAAL,CAAc;AAACV,kBAAAA,YAAY,EAAEc;AAAf,iBAAd;;AACA,gBAAA,MAAI,CAACJ,QAAL,CAAc;AAACT,kBAAAA,UAAU,EAAEc;AAAb,iBAAd;;AACA,gBAAA,MAAI,CAACL,QAAL,CAAc;AAACP,kBAAAA,SAAS,EAAEa;AAAZ,iBAAd;;AACA,gBAAA,MAAI,CAACN,QAAL,CAAc;AAACN,kBAAAA,YAAY,EAAEa;AAAf,iBAAd;AAGD,eAjCH;AAkCC;AA3CuD;;AAC3D,eAAI,IAAIQ,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGZ,SAAS,CAAC8B,MAA7B,EAAqClB,CAAC,EAAtC,EAAyC;AAAA,kBAAjCA,CAAiC;AA2CxC;AACD;AAEE,OAzDT,EA0DGmB,KA1DH,CA0DS,UAAAC,GAAG,EAAG;AAAClC,QAAAA,OAAO,CAACC,GAAR,CAAYiC,GAAZ;AAAiB,OA1DjC;AA2DH;;;8BAGQ;AAAA;;AACL,UAAI/B,aAAa,GAAG,GAApB;AACA,UAAIC,UAAU,GAAG,GAAjB;AACA,UAAIC,SAAS,GAAG,GAAhB;AACA,UAAIC,YAAY,GAAG,GAAnB;AACAC,MAAAA,KAAK,CAAC,uCAAD,EAA0C;AAC7CC,QAAAA,MAAM,EAAE,KADqC;AAE7CC,QAAAA,OAAO,EAAE;AAAE,4BAAkB,KAAK3B,KAAL,CAAWY;AAA/B;AAFoC,OAA1C,CAAL,CAIGgB,IAJH,CAIQ,UAAAyB,IAAI;AAAA,eAAIA,IAAI,CAACvB,IAAL,EAAJ;AAAA,OAJZ,EAKGF,IALH,CAKQ,UAAAyB,IAAI,EAAI;AAEZ,YAAGA,IAAI,CAACtB,KAAL,KAAe,IAAf,IAAwB,OAAOsB,IAAI,CAACtB,KAAZ,KAAsB,WAAjD,EAA8D;AAAA,uCAClDI,IADkD;AAExD,gBAAGhD,MAAM,CAACgD,IAAI,CAACF,IAAN,CAAN,CAAkBC,MAAlB,CAAyB,YAAzB,MAA2C/C,MAAM,CAAC,MAAI,CAACa,KAAL,CAAWG,WAAZ,CAAN,CAA+B+B,MAA/B,CAAsC,YAAtC,CAA9C,EAAmG;AACjG,cAAA,MAAI,CAACjB,QAAL,CAAc,UAAAgC,SAAS;AAAA,uBAAK;AACxB/C,kBAAAA,UAAU,+BAAM+C,SAAS,CAAC/C,UAAhB,IAA4BiC,IAA5B;AADc,iBAAL;AAAA,eAAvB;;AAGEV,cAAAA,KAAK,CAAC,0CAA0CU,IAAI,CAACK,EAA/C,GAAoD,QAArD,EAA+D;AAClEd,gBAAAA,MAAM,EAAE,KAD0D;AAEjEC,gBAAAA,OAAO,EAAE;AAAE,oCAAkB,MAAI,CAAC3B,KAAL,CAAWY;AAA/B;AAFwD,eAA/D,CAAL,CAIDgB,IAJC,CAII,UAAAa,IAAI;AAAA,uBAAIA,IAAI,CAACX,IAAL,EAAJ;AAAA,eAJR,EAKDF,IALC,CAKI,UAAAa,IAAI,EAAI;AACV,sEAAkBA,IAAI,CAACC,KAAL,CAAWC,MAAX,EAAlB,2CAAsC;AAAA,sBAA5BC,IAA4B;AAClCvB,kBAAAA,aAAa,IAAIuB,IAAI,CAACC,OAAtB;AACAvB,kBAAAA,UAAU,IAAIsB,IAAI,CAACE,aAAnB;AACAvB,kBAAAA,SAAS,IAAIqB,IAAI,CAACG,GAAlB;AACAvB,kBAAAA,YAAY,GAAG,CAACoB,IAAI,CAACI,QAArB;AACH;;AACH,gBAAA,MAAI,CAAC/B,QAAL,CAAc;AAACV,kBAAAA,YAAY,EAAEc;AAAf,iBAAd;;AACA,gBAAA,MAAI,CAACJ,QAAL,CAAc;AAACT,kBAAAA,UAAU,EAAEc;AAAb,iBAAd;;AACA,gBAAA,MAAI,CAACL,QAAL,CAAc;AAACP,kBAAAA,SAAS,EAAEa;AAAZ,iBAAd;;AACA,gBAAA,MAAI,CAACN,QAAL,CAAc;AAACN,kBAAAA,YAAY,EAAEa;AAAf,iBAAd;AACD,eAhBC;AAiBD;AAvBqD;;AAC5D,gEAAkB6B,IAAI,CAACtB,KAAL,CAAWY,MAAX,EAAlB,2CAAsC;AAAA,gBAA5BR,IAA4B;;AAAA,mBAA5BA,IAA4B;AAuBrC;AACF;AACI,OAjCT;AAkCH;;;mCAmBa;AACZ,UAAImB,QAAQ,GAAG,EAAf;;AACA,WAAK,IAAItB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKhC,KAAL,CAAWE,UAAX,CAAsBgD,MAA1C,EAAkDlB,CAAC,EAAnD,EAAsD;AAEpD,YAAIhB,KAAK,GAAG,KAAKhB,KAAL,CAAWE,UAAX,CAAsB8B,CAAtB,CAAZ;AAGE,YAAI7B,WAAW,GAAGhB,MAAM,CAAC6B,KAAK,CAACiB,IAAP,CAAN,CAAmBC,MAAnB,CAA0B,cAA1B,CAAlB;AACAoB,QAAAA,QAAQ,CAACC,IAAT,CACA,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEvB,CAAf;AAAkB,UAAA,IAAI,EAAEhB,KAAK,CAACwC,IAA9B;AAAoC,UAAA,IAAI,EAAExC,KAAK,CAACiB,IAAhD;AACiB,UAAA,IAAI,EAAEjB,KAAK,CAAC4B,IAD7B;AACmC,UAAA,YAAY,EAAE5B,KAAK,CAACoB,YADvD;AAEiB,UAAA,EAAE,EAAEpB,KAAK,CAACwB,EAF3B;AAE+B,UAAA,WAAW,EAAE,KAAKxC,KAAL,CAAWY,WAFvD;AAGiB,UAAA,SAAS,EAAEI,KAAK,CAACqB,SAHlC;AAG6C,UAAA,QAAQ,EAAErB,KAAK,CAACsB,QAH7D;AAIiB,UAAA,WAAW,EAAEtB,KAAK,CAACuB,WAJpC;AAIiD,UAAA,KAAK,EAAEvB,KAAK,CAAC0B,KAJ9D;AAKgB,UAAA,SAAS,EAAI,IAL7B;AAKmC,UAAA,QAAQ,EAAE,KAL7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAQH;;AACD,aAAOY,QAAP;AACH;;;kCAEc;AAAA;;AACT,UAAIG,aAAa,GAAG,CAApB;AACA,UAAIC,YAAY,GAAG,CAAnB;AACAjC,MAAAA,KAAK,CAAC,4CAAD,EAA+C;AAClDC,QAAAA,MAAM,EAAE,KAD0C;AAElDC,QAAAA,OAAO,EAAE;AAAE,4BAAkB,KAAK3B,KAAL,CAAWY;AAA/B;AAFyC,OAA/C,CAAL,CAIGgB,IAJH,CAIQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAJX,EAKGF,IALH,CAKQ,UAAAC,GAAG,EAAI;AACXX,QAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ,EAAiB,cAAjB;;AACA,QAAA,MAAI,CAACZ,QAAL,CAAc;AAAChB,UAAAA,cAAc,EAAE;AAAjB,SAAd;;AACA,YAAG4B,GAAG,CAAC8B,UAAJ,KAAmB,IAAnB,IAA4B,OAAO9B,GAAG,CAAC8B,UAAX,KAA0B,WAAzD,EAAsE;AAAA,uCAC1DC,QAD0D;AAEhE,gBAAGzE,MAAM,CAACyE,QAAQ,CAAC3B,IAAV,CAAN,CAAsBC,MAAtB,CAA6B,WAA7B,MAA8C/C,MAAM,CAAC,MAAI,CAACa,KAAL,CAAWG,WAAZ,CAAN,CAA+B+B,MAA/B,CAAsC,WAAtC,CAAjD,EAAqG;AACnG,cAAA,MAAI,CAACjB,QAAL,CAAc,UAAAgC,SAAS;AAAA,uBAAK;AACxBhD,kBAAAA,cAAc,+BAAMgD,SAAS,CAAChD,cAAhB,IAAgC2D,QAAhC;AADU,iBAAL;AAAA,eAAvB;;AAGEH,cAAAA,aAAa,IAAIG,QAAQ,CAACC,QAA1B;AACAH,cAAAA,YAAY,IAAIE,QAAQ,CAACZ,QAAzB;;AACA,cAAA,MAAI,CAAC/B,QAAL,CAAc;AAACR,gBAAAA,aAAa,EAAE,MAAI,CAACT,KAAL,CAAWC,cAAX,CAA0BiD;AAA1C,eAAd;;AACA,cAAA,MAAI,CAACjC,QAAL,CAAc;AAACZ,gBAAAA,aAAa,EAAEoD;AAAhB,eAAd;;AACA,cAAA,MAAI,CAACxC,QAAL,CAAc;AAACX,gBAAAA,aAAa,EAAEoD;AAAhB,eAAd;AACP;AAXmE;;AACpE,gEAAsB7B,GAAG,CAAC8B,UAAJ,CAAehB,MAAf,EAAtB,2CAA8C;AAAA,gBAApCiB,QAAoC;;AAAA,mBAApCA,QAAoC;AAW/C;AACA;;AACD1C,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACnB,KAAL,CAAWC,cAAvB,EAAuC,gBAAvC;AACD,OAvBH;AAwBH;;;iCAEW;AAAA;;AACVwB,MAAAA,KAAK,CAAC,4CAAD,EAA+C;AAClDC,QAAAA,MAAM,EAAE,KAD0C;AAElDC,QAAAA,OAAO,EAAE;AAAE,4BAAkB,KAAK3B,KAAL,CAAWY;AAA/B;AAFyC,OAA/C,CAAL,CAIGgB,IAJH,CAIQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAJX,EAKGF,IALH,CAKQ,UAAAC,GAAG,EAAI;AACXX,QAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ,EAAiB,KAAjB;;AACE,QAAA,MAAI,CAACZ,QAAL,CAAc;AAACJ,UAAAA,aAAa,EAAGgB,GAAG,CAAC8B;AAArB,SAAd;AAcH,OArBH,EAsBGR,KAtBH,CAsBS,UAAAC,GAAG,EAAG;AAAClC,QAAAA,OAAO,CAACC,GAAR,CAAYiC,GAAZ;AAAiB,OAtBjC;AAuBH;;;;;;;;;;;+CA2BW,KAAKU,aAAL,CAAmB,aAAnB,C;;;AACN5C,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWY,WAAvB,EAAoC,OAApC;;+CACM,KAAKkD,aAAL,CAAmB,UAAnB,C;;;AACN,mBAAKC,WAAL;AACA,mBAAKC,QAAL;AACA9C,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWK,aAAvB,EAAsC,0BAAtC;AACAa,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWM,aAAvB,EAAsC,0BAAtC;AACAY,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWQ,UAAvB,EAAmC,uBAAnC;AACAU,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWO,YAAvB,EAAqC,yBAArC;AAEA,mBAAK0D,WAAL,GAAmB,KAAKlE,KAAL,CAAWmE,UAAX,CAAsBC,WAAtB,CAAkC,OAAlC,EAA2C,YAAM;AAClEjD,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACnB,KAAL,CAAWC,cAAvB,EAAuC,gBAAvC;;AACA,gBAAA,MAAI,CAAC8D,WAAL;;AACA,gBAAA,MAAI,CAACC,QAAL;AACF,eAJmB,CAAnB;;;;;;;;;;;2CAUmB;AAErB,WAAKC,WAAL;AACF;;;uCAoBkB;AAChB,UAAIX,QAAQ,GAAG,EAAf;;AAEA,WAAK,IAAItB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKhC,KAAL,CAAWC,cAAX,CAA0BiD,MAA9C,EAAsDlB,CAAC,EAAvD,EAA0D;AAExD,YAAIhB,KAAK,GAAG,KAAKhB,KAAL,CAAWC,cAAX,CAA0B+B,CAA1B,CAAZ;AAoBEsB,QAAAA,QAAQ,CAACC,IAAT,CAAc,oBAAC,YAAD;AAAc,UAAA,GAAG,EAAEvB,CAAnB;AAAsB,UAAA,IAAI,EAAEhB,KAAK,CAACwC,IAAlC;AAAwC,UAAA,IAAI,EAAExC,KAAK,CAACiB,IAApD;AACZ,UAAA,QAAQ,EAAEjB,KAAK,CAAC6C,QADJ;AACc,UAAA,QAAQ,EAAE7C,KAAK,CAACgC,QAD9B;AAEZ,UAAA,EAAE,EAAEhC,KAAK,CAACwB,EAFE;AAEE,UAAA,WAAW,EAAE,KAAKxC,KAAL,CAAWY,WAF1B;AAGX,UAAA,SAAS,EAAI,IAHF;AAGQ,UAAA,QAAQ,EAAE,KAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;AAKH;;AACD,aAAO0C,QAAP;AACH;;;6BAGU;AAAA;;AACL,aACI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAEc,MAAM,CAACC,aAA1B;AAAyC,QAAA,qBAAqB,EAAE;AAAEC,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,cAAc,EAAE,QAAhC;AAA0CC,UAAAA,UAAU,EAAE;AAAtD,SAAhE;AAAkI,QAAA,yBAAyB,EAAC,SAA5J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,aAAa,EAAE,KAAjB;AAAwBC,UAAAA,QAAQ,EAAE;AAAlC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,cAAX;AAA0B,QAAA,IAAI,EAAE,EAAhC;AAAoC,QAAA,KAAK,EAAC,MAA1C;AAAiD,QAAA,KAAK,EAAE;AAAEC,UAAAA,WAAW,EAAE;AAAf,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACQ,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFA,CADF,EAKE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAI;AAACC,UAAAA,UAAU,EAAE,KAAb;AAAoBC,UAAAA,KAAK,EAAC,MAA1B;AAAkCC,UAAAA,QAAQ,EAAC;AAA3C,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqE5F,MAAM,CAAC,IAAIiB,IAAJ,EAAD,CAAN,CAAmB8B,MAAnB,CAA0B,uBAA1B,CAArE,CALF,EAME,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEkC,MAAM,CAACY,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAQI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAQ,QAAA,KAAK,EAAI;AAACH,UAAAA,UAAU,EAAE,KAAb;AAAqBE,UAAAA,QAAQ,EAAC;AAA9B,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEX,MAAM,CAACa,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,KAAKC,gBAAL,EAHJ,EAIG,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEd,MAAM,CAACY,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJH,EAKG,oBAAC,KAAD;AAAQ,QAAA,KAAK,EAAI;AAACH,UAAAA,UAAU,EAAE,KAAb;AAAqBE,UAAAA,QAAQ,EAAC;AAA9B,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALH,EAMI,KAAKI,YAAL,EANJ,CARJ,EAgBI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEf,MAAM,CAACY,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBJ,EAiBE,oBAAC,kBAAD;AACE,QAAA,KAAK,EAAEZ,MAAM,CAACgB,UADhB;AAEM,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,MAAI,CAACrF,KAAL,CAAWmE,UAAX,CAAsBmB,QAAtB,CAA+B,YAA/B,EAA6C;AAAChF,YAAAA,aAAa,EAAE,MAAI,CAACL,KAAL,CAAWK,aAA3B;AACjDC,YAAAA,aAAa,EAAE,MAAI,CAACN,KAAL,CAAWM,aADuB;AAEjDC,YAAAA,YAAY,EAAE,MAAI,CAACP,KAAL,CAAWO,YAFwB;AAGjDC,YAAAA,UAAU,EAAE,MAAI,CAACR,KAAL,CAAWQ,UAH0B;AAIjDE,YAAAA,SAAS,EAAE,MAAI,CAACV,KAAL,CAAWU,SAJ2B;AAKjDC,YAAAA,YAAY,EAAE,MAAI,CAACX,KAAL,CAAWW;AALwB,WAA7C;AAMD,SATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUM,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEyD,MAAM,CAACkB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAVN,CAjBF,CADJ;AAmCH;;;;EAlXmBpG,KAAK,CAACqG,S;;AAqX9B,IAAMnB,MAAM,GAAGoB,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,UAAU,EAAE;AACRC,IAAAA,MAAM,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF;AADzB,GADiB;AAI3BtB,EAAAA,aAAa,EAAE;AACbyB,IAAAA,IAAI,EAAE;AADO,GAJY;AAO3BC,EAAAA,mBAAmB,EAAE,EAPM;AAQ3BC,EAAAA,SAAS,EAAE;AACTF,IAAAA,IAAI,EAAE,CADG;AAETG,IAAAA,eAAe,EAAE;AAFR,GARgB;AAY3BhB,EAAAA,UAAU,EAAE;AACViB,IAAAA,KAAK,EAAE,EADG;AAEVP,IAAAA,MAAM,EAAE;AAFE,GAZe;AAgB3BX,EAAAA,KAAK,EAAE;AACLkB,IAAAA,KAAK,EAAE,EADF;AAELP,IAAAA,MAAM,EAAE;AAFH,GAhBoB;AAqB3Bf,EAAAA,OAAO,EAAE;AACPG,IAAAA,QAAQ,EAAE,EADH;AAEPF,IAAAA,UAAU,EAAE,KAFL;AAGPsB,IAAAA,YAAY,EAAE;AAHP,GArBkB;AA2B7BC,EAAAA,OAAO,EAAE;AACL3B,IAAAA,aAAa,EAAE,KADV;AAEL4B,IAAAA,OAAO,EAAE,EAFJ;AAGLV,IAAAA,MAAM,EAAE,EAHH;AAILO,IAAAA,KAAK,EAAEN,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBK,KAAzB,GAAgC,GAJlC;AAKLD,IAAAA,eAAe,EAAC,SALX;AAMLK,IAAAA,YAAY,EAAE,CANT;AASLC,IAAAA,SAAS,EAAE;AATN,GA3BoB;AAuC3BC,EAAAA,QAAQ,EAAE;AACR/B,IAAAA,aAAa,EAAE,KADP;AAER4B,IAAAA,OAAO,EAAE,EAFD;AAGRV,IAAAA,MAAM,EAAE,GAHA;AAKRM,IAAAA,eAAe,EAAC,SALR;AAMRK,IAAAA,YAAY,EAAE,CANN;AAOR9B,IAAAA,UAAU,EAAE,QAPJ;AAQRD,IAAAA,cAAc,EAAE;AARR,GAvCiB;AAmD3BkC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,MADH;AAENf,IAAAA,MAAM,EAAE,EAFF;AAGNW,IAAAA,YAAY,EAAE,CAHR;AAIN/B,IAAAA,cAAc,EAAE,QAJV;AAKNC,IAAAA,UAAU,EAAE,QALN;AAMN0B,IAAAA,KAAK,EAAE,KAND;AAOND,IAAAA,eAAe,EAAE,SAPX;AAQNU,IAAAA,WAAW,EAAE,SARP;AASNC,IAAAA,aAAa,EAAE,GATT;AAUNC,IAAAA,YAAY,EAAE;AACZlB,MAAAA,MAAM,EAAE,EADI;AAEZO,MAAAA,KAAK,EAAE;AAFK,KAVR;AAcNY,IAAAA,YAAY,EAAE;AAdR,GAnDmB;AAmE3BC,EAAAA,OAAO,EAAC;AAENpB,IAAAA,MAAM,EAAE,EAFF;AAGNW,IAAAA,YAAY,EAAE,CAHR;AAIN/B,IAAAA,cAAc,EAAE,QAJV;AAKNC,IAAAA,UAAU,EAAE,QALN;AAMN0B,IAAAA,KAAK,EAAEN,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBK,KAAzB,GAAgC,GANjC;AAOND,IAAAA,eAAe,EAAE;AAPX,GAnEmB;AA6E3Be,EAAAA,UAAU,EAAE;AACVlC,IAAAA,KAAK,EAAE,SADG;AAEVC,IAAAA,QAAQ,EAAE;AAFA,GA7Ee;AAkF3BK,EAAAA,UAAU,EAAE;AACVa,IAAAA,eAAe,EAAE,MADP;AAEVK,IAAAA,YAAY,EAAE,EAFJ;AAGVD,IAAAA,OAAO,EAAE,EAHC;AAIVE,IAAAA,SAAS,EAAE;AAJD,GAlFe;AAwF3BjB,EAAAA,SAAS,EAAE;AACTR,IAAAA,KAAK,EAAE,OADE;AAETD,IAAAA,UAAU,EAAE,MAFH;AAGToC,IAAAA,SAAS,EAAE;AAHF;AAxFgB,CAAlB,CAAf;AA+FA,eAAenH,SAAf","sourcesContent":["import React from 'react';\nimport moment from \"moment\";\nimport { Modal, Portal, Title, Provider, Surface,  Headline  } from 'react-native-paper';\nimport {StyleSheet, Text, View, Button, TextInput, ScrollView, TouchableHighlight } from 'react-native';\nimport { Dimensions } from 'react-native';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport Icon from 'react-native-vector-icons/FontAwesome5';\nimport MealCard from './MealCard'\nimport ActivityCard from './ActivityCard';\n\nclass TodayView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            todayExercises: [],\n            todayMeals: [],\n            currentDate: new Date(),\n            dailyDuration: 0.0,\n            dailyCalories: 0.0,\n            dailyProtein: 0.0,\n            dailyCarbo: 0.0,\n            dailyActivity: 0,\n            dailyFats: 0.0,\n            dailyFoodCal: 0.0,\n            accessToken: '',\n            activityArray:'',\n\n        }\n\n    }\n\n    async getStoredData(key){\n        try{\n            let value = await AsyncStorage.getItem(key);\n            this.setState({[key]: value});   \n         } catch (error) {\n            console.log(error);\n         }\n    }\n\n    getMeals(){\n      let tempMeals = []\n      let todayProteins = 0.0;\n      let todayCarbo = 0.0;\n      let todayFats = 0.0;\n      let todayFoodCal = 0.0;\n        fetch('https://mysqlcs639.cs.wisc.edu/meals/', {\n          method: 'GET',\n          headers: { 'x-access-token': this.state.accessToken }\n        })\n          .then(res => res.json())\n          .then(res => {\n            console.log(res, \"res meals\")\n              // this.setState({mealArray:  res.meals});\n              this.setState({todayMeals: []});\n              tempMeals = res.meals\n              if(tempMeals !== null && (typeof tempMeals !== 'undefined')){\n               for(let i = 0; i < tempMeals.length; i++){\n                if(moment(tempMeals[i].date).format('DD-MM-YYYY') === moment(this.state.currentDate).format('DD-MM-YYYY')) {\n                 let meal = tempMeals[i]\n                //  console.log(meal.name, 'name')\n                 let mealProteins = 0.0;\n                 let mealCarbo = 0.0;\n                let mealFats = 0.0;\n                let mealFoodCal = 0.0;\n                  fetch('https://mysqlcs639.cs.wisc.edu/meals/' + meal.id + '/foods', {\n                        method: 'GET',\n                         headers: { 'x-access-token': this.state.accessToken }\n                     })\n                    .then(res2 => res2.json())\n                    .then(res2 => {\n                      tempMeals[i].foods = res2.foods;\n                      if(res2.foods !== null && (typeof res2.foods !== 'undefined')){\n                        for(const food of res2.foods.values()){\n                            mealProteins += food.protein;\n                            mealCarbo += food.carbohydrates;\n                            mealFats += food.fat;\n                            mealFoodCal += food.calories;\n                            todayProteins += food.protein;\n                            todayCarbo += food.carbohydrates;\n                            todayFats += food.fat;\n                            todayFoodCal = +food.calories;\n                        }\n                      }\n                        tempMeals[i].mealProteins = mealProteins; \n                        tempMeals[i].mealCarbo = mealCarbo; \n                        tempMeals[i].mealFats = mealFats; \n                        tempMeals[i].mealFoodCal = mealFoodCal;  \n                      this.setState(prevState => ({\n                        todayMeals: [...prevState.todayMeals, tempMeals[i]] \n                      }))\n\n                      this.setState({dailyProtein: todayProteins})\n                      this.setState({dailyCarbo: todayCarbo})\n                      this.setState({dailyFats: todayFats})\n                      this.setState({dailyFoodCal: todayFoodCal})\n                      // console.log(this.state.mealArray, i,  \"this.state.mealArray\")\n                      // this. getMeals()\n                    })\n                  }\n               }\n              }\n                  // this.getMeals();\n                })\n          .catch(err =>{console.log(err)});\n    }\n    \n\n    getMeal(){\n        let todayProteins = 0.0;\n        let todayCarbo = 0.0;\n        let todayFats = 0.0;\n        let todayFoodCal = 0.0;\n        fetch('https://mysqlcs639.cs.wisc.edu/meals/', {\n          method: 'GET',\n          headers: { 'x-access-token': this.state.accessToken }\n        })\n          .then(res1 => res1.json())\n          .then(res1 => {\n            // console.log(res1, \"res1\")\n            if(res1.meals !== null && (typeof res1.meals !== 'undefined')){\n              for(const meal of res1.meals.values()){\n                  if(moment(meal.date).format('DD-MM-YYYY') === moment(this.state.currentDate).format('DD-MM-YYYY')) {\n                    this.setState(prevState => ({\n                        todayMeals: [...prevState.todayMeals, meal] \n                      }));\n                      fetch('https://mysqlcs639.cs.wisc.edu/meals/' + meal.id + '/foods', {\n                        method: 'GET',\n                         headers: { 'x-access-token': this.state.accessToken }\n                     })\n                    .then(res2 => res2.json())\n                    .then(res2 => {\n                        for(const food of res2.foods.values()){\n                            todayProteins += food.protein;\n                            todayCarbo += food.carbohydrates;\n                            todayFats += food.fat;\n                            todayFoodCal = +food.calories;\n                        }\n                      this.setState({dailyProtein: todayProteins})\n                      this.setState({dailyCarbo: todayCarbo})\n                      this.setState({dailyFats: todayFats})\n                      this.setState({dailyFoodCal: todayFoodCal})\n                    });\n                    }\n              }\n            }\n                });\n    }\n\n    // displayExercises(){\n    //     let cardList = [];\n    //     for (let i = 0; i < this.state.todayExercises.length; i++){\n    //     // for(const key of this.state.activityArray.keys()){\n    //       let value = this.state.todayExercises[i];\n    //       // console.log(value, \"activity info\")\n    //       // console.log(value.id, \"activity id\")\n    //         let currentDate = moment(value.date).format(\"MMMM D, YYYY\");\n    //         cardList.push(<ActivityCard key={i} name={value.name} date={currentDate}\n    //                        duration={value.duration} calories={value.calories}\n    //                        id={value.id} accessToken={this.state.accessToken}\n    //                        deleteExercise = {(id)=>this.deleteExercise(id)} />)\n\n    //     }\n    //     return cardList;\n    // }\n\n    displayMeals(){\n      let cardList = [];\n      for (let i = 0; i < this.state.todayMeals.length; i++){\n      // for(const key of this.state.activityArray.keys()){\n        let value = this.state.todayMeals[i];\n        // console.log(value, \"activity info\")\n        // console.log(value.id, \"activity id\")\n          let currentDate = moment(value.date).format(\"MMMM D, YYYY\");\n          cardList.push(\n          <MealCard key={i} name={value.name} date={value.date}\n                           food={value.food} mealProteins={value.mealProteins}\n                           id={value.id} accessToken={this.state.accessToken}\n                           mealCarbo={value.mealCarbo} mealFats={value.mealFats}\n                           mealFoodCal={value.mealFoodCal} foods={value.foods}\n                          todaymode = {true} mealmode={false}/>)\n\n      }\n      return cardList;\n  }\n\n    getExercise(){\n        let todayDuration = 0;\n        let todarCalorie = 0;\n        fetch('https://mysqlcs639.cs.wisc.edu/activities/', {\n          method: 'GET',\n          headers: { 'x-access-token': this.state.accessToken }\n        })\n          .then(res => res.json())\n          .then(res => {\n            console.log(res, \"res in today\")\n            this.setState({todayExercises: []});\n            if(res.activities !== null && (typeof res.activities !== 'undefined')){\n              for(const activity of res.activities.values()){\n                  if(moment(activity.date).format(\"MMM Do YY\") === moment(this.state.currentDate).format(\"MMM Do YY\")) {\n                    this.setState(prevState => ({\n                        todayExercises: [...prevState.todayExercises, activity] \n                      }));\n                      todayDuration += activity.duration;\n                      todarCalorie += activity.calories;\n                      this.setState({dailyActivity: this.state.todayExercises.length})\n                      this.setState({dailyDuration: todayDuration})\n                      this.setState({dailyCalories: todarCalorie})\n              }\n            }\n            }\n            console.log(this.state.todayExercises, \"today exercise\")\n          });\n    }\n\n    updateData(){\n      fetch('https://mysqlcs639.cs.wisc.edu/activities/', {\n        method: 'GET',\n        headers: { 'x-access-token': this.state.accessToken }\n      })\n        .then(res => res.json())\n        .then(res => {\n          console.log(res, \"res\")\n            this.setState({activityArray:  res.activities});\n            // try{\n            //   let result = JSON.stringify(res.activities);\n            //   console.log(result, \"exercises act\")\n            // AsyncStorage.setItem('activityArray',  result)}\n            // this.getStoredData('activityArray')\n            // console.log(this.state.activityArray, \"this.state.activityArray\")}\n          //   catch (error) {\n          //     console.log(error);\n          //  }\n          //   for(const [key, value] of Object.entries(res)){\n          //       this.setState({[key]: value})\n          //   }\n        //  this.getExercises();\n        })\n        .catch(err =>{console.log(err)});\n  }\n  //  async getExercise(){\n  //     let todayDuration = 0;\n  //     let todarCalorie = 0;\n  //     // await this.getStoredData();\n  //     console.log(this.state.activityArray, \"this.state.activityArray\")\n  //     let activities = JSON.parse(this.state.activityArray)\n  //     console.log(typeof  activities, \"today activities\")\n  //         // console.log(res, \"res in today\")\n  //           for(const activity of activities.values()){\n  //               if(moment(activity.date).format(\"MMM Do YY\") === moment(this.state.currentDate).format(\"MMM Do YY\")) {\n  //                 this.setState(prevState => ({\n  //                     todayExercises: [...prevState.todayExercises, activity] \n  //                   }));\n  //                   todayDuration += activity.duration;\n  //                   todarCalorie += activity.calories;\n  //                   this.setState({dailyActivity: this.state.todayExercises.length})\n  //                   this.setState({dailyDuration: todayDuration})\n  //                   this.setState({dailyCalories: todarCalorie})\n  //           }\n  //         }\n  //         console.log(this.state.todayExercises, \"today exercise\")\n        \n  // }\n\n\n   async componentDidMount() {\n        await this.getStoredData(\"accessToken\");\n        console.log(this.state.accessToken, \"token\")\n        await this.getStoredData(\"username\");\n        this.getExercise();\n        this.getMeals();\n        console.log(this.state.dailyDuration, \"this.state.dailyDuration\")\n        console.log(this.state.dailyCalories, \"this.state.dailyCalories\")\n        console.log(this.state.dailyCarbo, \"this.state.dailyCarbo\")\n        console.log(this.state.dailyProtein, \"this.state.dailyProtein\")\n\n        this.navListener = this.props.navigation.addListener('focus', () => {\n          console.log(this.state.todayExercises, \"todayExercises\")\n          this.getExercise();\n          this.getMeals();\n       });\n    //   if(this.props.isFocused){\n    //     this.updateData();\n    //   // }\n    }\n\n    componentWillUnmount() {\n \n      this.navListener();\n   }\n\n    // renderItem = (item) =>{\n    //     return(\n    //         <View key={item.id}>\n    //         <Surface style={styles.surface}>\n    //         <View style={{ flexDirection: 'column', flexWrap: 'wrap' }}>\n    //             <Text style={{marginLeft:10, fontWeight: \"700\", fontSize: 20 }}>{item.name}</Text>\n    //              <Text style={{marginLeft:10,  fontWeight: \"400\", fontSize: 16, }}>{item.duration} min</Text>\n    //         </View>\n    //         <View style={{ flexDirection: 'column' }}>\n               \n    //             <Text style={{marginLeft:30, fontWeight: \"500\", fontSize: 27  }}>{item.calories} kcal</Text>\n    //         </View>\n    //      </Surface>\n    //      <View style={styles.spaceSmall} />\n    //      </View>\n    //     )\n    // }\n\n    displayExercises(){\n      let cardList = [];\n      // console.log(this.state.activityArray, \"activity\")\n      for (let i = 0; i < this.state.todayExercises.length; i++){\n      // for(const key of this.state.activityArray.keys()){\n        let value = this.state.todayExercises[i];\n        // console.log(value, \"activity info\")\n        // console.log(value.id, \"activity id\")\n          // let currentDate = moment(value.date).format('MMMM Do YYYY');\n          // cardList.push( \n        //     <View key={i}>\n        //     <Surface style={styles.surface}>\n        //     <View style={{ flexDirection: 'column', flexWrap: 'wrap' }}>\n        //         <Text style={{marginLeft:10, fontWeight: \"700\", fontSize: 18 }}>{value.name}</Text>\n        //          <Text style={{marginLeft:10,  fontWeight: \"400\", fontSize: 16, }}>{value.duration} min</Text>\n        //     </View>\n        //     <View style={{ flexDirection: 'column' }}>\n               \n        //         <Text style={{marginLeft:30, fontWeight: \"500\", fontSize: 25  }}>{value.calories} kcal</Text>\n        //     </View>\n        //  </Surface>\n        //  <View style={styles.spaceSmall} />\n        //  </View>\n          // )\n          \n          cardList.push(<ActivityCard key={i} name={value.name} date={value.date}\n            duration={value.duration} calories={value.calories}\n            id={value.id} accessToken={this.state.accessToken}\n             todaymode = {true} mealmode={false}/>)\n\n      }\n      return cardList;\n  }\n\n\n    render() {\n        return (\n            <ScrollView style={styles.mainContainer} contentContainerStyle={{ flexGrow: 11, justifyContent: 'center', alignItems: \"center\" }} keyboardShouldPersistTaps='handled'>\n              <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n              <Icon name=\"calendar-day\" size={40} color=\"#900\" style={{ marginRight: 20 }} />\n              <Text style={styles.bigText}>Today</Text>\n              </View>\n              <Headline style = {{fontWeight: '600', color:'#900', fontSize:16} }>{moment(new Date()).format('YYYY/MM/DD, h:mm:ss a')}</Headline>\n              <View style={styles.space} />\n            \n                <View>\n                    <Title  style = {{fontWeight: '700',  fontSize:20} }> Exercises</Title>\n                    <View style={styles.spaceSmall} />\n                   {this.displayExercises()}\n                   <View style={styles.space} />\n                   <Title  style = {{fontWeight: '700',  fontSize:20} }> Meals</Title>\n                   {this.displayMeals()}\n                </View>\n                <View style={styles.space} />\n              <TouchableHighlight\n                style={styles.openButton}\n                    onPress={() => {\n                      this.props.navigation.navigate('Comparison', {dailyDuration: this.state.dailyDuration,\n                  dailyCalories: this.state.dailyCalories,\n                  dailyProtein: this.state.dailyProtein,\n                  dailyCarbo: this.state.dailyCarbo,\n                  dailyFats: this.state.dailyFats,\n                  dailyFoodCal: this.state.dailyFoodCal,})\n                    }}>\n                    <Text style={styles.textStyle}>Check performance</Text>\n              </TouchableHighlight>\n                     \n        \n            \n            </ScrollView>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    scrollView: {\n        height: Dimensions.get('window').height\n      },\n      mainContainer: {\n        flex: 1\n      },\n      scrollViewContainer: {},\n      container: {\n        flex: 1,\n        backgroundColor: '#fff',\n      },\n      spaceSmall: {\n        width: 20,\n        height: 10,\n      },\n      space: {\n        width: 20,\n        height: 20,\n      },\n\n      bigText: {\n        fontSize: 32,\n        fontWeight: \"700\",\n        marginBottom: 5\n      },\n\n    surface: {\n        flexDirection: 'row',\n        padding: 10,\n        height: 70,\n        width: Dimensions.get('window').width *0.8,\n        backgroundColor:\"#FAFAD2\",\n        borderRadius: 8,\n        // alignItems: 'center',\n        // justifyContent: 'center',\n        elevation: 6,\n      },\n\n      surface1: {\n        flexDirection: 'row',\n        padding: 10,\n        height: 200,\n        // width: Dimensions.get('window').width *0.8,\n        backgroundColor:\"#FAFAD2\",\n        borderRadius: 8,\n        alignItems: 'center',\n        justifyContent: 'center',\n        // elevation: 6,\n      },\n\n      button: {\n        display: 'flex',\n        height: 30,\n        borderRadius: 6,\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '90%',\n        backgroundColor: '#2AC062',\n        shadowColor: '#2AC062',\n        shadowOpacity: 0.5,\n        shadowOffset: { \n          height: 10, \n          width: 0 \n        },\n        shadowRadius: 10,\n      },\n      opacity:{\n        // display: 'flex',\n        height: 30,\n        borderRadius: 6,\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: Dimensions.get('window').width *0.8,\n        backgroundColor: '#900',\n      },\n\n      buttonText: {\n        color: '#FFFFFF',\n        fontSize: 16,\n      },\n\n      openButton: {\n        backgroundColor: \"#900\",\n        borderRadius: 20,\n        padding: 10,\n        elevation: 2\n      },\n      textStyle: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n      },\n});\n\nexport default TodayView;"]},"metadata":{},"sourceType":"module"}