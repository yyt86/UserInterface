{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\course\\\\639-UI\\\\react_native2_alpha-yyt86-main\\\\AddMeal.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TimePicker from \"./TimePicker\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport moment from \"moment\";\n\nvar AddMeal = function (_React$Component) {\n  _inherits(AddMeal, _React$Component);\n\n  var _super = _createSuper(AddMeal);\n\n  function AddMeal(props) {\n    var _this;\n\n    _classCallCheck(this, AddMeal);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      name: \"\",\n      date: new Date().toISOString(),\n      id: '',\n      accessToken: '',\n      modalVisible: _this.props.visible\n    };\n    return _this;\n  }\n\n  _createClass(AddMeal, [{\n    key: \"getStoredData\",\n    value: function getStoredData(key) {\n      var value;\n      return _regeneratorRuntime.async(function getStoredData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n            case 3:\n              value = _context.sent;\n              this.setState(_defineProperty({}, key, value));\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 7]], Promise);\n    }\n  }, {\n    key: \"handleAddMeal\",\n    value: function handleAddMeal() {\n      var _this2 = this;\n\n      fetch('https://mysqlcs639.cs.wisc.edu/meals/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-access-token': this.props.accessToken\n        },\n        body: JSON.stringify({\n          name: this.state.name,\n          date: this.state.date\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        _this2.props.updateData();\n\n        alert(\"One meal is added!\");\n\n        _this2.props.hideModal();\n      }).catch(function (err) {\n        alert(\"Something went wrong! Verify you have filled out the fields correctly.\");\n      });\n    }\n  }, {\n    key: \"getDateTime\",\n    value: function getDateTime(date) {\n      this.setState({\n        date: moment(date).utcOffset(-6).format()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Modal, {\n        visible: this.props.visible,\n        transparent: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.centeredView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.modalView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.bigText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }, \"Meal Details\"), React.createElement(View, {\n        style: styles.space,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlignVertical: \"center\",\n          fontWeight: \"700\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }, \"Meal Name\")), React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        placeholderTextColor: \"#d9bebd\",\n        onChangeText: function onChangeText(name) {\n          return _this3.setState({\n            name: name\n          });\n        },\n        defaultValue: this.state.name,\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: styles.space,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlignVertical: \"center\",\n          fontWeight: \"700\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }, \"Meal Data and Time\")), React.createElement(View, {\n        style: styles.spaceSmall,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      }), React.createElement(TimePicker, {\n        date: this.state.date,\n        getDateTime: function getDateTime(date) {\n          return _this3.getDateTime(date);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: styles.space,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlignVertical: \"center\",\n          fontWeight: \"400\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }\n      }, \"Looks good! Ready to save your work?\")), React.createElement(View, {\n        style: styles.space,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }\n      }, React.createElement(Button, {\n        color: \"#942a21\",\n        style: styles.buttonInline,\n        title: \"SAVE MEAL\",\n        onPress: function onPress() {\n          return _this3.handleAddMeal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: styles.spaceHorizontal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }\n      }), React.createElement(Button, {\n        color: \"#a1635f\",\n        style: styles.buttonInline,\n        title: \"NEVER MIND\",\n        onPress: function onPress() {\n          return _this3.props.hideModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }\n      })))));\n    }\n  }]);\n\n  return AddMeal;\n}(React.Component);\n\n;\nvar styles = StyleSheet.create({\n  scrollView: {\n    height: Dimensions.get('window').height\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  bigText: {\n    fontSize: 20,\n    fontWeight: \"700\",\n    marginBottom: 5\n  },\n  spaceSmall: {\n    width: 20,\n    height: 10\n  },\n  space: {\n    width: 20,\n    height: 20\n  },\n  spaceHorizontal: {\n    display: \"flex\",\n    width: 20\n  },\n  buttonInline: {\n    display: \"flex\"\n  },\n  input: {\n    width: 200,\n    padding: 10,\n    margin: 5,\n    height: 40,\n    borderColor: '#c9392c',\n    borderWidth: 1\n  },\n  inputInline: {\n    flexDirection: \"row\",\n    display: \"flex\",\n    width: 200,\n    padding: 10,\n    margin: 5,\n    height: 40,\n    borderColor: '#c9392c',\n    borderWidth: 1\n  }\n});\nexport default AddMeal;","map":{"version":3,"sources":["F:/course/639-UI/react_native2_alpha-yyt86-main/AddMeal.js"],"names":["React","TimePicker","AsyncStorage","moment","AddMeal","props","state","name","date","Date","toISOString","id","accessToken","modalVisible","visible","key","getItem","value","setState","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","updateData","alert","hideModal","catch","err","utcOffset","format","styles","centeredView","modalView","bigText","space","textAlignVertical","fontWeight","input","spaceSmall","getDateTime","flexDirection","flexWrap","buttonInline","handleAddMeal","spaceHorizontal","Component","StyleSheet","create","scrollView","height","Dimensions","get","flex","justifyContent","alignItems","marginTop","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","elevation","container","fontSize","marginBottom","display","borderColor","borderWidth","inputInline"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet, Text, View, Button, TextInput, Dimensions , Modal,} from 'react-native';\r\nimport TimePicker from './TimePicker';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport moment from \"moment\";\r\n\r\nclass AddMeal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          name: \"\",\r\n          date:  (new Date()).toISOString(),\r\n          id: '',\r\n          accessToken: '',\r\n          modalVisible: this.props.visible,\r\n        }\r\n      }\r\n\r\n    async getStoredData(key){\r\n        try{\r\n            let value = await AsyncStorage.getItem(key);\r\n            this.setState({[key]: value});\r\n         } catch (error) {\r\n            console.log(error);\r\n         }\r\n    }\r\n\r\n     \r\n\r\n     handleAddMeal() {\r\n        fetch('https://mysqlcs639.cs.wisc.edu/meals/', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'x-access-token': this.props.accessToken\r\n            },\r\n            body: JSON.stringify({\r\n              name: this.state.name,\r\n                date: this.state.date,\r\n            })\r\n          })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            this.props.updateData();\r\n            alert(\"One meal is added!\");\r\n            this.props.hideModal()\r\n        })\r\n        .catch(err => {\r\n            alert(\"Something went wrong! Verify you have filled out the fields correctly.\");\r\n        });\r\n      \r\n    }\r\n\r\n    getDateTime(date){\r\n        this.setState({\r\n          date: moment(date).utcOffset(-6).format()\r\n        })\r\n    }\r\n      \r\n      \r\n    render(){\r\n        return (\r\n            <Modal  visible= {this.props.visible}  transparent={true}>\r\n                <View style={styles.centeredView}>\r\n                    <View style={styles.modalView}>\r\n                        <Text style={styles.bigText}>Meal Details</Text>\r\n                        <View style={styles.space} />\r\n                        <View>\r\n                        <Text style={{ textAlignVertical: \"center\", fontWeight: \"700\" }}>Meal Name</Text>\r\n                        </View>\r\n                        <TextInput style={styles.input}\r\n                        underlineColorAndroid=\"transparent\"\r\n                        placeholderTextColor=\"#d9bebd\"\r\n                        onChangeText={(name) => this.setState({ name: name })}\r\n                        defaultValue={this.state.name}\r\n                        autoCapitalize=\"none\" />\r\n                    \r\n                        <View style={styles.space} />\r\n                        <View>\r\n                        <Text style={{ textAlignVertical: \"center\", fontWeight: \"700\" }}>Meal Data and Time</Text>    \r\n                        </View>\r\n                        <View style={styles.spaceSmall}></View>\r\n                        <TimePicker  date={this.state.date}  getDateTime={(date) =>this.getDateTime(date)}/>\r\n                        <View style={styles.space} />\r\n                        <View>\r\n                        <Text style={{ textAlignVertical: \"center\", fontWeight: \"400\" }}>Looks good! Ready to save your work?</Text>\r\n                        </View>\r\n                        \r\n                        <View style={styles.space} />  \r\n                        <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\r\n                        <Button color=\"#942a21\" style={styles.buttonInline} title=\"SAVE MEAL\"  onPress={() => this.handleAddMeal()} />\r\n                        <View style={styles.spaceHorizontal} />\r\n                        <Button color=\"#a1635f\" style={styles.buttonInline} title=\"NEVER MIND\" onPress={() => this.props.hideModal()} />\r\n                        </View>\r\n                    </View>\r\n\r\n                 </View>\r\n            </Modal> \r\n    );}\r\n  \r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    scrollView: {\r\n      height: Dimensions.get('window').height\r\n    },\r\n    centeredView: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginTop: 22\r\n      },\r\n      \r\n      modalView: {\r\n        margin: 20,\r\n        backgroundColor: \"white\",\r\n        borderRadius: 20,\r\n        padding: 35,\r\n        alignItems: \"center\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n          width: 0,\r\n          height: 2\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n        elevation: 5\r\n      },\r\n     \r\n    \r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n    },\r\n    bigText: {\r\n      fontSize: 20,\r\n      fontWeight: \"700\",\r\n      marginBottom: 5\r\n    },\r\n    spaceSmall: {\r\n      width: 20,\r\n      height: 10,\r\n    },\r\n    space: {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    spaceHorizontal: {\r\n      display: \"flex\",\r\n      width: 20\r\n    },\r\n    buttonInline: {\r\n      display: \"flex\"\r\n    },\r\n    input: {\r\n      width: 200,\r\n      padding: 10,\r\n      margin: 5,\r\n      height: 40,\r\n      borderColor: '#c9392c',\r\n      borderWidth: 1\r\n    },\r\n    inputInline: {\r\n      flexDirection: \"row\",\r\n      display: \"flex\",\r\n      width: 200,\r\n      padding: 10,\r\n      margin: 5,\r\n      height: 40,\r\n      borderColor: '#c9392c',\r\n      borderWidth: 1\r\n    }\r\n  });\r\n  \r\n  export default AddMeal;\r\n"]},"metadata":{},"sourceType":"module"}