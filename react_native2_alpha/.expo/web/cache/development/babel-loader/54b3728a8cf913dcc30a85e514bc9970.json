{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\course\\\\639-UI\\\\react_native2_alpha-yyt86-main\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport LoginView from \"./LoginView\";\nimport SignupView from \"./SignupView\";\nimport TodayView from \"./TodayView\";\nimport ComparisonView from \"./ComparisonView\";\nimport ExercisesView from \"./ExercisesView\";\nimport ExercisesUpdate from \"./ExercisesUpdate\";\nimport ProfileView from \"./ProfileView\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.SignoutButton = function () {\n      return React.createElement(React.Fragment, null, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          marginRight: 25\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this.revokeAcessToken();\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, React.createElement(Ionicons, {\n        name: \"ios-log-out\",\n        size: 25,\n        color: \"black\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }))));\n    };\n\n    _this.state = {\n      accessToken: undefined,\n      username: undefined\n    };\n    _this.login = _this.login.bind(_assertThisInitialized(_this));\n    _this.revokeAccessToken = _this.revokeAccessToken.bind(_assertThisInitialized(_this));\n    _this.SignoutButton = _this.SignoutButton.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"login\",\n    value: function login(username, accessToken) {\n      this.setState({\n        username: username,\n        accessToken: accessToken\n      });\n    }\n  }, {\n    key: \"revokeAccessToken\",\n    value: function revokeAccessToken() {\n      this.setState({\n        accessToken: undefined\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var AuthStack = createStackNavigator();\n      return React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }\n      }, React.createElement(AuthStack.Navigator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }, !this.state.accessToken ? React.createElement(React.Fragment, null, React.createElement(AuthStack.Screen, {\n        name: \"SignIn\",\n        options: {\n          title: 'Fitness Tracker Welcome'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }\n      }, function (props) {\n        return React.createElement(LoginView, _extends({}, props, {\n          login: _this2.login,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }\n        }));\n      }), React.createElement(AuthStack.Screen, {\n        name: \"SignUp\",\n        options: {\n          title: 'Fitness Tracker Signup'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }\n      }, function (props) {\n        return React.createElement(SignupView, _extends({}, props, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }\n        }));\n      })) : React.createElement(React.Fragment, null, React.createElement(AuthStack.Screen, {\n        name: \"FitnessTracker\",\n        options: {\n          headerRight: this.SignoutButton\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, function (props) {\n        return React.createElement(CreateTabNavigation, _extends({}, props, {\n          username: _this2.state.username,\n          accessToken: _this2.state.accessToken,\n          revokeAccessToken: _this2.revokeAccessToken,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 31\n          }\n        }));\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar TodayStack = createStackNavigator();\n\nfunction CreateTodayStack() {\n  return React.createElement(TodayStack.Navigator, {\n    initialRouteName: \"Today\",\n    screenOptions: {\n      gestureEnabled: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, React.createElement(TodayStack.Screen, {\n    name: \"Today\",\n    component: TodayView,\n    options: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }), React.createElement(TodayStack.Screen, {\n    name: \"Comparison\",\n    component: ComparisonView,\n    initialParams: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar ExerciseStack = createStackNavigator();\n\nfunction CreateExerciseStack() {\n  return React.createElement(ExerciseStack.Navigator, {\n    initialRouteName: \"Exercises\",\n    screenOptions: {\n      gestureEnabled: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, React.createElement(ExerciseStack.Screen, {\n    name: \"Exercises\",\n    component: ExercisesView,\n    options: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }), React.createElement(ExerciseStack.Screen, {\n    name: \"ExercisesUpdate\",\n    component: ExercisesUpdate,\n    initialParams: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar ProfileStack = createStackNavigator();\n\nfunction CreateProfileStack() {\n  return React.createElement(ProfileStack.Navigator, {\n    initialRouteName: \"Profile\",\n    screenOptions: {\n      gestureEnabled: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, React.createElement(ProfileStack.Screen, {\n    name: \"Profile\",\n    component: ProfileView,\n    options: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar TabNavigation = createBottomTabNavigator();\n\nfunction CreateTabNavigation() {\n  var _this3 = this;\n\n  return React.createElement(TabNavigation.Navigator, {\n    tabBarOptions: {\n      activeTintColor: 'tomato',\n      inactiveTintColor: 'gray'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, React.createElement(TabNavigation.Screen, {\n    name: \"Today\",\n    component: CreateTodayStack,\n    options: {\n      tabBarLabel: 'Today',\n      tabBarIcon: function tabBarIcon(_ref) {\n        var focused = _ref.focused,\n            tintColor = _ref.tintColor;\n        var iconName = 'md-home';\n        return React.createElement(Ionicons, {\n          name: iconName,\n          size: 25,\n          color: tintColor,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 22\n          }\n        });\n      },\n      tabBarOptions: {\n        activeTintColor: 'tomato',\n        inactiveTintColor: 'gray'\n      },\n      animationEnabled: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }), React.createElement(TabNavigation.Screen, {\n    name: \"Exercises\",\n    component: CreateExerciseStack,\n    options: {\n      tabBarLabel: 'Exercises',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var focused = _ref2.focused,\n            tintColor = _ref2.tintColor;\n        var iconName = 'md-walk';\n        return React.createElement(Ionicons, {\n          name: iconName,\n          size: 25,\n          color: tintColor,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 22\n          }\n        });\n      },\n      tabBarOptions: {\n        activeTintColor: 'tomato',\n        inactiveTintColor: 'gray'\n      },\n      animationEnabled: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }), React.createElement(TabNavigation.Screen, {\n    name: \"Me\",\n    component: CreateProfileStack,\n    options: {\n      tabBarLabel: 'Me',\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var focused = _ref3.focused,\n            tintColor = _ref3.tintColor;\n        var iconName = 'md-person';\n        return React.createElement(Ionicons, {\n          name: iconName,\n          size: 25,\n          color: tintColor,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 22\n          }\n        });\n      },\n      tabBarOptions: {\n        activeTintColor: 'tomato',\n        inactiveTintColor: 'gray'\n      },\n      animationEnabled: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["F:/course/639-UI/react_native2_alpha-yyt86-main/App.js"],"names":["React","LoginView","SignupView","TodayView","ComparisonView","ExercisesView","ExercisesUpdate","ProfileView","createBottomTabNavigator","createStackNavigator","NavigationContainer","Ionicons","App","props","SignoutButton","flexDirection","marginRight","revokeAcessToken","state","accessToken","undefined","username","login","bind","revokeAccessToken","setState","AuthStack","title","headerRight","Component","TodayStack","CreateTodayStack","gestureEnabled","ExerciseStack","CreateExerciseStack","ProfileStack","CreateProfileStack","TabNavigation","CreateTabNavigation","activeTintColor","inactiveTintColor","tabBarLabel","tabBarIcon","focused","tintColor","iconName","tabBarOptions","animationEnabled"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport LoginView from './LoginView';\nimport SignupView from './SignupView';\n\nimport TodayView from './TodayView'\nimport ComparisonView from './ComparisonView'\nimport ExercisesView from './ExercisesView'\nimport ExercisesUpdate from './ExercisesUpdate'\nimport ProfileView from './ProfileView'\n\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nimport { TouchableOpacity, Image, View, Text } from 'react-native';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      accessToken: undefined,\n      username: undefined\n    }\n\n    this.login = this.login.bind(this);\n    this.revokeAccessToken = this.revokeAccessToken.bind(this);\n\n    this.SignoutButton = this.SignoutButton.bind(this);\n  }\n\n  /**\n   * Store the username and accessToken here so that it can be\n   * passed down to each corresponding child view.\n   */\n  login(username, accessToken) {\n    this.setState({\n      username: username,\n      accessToken: accessToken\n    });\n  }\n\n  /**\n   * Revokes the access token, effectively signing a user out of their session.\n   */\n  revokeAccessToken() {\n    this.setState({\n      accessToken: undefined\n    });\n  }\n\n  /**\n   * Defines a signout button... Your first TODO!\n   */\n  SignoutButton = () => {\n    return <>\n      <View style={{ flexDirection: 'row', marginRight: 25 }}>\n        <TouchableOpacity onPress={() =>{this.revokeAcessToken()}}>\n          {/* <Text> X</Text> */}\n          <Ionicons name='ios-log-out' size={25} color='black' />\n        </TouchableOpacity>\n      </View>\n    </>\n  }\n\n \n\n  /**\n   * Note that there are many ways to do navigation and this is just one!\n   * I chose this way as it is likely most familiar to us, passing props\n   * to child components from the parent.\n   * \n   * Other options may have included contexts, which store values above\n   * (similar to this implementation), or route parameters which pass\n   * values from view to view along the navigation route.\n   * \n   * You are by no means bound to this implementation; choose what\n   * works best for your design!\n   */\n  render() {\n\n    // Our primary navigator between the pre and post auth views\n    // This navigator switches which screens it navigates based on\n    // the existent of an access token. In the authorized view,\n    // which right now only consists of the profile, you will likely\n    // need to specify another set of screens or navigator; e.g. a\n    // list of tabs for the Today, Exercises, and Profile views.\n    let AuthStack = createStackNavigator();\n\n    return (\n      <NavigationContainer>\n        <AuthStack.Navigator>\n          {!this.state.accessToken ? (\n            <>\n              <AuthStack.Screen\n                name=\"SignIn\"\n                options={{\n                  title: 'Fitness Tracker Welcome',\n                }}\n              >\n                {(props) => <LoginView {...props} login={this.login} />}\n              </AuthStack.Screen>\n\n              <AuthStack.Screen\n                name=\"SignUp\"\n                options={{\n                  title: 'Fitness Tracker Signup',\n                }}\n              >\n                {(props) => <SignupView {...props} />}\n              </AuthStack.Screen>\n            </>\n          ) : (\n              <>\n                <AuthStack.Screen name=\"FitnessTracker\" options={{\n                  headerRight: this.SignoutButton\n                }}>\n                  {/* {(props) => <ProfileView {...props} username={this.state.username} accessToken={this.state.accessToken} revokeAccessToken={this.revokeAccessToken} />} */}\n                  {(props) => <CreateTabNavigation {...props} username={this.state.username} accessToken={this.state.accessToken} revokeAccessToken={this.revokeAccessToken} />} \n                </AuthStack.Screen>\n\n              </>\n\n            )}\n        </AuthStack.Navigator>\n      </NavigationContainer>\n    );\n  }\n}\n\nconst TodayStack = createStackNavigator();\nfunction CreateTodayStack() {\n    return (\n      <TodayStack.Navigator\n        initialRouteName=\"Today\"\n        screenOptions={{\n          gestureEnabled: false,\n        }}>\n        <TodayStack.Screen name=\"Today\" component={TodayView} options={{}} />\n        <TodayStack.Screen\n          name=\"Comparison\"\n          component={ComparisonView}\n          initialParams={{}}\n        />\n      </TodayStack.Navigator>\n    );\n  }\n  \nconst ExerciseStack = createStackNavigator();\nfunction CreateExerciseStack() {\n    return (\n      <ExerciseStack.Navigator\n        initialRouteName=\"Exercises\"\n        screenOptions={{ gestureEnabled: false }}>\n        <ExerciseStack.Screen\n          name=\"Exercises\"\n          component={ExercisesView}\n          options={{}}\n        />\n        <ExerciseStack.Screen\n          name=\"ExercisesUpdate\"\n          component={ExercisesUpdate}\n          initialParams={{}}\n        />\n      </ExerciseStack.Navigator>\n    );\n  }\n\nconst  ProfileStack = createStackNavigator();\nfunction  CreateProfileStack() {\n    return (\n      <ProfileStack.Navigator\n        initialRouteName=\"Profile\"\n        screenOptions={{ gestureEnabled: false }}>\n        <ProfileStack.Screen\n          name=\"Profile\"\n          component={ProfileView}\n          options={{}}\n        />\n      </ProfileStack.Navigator>\n    );\n  }\n\nconst TabNavigation = createBottomTabNavigator();\nfunction CreateTabNavigation() {\n    return (\n      <TabNavigation.Navigator\n        tabBarOptions={{\n          activeTintColor: 'tomato',\n          inactiveTintColor: 'gray',\n        }}>\n        <TabNavigation.Screen\n          name=\"Today\"\n          component={CreateTodayStack}\n          options={{\n            tabBarLabel: 'Today',\n            tabBarIcon: ({ focused, tintColor }) => {\n              let iconName = 'md-home';//`md-home${focused ? '' : '-outline'}`;\n              return <Ionicons name={iconName} size={25} color={tintColor} />;\n            },\n            tabBarOptions: {\n              activeTintColor: 'tomato',\n              inactiveTintColor: 'gray',\n            },\n            animationEnabled: true,\n          }}\n        />\n        <TabNavigation.Screen\n          name=\"Exercises\"\n          component={CreateExerciseStack}\n          options={{\n            tabBarLabel: 'Exercises',\n            tabBarIcon: ({ focused, tintColor }) => {\n              let iconName = 'md-walk'; //${focused ? '' : '-outline'}`;\n              return <Ionicons name={iconName} size={25} color={tintColor} />;\n            },\n            tabBarOptions: {\n              activeTintColor: 'tomato',\n              inactiveTintColor: 'gray',\n            },\n            animationEnabled: true,\n          }}\n        />\n        <TabNavigation.Screen\n          name=\"Me\"\n          component={CreateProfileStack} \n          options={{\n            tabBarLabel: 'Me',\n            tabBarIcon: ({ focused, tintColor }) => {\n              let iconName = 'md-person';//${focused ? '' : '-outline'}`;\n              return <Ionicons name={iconName} size={25} color={tintColor} />;\n            },\n            tabBarOptions: {\n              activeTintColor: 'tomato',\n              inactiveTintColor: 'gray',\n            },\n            animationEnabled: true,\n          }}\n        />\n      </TabNavigation.Navigator>\n    );\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}