{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\course\\\\639-UI\\\\react_native2_alpha-yyt86-main\\\\LoginView.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport base64 from 'base-64';\nimport AsyncStorage from '@react-native-community/async-storage';\n\nvar LoginView = function (_React$Component) {\n  _inherits(LoginView, _React$Component);\n\n  var _super = _createSuper(LoginView);\n\n  function LoginView(props) {\n    var _this;\n\n    _classCallCheck(this, LoginView);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      username: \"\",\n      password: \"\",\n      accessToken: \"\"\n    };\n    _this.handleLogin = _this.handleLogin.bind(_assertThisInitialized(_this));\n    _this.handleSignup = _this.handleSignup.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(LoginView, [{\n    key: \"handleLogin\",\n    value: function handleLogin() {\n      var _this2 = this;\n\n      fetch('https://mysqlcs639.cs.wisc.edu/login', {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Basic ' + base64.encode(this.state.username + \":\" + this.state.password)\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        if (res.token) {\n          AsyncStorage.setItem('accessToken', res.token);\n          AsyncStorage.setItem('username', _this2.state.username);\n          console.log(res);\n          console.log(res.token);\n\n          _this2.props.login(_this2.state.username, res.token);\n        } else {\n          alert(\"Incorrect username or password! Please try again.\");\n        }\n      });\n    }\n  }, {\n    key: \"handleSignup\",\n    value: function handleSignup() {\n      this.props.navigation.navigate('SignUp');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.bigText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, \"FitnessTracker\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, \"Welcome! Please login or signup to continue.\"), React.createElement(View, {\n        style: styles.space,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Username\",\n        placeholderTextColor: \"#992a20\",\n        onChangeText: function onChangeText(username) {\n          return _this3.setState({\n            username: username\n          });\n        },\n        value: this.state.username,\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        secureTextEntry: true,\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Password\",\n        placeholderTextColor: \"#992a20\",\n        onChangeText: function onChangeText(password) {\n          return _this3.setState({\n            password: password\n          });\n        },\n        value: this.state.password,\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.space,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        color: \"#942a21\",\n        style: styles.buttonInline,\n        title: \"Login\",\n        onPress: this.handleLogin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: styles.spaceHorizontal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }), React.createElement(Button, {\n        color: \"#942a21\",\n        style: styles.buttonInline,\n        title: \"Signup\",\n        onPress: this.handleSignup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return LoginView;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  bigText: {\n    fontSize: 32,\n    fontWeight: \"700\",\n    marginBottom: 5\n  },\n  space: {\n    width: 20,\n    height: 20\n  },\n  spaceHorizontal: {\n    display: \"flex\",\n    width: 20\n  },\n  buttonInline: {\n    display: \"flex\"\n  },\n  input: {\n    width: 200,\n    padding: 10,\n    margin: 5,\n    height: 40,\n    borderColor: '#c9392c',\n    borderWidth: 1\n  }\n});\nexport default LoginView;","map":{"version":3,"sources":["F:/course/639-UI/react_native2_alpha-yyt86-main/LoginView.js"],"names":["React","base64","AsyncStorage","LoginView","props","state","username","password","accessToken","handleLogin","bind","handleSignup","fetch","method","headers","encode","then","res","json","token","setItem","console","log","login","alert","navigation","navigate","styles","container","bigText","space","input","setState","flexDirection","flexWrap","buttonInline","spaceHorizontal","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontSize","fontWeight","marginBottom","width","height","display","padding","margin","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, Button, TextInput } from 'react-native';\nimport base64 from 'base-64';\nimport AsyncStorage from '@react-native-community/async-storage';\n\nclass LoginView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      accessToken: \"\"\n    }\n\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleSignup = this.handleSignup.bind(this);\n  }\n\n  /**\n   * Logs in to the application.\n   * \n   * Note that we have to follow the authorization rules; a header\n   * with a base64-encoded username and password.\n   * \n   * Upon response, we analyze whether or not we are successful.\n   * If successful, we use a callback from App to log us in and\n   * store the username and token in App.\n   */\n  handleLogin() {\n    fetch('https://mysqlcs639.cs.wisc.edu/login', {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Basic ' + base64.encode(this.state.username + \":\" + this.state.password)\n      }\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.token) {\n          AsyncStorage.setItem('accessToken',  res.token);\n          AsyncStorage.setItem('username', this.state.username);\n          console.log(res);\n          console.log(res.token)\n          this.props.login(this.state.username, res.token);\n        } else {\n          alert(\"Incorrect username or password! Please try again.\");\n        }\n      });\n  }\n\n  /**\n   * Use React Navigation to switch to the Sign Up page.\n   */\n  handleSignup() {\n    this.props.navigation.navigate('SignUp');\n  }\n\n  /**\n   * Displays and collects the login information.\n   * \n   * The styling could definitely be cleaned up; should be consistent!\n   */\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.bigText}>FitnessTracker</Text>\n        <Text>Welcome! Please login or signup to continue.</Text>\n        <View style={styles.space} />\n        <TextInput style={styles.input}\n          underlineColorAndroid=\"transparent\"\n          placeholder=\"Username\"\n          placeholderTextColor=\"#992a20\"\n          onChangeText={(username) => this.setState({ username: username })}\n          value={this.state.username}\n          autoCapitalize=\"none\" />\n        <TextInput style={styles.input}\n          secureTextEntry={true}\n          underlineColorAndroid=\"transparent\"\n          placeholder=\"Password\"\n          placeholderTextColor=\"#992a20\"\n          onChangeText={(password) => this.setState({ password: password })}\n          value={this.state.password}\n          autoCapitalize=\"none\" />\n        <View style={styles.space} />\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n          <Button color=\"#942a21\" style={styles.buttonInline} title=\"Login\" onPress={this.handleLogin} />\n          <View style={styles.spaceHorizontal} />\n          <Button color=\"#942a21\" style={styles.buttonInline} title=\"Signup\" onPress={this.handleSignup} />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  bigText: {\n    fontSize: 32,\n    fontWeight: \"700\",\n    marginBottom: 5\n  },\n  space: {\n    width: 20,\n    height: 20,\n  },\n  spaceHorizontal: {\n    display: \"flex\",\n    width: 20\n  },\n  buttonInline: {\n    display: \"flex\"\n  },\n  input: {\n    width: 200,\n    padding: 10,\n    margin: 5,\n    height: 40,\n    borderColor: '#c9392c',\n    borderWidth: 1\n  }\n});\n\nexport default LoginView;\n"]},"metadata":{},"sourceType":"module"}