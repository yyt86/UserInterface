{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\course\\\\639-UI\\\\react_native2_alpha-yyt86-main\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport LoginView from \"./LoginView\";\nimport SignupView from \"./SignupView\";\nimport TodayView from \"./TodayView\";\nimport ExercisesView from \"./ExercisesView\";\nimport ProfileView from \"./ProfileView\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.SignoutButton = function () {\n      return React.createElement(React.Fragment, null, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          marginRight: 25\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return alert(\"We should probably change this to log us out! An icon would be nice too!\");\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, \" X\"))));\n    };\n\n    _this.state = {\n      accessToken: undefined,\n      username: undefined\n    };\n    _this.login = _this.login.bind(_assertThisInitialized(_this));\n    _this.revokeAccessToken = _this.revokeAccessToken.bind(_assertThisInitialized(_this));\n    _this.SignoutButton = _this.SignoutButton.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"login\",\n    value: function login(username, accessToken) {\n      this.setState({\n        username: username,\n        accessToken: accessToken\n      });\n    }\n  }, {\n    key: \"revokeAccessToken\",\n    value: function revokeAccessToken() {\n      this.setState({\n        accessToken: undefined\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var AuthStack = createStackNavigator();\n      return React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }\n      }, React.createElement(AuthStack.Navigator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, !this.state.accessToken ? React.createElement(React.Fragment, null, React.createElement(AuthStack.Screen, {\n        name: \"SignIn\",\n        options: {\n          title: 'Fitness Tracker Welcome'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }\n      }, function (props) {\n        return React.createElement(LoginView, _extends({}, props, {\n          login: _this2.login,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }\n        }));\n      }), React.createElement(AuthStack.Screen, {\n        name: \"SignUp\",\n        options: {\n          title: 'Fitness Tracker Signup'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }\n      }, function (props) {\n        return React.createElement(SignupView, _extends({}, props, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }\n        }));\n      })) : React.createElement(React.Fragment, null, React.createElement(AuthStack.Screen, {\n        name: \"FitnessTracker\",\n        options: {\n          headerLeft: this.SignoutButton\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }, function (props) {\n        return React.createElement(ProfileView, _extends({}, props, {\n          username: _this2.state.username,\n          accessToken: _this2.state.accessToken,\n          revokeAccessToken: _this2.revokeAccessToken,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 31\n          }\n        }));\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["F:/course/639-UI/react_native2_alpha-yyt86-main/App.js"],"names":["React","LoginView","SignupView","TodayView","ExercisesView","ProfileView","createBottomTabNavigator","createStackNavigator","NavigationContainer","Ionicons","App","props","SignoutButton","flexDirection","marginRight","alert","state","accessToken","undefined","username","login","bind","revokeAccessToken","setState","AuthStack","title","headerLeft","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport LoginView from './LoginView';\nimport SignupView from './SignupView';\n\nimport TodayView from './TodayView'\nimport ExercisesView from './ExercisesView'\nimport ProfileView from './ProfileView'\n\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nimport { TouchableOpacity, Image, View, Text } from 'react-native';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      accessToken: undefined,\n      username: undefined\n    }\n\n    this.login = this.login.bind(this);\n    this.revokeAccessToken = this.revokeAccessToken.bind(this);\n\n    this.SignoutButton = this.SignoutButton.bind(this);\n  }\n\n  /**\n   * Store the username and accessToken here so that it can be\n   * passed down to each corresponding child view.\n   */\n  login(username, accessToken) {\n    this.setState({\n      username: username,\n      accessToken: accessToken\n    });\n  }\n\n  /**\n   * Revokes the access token, effectively signing a user out of their session.\n   */\n  revokeAccessToken() {\n    this.setState({\n      accessToken: undefined\n    });\n  }\n\n  /**\n   * Defines a signout button... Your first TODO!\n   */\n  SignoutButton = () => {\n    return <>\n      <View style={{ flexDirection: 'row', marginRight: 25 }}>\n        <TouchableOpacity onPress={() => alert(\"We should probably change this to log us out! An icon would be nice too!\")}>\n          <Text> X</Text>\n        </TouchableOpacity>\n      </View>\n    </>\n  }\n\n  /**\n   * Note that there are many ways to do navigation and this is just one!\n   * I chose this way as it is likely most familiar to us, passing props\n   * to child components from the parent.\n   * \n   * Other options may have included contexts, which store values above\n   * (similar to this implementation), or route parameters which pass\n   * values from view to view along the navigation route.\n   * \n   * You are by no means bound to this implementation; choose what\n   * works best for your design!\n   */\n  render() {\n\n    // Our primary navigator between the pre and post auth views\n    // This navigator switches which screens it navigates based on\n    // the existent of an access token. In the authorized view,\n    // which right now only consists of the profile, you will likely\n    // need to specify another set of screens or navigator; e.g. a\n    // list of tabs for the Today, Exercises, and Profile views.\n    let AuthStack = createStackNavigator();\n\n    return (\n      <NavigationContainer>\n        <AuthStack.Navigator>\n          {!this.state.accessToken ? (\n            <>\n              <AuthStack.Screen\n                name=\"SignIn\"\n                options={{\n                  title: 'Fitness Tracker Welcome',\n                }}\n              >\n                {(props) => <LoginView {...props} login={this.login} />}\n              </AuthStack.Screen>\n\n              <AuthStack.Screen\n                name=\"SignUp\"\n                options={{\n                  title: 'Fitness Tracker Signup',\n                }}\n              >\n                {(props) => <SignupView {...props} />}\n              </AuthStack.Screen>\n            </>\n          ) : (\n              <>\n                <AuthStack.Screen name=\"FitnessTracker\" options={{\n                  headerLeft: this.SignoutButton\n                }}>\n                  {(props) => <ProfileView {...props} username={this.state.username} accessToken={this.state.accessToken} revokeAccessToken={this.revokeAccessToken} />}\n                </AuthStack.Screen>\n              </>\n\n            )}\n        </AuthStack.Navigator>\n      </NavigationContainer>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}