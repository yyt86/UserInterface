{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\course\\\\639-UI\\\\react_native2_alpha-yyt86-main\\\\TimePicker.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\n\nvar TimePicker = function (_React$Component) {\n  _inherits(TimePicker, _React$Component);\n\n  var _super = _createSuper(TimePicker);\n\n  function TimePicker(props) {\n    var _this;\n\n    _classCallCheck(this, TimePicker);\n\n    _this = _super.call(this, props);\n\n    _this.onChange = function (event, selectedDate) {\n      var currentDate = selectedDate || _this.state.date;\n      _this.setState({\n        show: Platform.OS === 'android' ? true : false\n      }), _this.setState({\n        data: currentDate\n      });\n    };\n\n    _this.showMode = function (currentMode) {\n      _this.setState({\n        show: true\n      });\n\n      _this.setState({\n        mode: currentMode\n      });\n    };\n\n    _this.showDatepicker = function () {\n      showMode('date');\n    };\n\n    _this.showTimepicker = function () {\n      showMode('time');\n    };\n\n    _this.state = {\n      date: _this.props.date,\n      mode: 'data',\n      show: false\n    };\n    return _this;\n  }\n\n  _createClass(TimePicker, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 8\n        }\n      }, React.createElement(View, {\n        style: styles.spaceSmall,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      }, React.createElement(Button, {\n        color: \"#942a21\",\n        style: styles.buttonInline,\n        onPress: this.showDatepicker,\n        title: \"SET DATA\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.spaceHorizontal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        color: \"#942a21\",\n        style: styles.buttonInline,\n        onPress: this.showTimepicker,\n        title: \"SET TIME\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }), this.state.show && React.createElement(DateTimePicker, {\n        testID: \"dateTimePicker\",\n        value: this.state.date,\n        mode: this.state.mode,\n        is24Hour: true,\n        display: \"default\",\n        onChange: this.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return TimePicker;\n}(React.Component);\n\n;\nvar styles = StyleSheet.create({\n  buttonInline: {\n    display: \"flex\"\n  },\n  spaceSmall: {\n    width: 20,\n    height: 10\n  },\n  spaceHorizontal: {\n    display: \"flex\",\n    width: 20\n  }\n});\nexport default TimePicker;","map":{"version":3,"sources":["F:/course/639-UI/react_native2_alpha-yyt86-main/TimePicker.js"],"names":["React","DateTimePicker","TimePicker","props","onChange","event","selectedDate","currentDate","state","date","setState","show","Platform","OS","data","showMode","currentMode","mode","showDatepicker","showTimepicker","styles","spaceSmall","flexDirection","flexWrap","buttonInline","spaceHorizontal","Component","StyleSheet","create","display","width","height"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {View, Button, Platform, StyleSheet, Text} from 'react-native';\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\n\r\n\r\nclass TimePicker extends React.Component {\r\n    // const [date, setDate] = useState(new Date(1598051730000));\r\n    // const [mode, setMode] = useState('date');\r\n    // const [show, setShow] = useState(false)ï¼›\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n           date: this.props.date,\r\n           mode: 'data',\r\n           show: false,\r\n        }\r\n     }\r\n  \r\n    onChange = (event, selectedDate) => {\r\n      const currentDate = selectedDate || this.state.date;\r\n      this.setState({show: Platform.OS === 'android' ? true : false}),\r\n      this.setState({data: currentDate});\r\n    //   this.props.getDate(currentDate);\r\n    };\r\n\r\n\r\n  \r\n    showMode = (currentMode) => {\r\n        this.setState({show: true});\r\n        this.setState({mode: currentMode});\r\n    };\r\n  \r\n    showDatepicker = () => {\r\n      showMode('date');\r\n    };\r\n  \r\n    showTimepicker = () => {\r\n      showMode('time');\r\n    };\r\n  render(){\r\n    return (\r\n       <View>\r\n         {/* <View>\r\n            <Text>{this.state.data}</Text>\r\n            <Text></Text>\r\n        </View> */}\r\n        <View style={styles.spaceSmall}></View>\r\n      <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\r\n       \r\n        <Button color=\"#942a21\" style={styles.buttonInline} onPress={this.showDatepicker} title=\"SET DATA\" />\r\n        \r\n        <View style={styles.spaceHorizontal} />\r\n        \r\n        <Button color=\"#942a21\" style={styles.buttonInline} onPress={this.showTimepicker} title=\"SET TIME\" />\r\n        \r\n        {this.state.show && (\r\n          <DateTimePicker\r\n            testID=\"dateTimePicker\"\r\n            value={this.state.date}\r\n            mode={this.state.mode}\r\n            is24Hour={true}\r\n            display=\"default\"\r\n            onChange={this.onChange}\r\n          />\r\n        )}\r\n      </View>\r\n    \r\n        </View> \r\n    );\r\n    }\r\n  };\r\n\r\n  const styles = StyleSheet.create({\r\n    buttonInline: {\r\n        display: \"flex\"\r\n      },\r\n      spaceSmall: {\r\n        width: 20,\r\n        height: 10,\r\n      },\r\n      spaceHorizontal: {\r\n        display: \"flex\",\r\n        width: 20\r\n      },\r\n  });\r\n\r\n  export default TimePicker;"]},"metadata":{},"sourceType":"module"}