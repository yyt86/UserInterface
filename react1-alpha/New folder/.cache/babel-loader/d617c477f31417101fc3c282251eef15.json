{"ast":null,"code":"var _jsxFileName = \"F:\\\\course\\\\639-UI\\\\react1-alpha-yyt86-master\\\\src\\\\Course.js\";\nimport React from 'react';\nimport './App.css';\nimport Section from './Section';\nimport \"./course.css\";\n\nclass Course extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.Subsection = (section, num) => {\n      let sub_sections = section[num].subsections;\n      return Object.keys(sub_sections).map((key, index) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            margin: '5px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 3\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 4\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          className: \"num_s\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 5\n          }\n        }, sub_sections[index].number, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => {// const {callbackFromCourse} = this.props;\n            // var cursubsec = JSON.parse(JSON.stringify(sub_sections));\n            // var cursec = JSON.parse(JSON.stringify(section));\n            // var curdata = JSON.parse(JSON.stringify(this.props.data));\n            // callbackFromCourse(curdata, cursec, index, cursubsec, index );\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 6\n          }\n        }, \"Add Subsection\")), /*#__PURE__*/React.createElement(\"ul\", {\n          className: \".ul3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 4\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 5\n          }\n        }, sub_sections[index].location), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 5\n          }\n        }, \"Metting Times\", /*#__PURE__*/React.createElement(\"ul\", {\n          className: \".ul4\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 5\n          }\n        }, Object.keys(sub_sections[index].time).map((k, i) => /*#__PURE__*/React.createElement(\"li\", {\n          key: k,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 6\n          }\n        }, k, \": \", sub_sections[index].time[k])))))));\n      });\n    };\n\n    this.Section = () => {\n      let sections = this.props.data.sections;\n      return Object.keys(sections).map((key, index) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            margin: '5px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 3\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          className: \"head_s\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 7\n          }\n        }, sections[index].number, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => {// const {callbackFromCourse} = this.props;\n            // var cursubsec = JSON.parse(JSON.stringify(sections[index].subsections));\n            // var cursec = JSON.parse(JSON.stringify(sections[index]));\n            // var curdata = JSON.parse(JSON.stringify(this.props.data));\n            // callbackFromCourse(curdata, cursec, index, cursubsec, null );\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 9\n          }\n        }, \"Add Section\")), /*#__PURE__*/React.createElement(\"ul\", {\n          className: \".ul1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 7\n          }\n        }, \"Instructor: \", sections[index].instructor), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 7\n          }\n        }, \"Location: \", sections[index].location), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 7\n          }\n        }, \"Metting Times\", /*#__PURE__*/React.createElement(\"ul\", {\n          className: \".ul2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 7\n          }\n        }, Object.keys(sections[index].time).map((k, i) => /*#__PURE__*/React.createElement(\"li\", {\n          key: k,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 9\n          }\n        }, k, \": \", sections[index].time[k])))))), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          className: \"sub_s\",\n          key: sections.number,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 7\n          }\n        }, \"Subsections\"), this.Subsection(sections, index)));\n      });\n    };\n\n    this.state = {\n      addSection: \"\",\n      addSubsection: \"\",\n      cart: []\n    };\n  }\n\n  getReq(arr) {\n    if (arr.length === 0) {\n      return \"\";\n    } else if (arr[0][0].constructor === Array) {\n      let list = [];\n\n      for (const item of arr[0].entries()) {\n        list.push(item.join(\" OR \"));\n      }\n\n      let list1 = list.map(x => \"(\" + x + \")\");\n      return list1.join(\" AND \");\n    } else {\n      // console.log('before' + arr[0])\n      let newarr = arr[0].map(x => \"(\" + x + \")\"); // console.log('after' + newarr)\n\n      if (newarr.length > 1) {\n        // console.log(newarr)\n        return newarr.join(\" AND \");\n      } else {\n        return newarr[0];\n      }\n    }\n  }\n\n  getSection(course) {\n    let {\n      sections\n    } = this.props.data;\n\n    if (sections.length === 0) {\n      return \"\";\n    } else {\n      let secs = [];\n      secs.push( /*#__PURE__*/React.createElement(\"p\", {\n        className: \"sec\",\n        key: course.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }, \"Sections\"));\n\n      for (const sect of sections.entries()) {\n        secs.push( /*#__PURE__*/React.createElement(Section, {\n          key: sect.number,\n          section: sect,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      return secs;\n    }\n  } // add (course, section, subsection){\n  //   const course_selected = this.state.filteredCourses[course];\n  //   const course_cart = {\n  //     number: course_selected.number,\n  //     name: course_selected.name\n  //   }\n  //   if(section !== \"\"){\n  //     course_cart.sec_num = section;\n  //     course_cart.sec = course_selected.sections[section];\n  //   }\n  //   if(subsection !== \"\"){\n  //     course_cart.subsec_num = subsection;\n  //   }\n  //   if(!this.state.cart.includes(course_selected)){\n  //     this.setState( prevState => (this.cart.push(course_selected)))\n  //   }\n  // }\n\n\n  handleSectionClick() {\n    this.setState(prevState => ({\n      addSection: false,\n      addSubsection: false\n    }));\n  }\n\n  render() {\n    // console.log(this.props.data.requisites);\n    const course = this.props.data;\n    const {\n      add\n    } = this.props; // const {sections} = course;\n    // console.log(sections)\n    // const sec = Object.values(sections);\n    // const sec_keys = Object.keys(sections);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 33\n      }\n    }, \"(\", course.number, \") (\", course.name, \") |\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"credit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 81\n      }\n    }, \" (\", course.credits, \" Credits)   \"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"credit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }, \" Add Course\"), \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"subject\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, \"Subject: \", course.subject), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"des\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, course.description), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"req\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"req_title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 32\n      }\n    }, \"Requisites: \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 79\n      }\n    }, this.getReq(course.requisites))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"key\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"u\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 32\n      }\n    }, \"Keywords: \"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 50\n      }\n    }, course.keywords, \".join(',')\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"secs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"sec\",\n      key: course.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 12\n      }\n    }, \"Sections\"), this.Section()), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 12\n      }\n    }));\n  }\n\n} // render(){\n//   const courses = this.props.data;\n//   console.log(Object.values(courses));\n//   // const {add} = this.props\n//   // const {sections} = course;\n//   // console.log(sections)\n//   // const sec = Object.values(sections);\n//   // const sec_keys = Object.keys(sections);\n//   return (\n//     Object.values(courses).map((key,index) => {\n//       return(\n//     <div>\n//           <p className=\"head\"><span>({courses[key].number}) ({courses[index].name}) |</span><span className=\"credit\"> ({courses[index].credits} Credits)   </span>\n//           <button className=\"credit\"  > Add Course</button> </p>\n//           <p className=\"subject\">Subject: {courses[index].subject}</p>\n//           <p className=\"des\">{courses[index].description}</p>\n//           <p className=\"req\"><span className=\"req_title\">Requisites: </span><span>{this.getReq(courses[index].requisites)}</span></p>\n//           <p className=\"key\"><u>Keywords: </u> <span>{courses[index].keywords}.join(',')</span></p>\n//          {/* {\n//            sec.map((k, i) => (\n//             <div>\n//             <h2>Sections</h2>\n//             <Section section={k} />\n//             </div>\n//            )\n//               )\n//          } */}\n//          <div className=\"secs\">\n//            {this.Section()}\n//          </div>\n//          <br/>\n//          <br/> \n//     </div>)}\n//   ))\n// }\n\n\nexport default Course;","map":{"version":3,"sources":["F:/course/639-UI/react1-alpha-yyt86-master/src/Course.js"],"names":["React","Section","Course","Component","constructor","props","Subsection","section","num","sub_sections","subsections","Object","keys","map","key","index","margin","number","location","time","k","i","sections","data","instructor","state","addSection","addSubsection","cart","getReq","arr","length","Array","list","item","entries","push","join","list1","x","newarr","getSection","course","secs","name","sect","handleSectionClick","setState","prevState","render","add","credits","subject","description","requisites","keywords"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport Section from './Section'\r\nimport \"./course.css\"\r\n\r\nclass Course extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      addSection: \"\",\r\n      addSubsection: \"\",\r\n      cart: []\r\n    }\r\n}\r\n  \r\n  \r\n\r\n  getReq (arr){\r\n    if (arr.length === 0){\r\n      return \"\"\r\n    }\r\n    else if(arr[0][0].constructor === Array){\r\n      \r\n      let list=[];\r\n    for(const item of arr[0].entries()){\r\n      \r\n      list.push(item.join(\" OR \"))\r\n    }\r\n    let list1 = list.map(x =>(\"(\"+x+\")\"))\r\n    return list1.join(\" AND \")\r\n    }\r\n\r\n    else{\r\n      // console.log('before' + arr[0])\r\n      let newarr = arr[0].map(x =>(\"(\"+x+\")\"))\r\n      // console.log('after' + newarr)\r\n      if(newarr.length > 1){\r\n        // console.log(newarr)\r\n        return newarr.join(\" AND \")\r\n      }\r\n      else{\r\n        return newarr[0]\r\n      }\r\n      \r\n    }\r\n    \r\n  }\r\n\r\n  Subsection = (section, num) => {\r\n   let sub_sections = section[num].subsections;\r\n    return Object.keys(sub_sections).map((key,index) => {\r\n      return (\r\n\r\n\t\t<div style={{margin: '5px'}}>\r\n\t\t\r\n\t\t\t{/* <h2>Sections</h2> */}\r\n\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t<div>\r\n\t\t\t\t<p className=\"num_s\">{sub_sections[index].number} \r\n\t\t\t\t\t<button onClick={() => {\r\n\t\t\t\t\t// const {callbackFromCourse} = this.props;\r\n\r\n\t\t\t\t\t// var cursubsec = JSON.parse(JSON.stringify(sub_sections));\r\n\t\t\t\t\t// var cursec = JSON.parse(JSON.stringify(section));\r\n\t\t\t\t\t// var curdata = JSON.parse(JSON.stringify(this.props.data));\r\n\t\t\t\t\t// callbackFromCourse(curdata, cursec, index, cursubsec, index );\r\n\t\t\t\t\t}}>Add Subsection</button>\r\n\t\t\t\t</p>\t\t\t\r\n\t\t\t<ul className=\".ul3\">\r\n\t\t\t\t<li>{sub_sections[index].location}</li>\r\n\t\t\t\t<li>Metting Times\r\n\t\t\t\t<ul className=\".ul4\">\r\n\t\t\t\t\t{Object.keys(sub_sections[index].time).map((k, i) => (\r\n\t\t\t\t\t<li key={k}>{k}: {sub_sections[index].time[k]}</li>))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>)})\t\r\n\t\r\n}\r\n\r\n\r\n\r\nSection = () => {\r\n  let sections = this.props.data.sections;\r\n  return Object.keys(sections).map((key,index) => {\r\n    return (\r\n\r\n  <div style={{margin: '5px'}}>\r\n  \r\n    {/* <h2>Sections</h2> */}\r\n\r\n    \r\n      \r\n    <div>\r\n      <p className=\"head_s\">{sections[index].number} \r\n        <button onClick={() => {\r\n        // const {callbackFromCourse} = this.props;\r\n\r\n        // var cursubsec = JSON.parse(JSON.stringify(sections[index].subsections));\r\n        // var cursec = JSON.parse(JSON.stringify(sections[index]));\r\n        // var curdata = JSON.parse(JSON.stringify(this.props.data));\r\n        // callbackFromCourse(curdata, cursec, index, cursubsec, null );\r\n        }}>Add Section</button>\r\n      </p>\t\t\t\r\n    <ul className=\".ul1\">\r\n      <li>Instructor: {sections[index].instructor}</li>\r\n      <li>Location: {sections[index].location}</li>\r\n      <li>Metting Times\r\n      <ul className=\".ul2\">\r\n        {Object.keys(sections[index].time).map((k, i) => (\r\n        <li key={k}>{k}: {sections[index].time[k]}</li>))}\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n    </div>\r\n    <div>\r\n      <p className=\"sub_s\" key={sections.number}>Subsections</p>   \r\n       {this.Subsection(sections, index)}\r\n\r\n     </div>\r\n\r\n  </div>)})\t\r\n\r\n}\r\n\r\n  getSection(course) {\r\n    let {sections} = this.props.data;\r\n    if(sections.length === 0){\r\n      return \"\"\r\n    }\r\n    else{\r\n      let secs = [];\r\n      secs.push(<p className=\"sec\" key={course.name}>Sections</p>)\r\n      for(const sect of sections.entries()) {\r\n        secs.push (\r\n          <Section key={sect.number} section={sect}/>\r\n        )\r\n      }\r\n      return secs;\r\n    }\r\n    \r\n\r\n    \r\n  }\r\n\r\n\r\n  // add (course, section, subsection){\r\n  //   const course_selected = this.state.filteredCourses[course];\r\n  //   const course_cart = {\r\n  //     number: course_selected.number,\r\n  //     name: course_selected.name\r\n  //   }\r\n\r\n  //   if(section !== \"\"){\r\n  //     course_cart.sec_num = section;\r\n  //     course_cart.sec = course_selected.sections[section];\r\n  //   }\r\n\r\n  //   if(subsection !== \"\"){\r\n  //     course_cart.subsec_num = subsection;\r\n  //   }\r\n\r\n  //   if(!this.state.cart.includes(course_selected)){\r\n  //     this.setState( prevState => (this.cart.push(course_selected)))\r\n  //   }\r\n\r\n  // }\r\n\r\n  handleSectionClick(){\r\n    this.setState(prevState => ({\r\n      addSection: false,\r\n      addSubsection: false\r\n    }))\r\n\r\n   \r\n  }\r\n\r\n\r\n\r\n  render(){\r\n    // console.log(this.props.data.requisites);\r\n    const course = this.props.data;\r\n    const {add} = this.props\r\n    // const {sections} = course;\r\n    // console.log(sections)\r\n    // const sec = Object.values(sections);\r\n    // const sec_keys = Object.keys(sections);\r\n    \r\n    return (\r\n      \r\n      <div>\r\n         \r\n            <p className=\"head\"><span>({course.number}) ({course.name}) |</span><span className=\"credit\"> ({course.credits} Credits)   </span>\r\n            <button className=\"credit\"  > Add Course</button> </p>\r\n            <p className=\"subject\">Subject: {course.subject}</p>\r\n            <p className=\"des\">{course.description}</p>\r\n            <p className=\"req\"><span className=\"req_title\">Requisites: </span><span>{this.getReq(course.requisites)}</span></p>\r\n            <p className=\"key\"><u>Keywords: </u> <span>{course.keywords}.join(',')</span></p>\r\n           \r\n           {/* {\r\n             sec.map((k, i) => (\r\n              <div>\r\n              <h2>Sections</h2>\r\n              <Section section={k} />\r\n              </div>\r\n             )\r\n                )\r\n           } */}\r\n           \r\n           <div className=\"secs\">\r\n           <p className=\"sec\" key={course.name}>Sections</p>\r\n             {this.Section()}\r\n           </div>\r\n           <br/>\r\n           <br/> \r\n      </div>\r\n    )\r\n  \r\n  }\r\n}\r\n\r\n\r\n// render(){\r\n  \r\n//   const courses = this.props.data;\r\n//   console.log(Object.values(courses));\r\n//   // const {add} = this.props\r\n//   // const {sections} = course;\r\n//   // console.log(sections)\r\n//   // const sec = Object.values(sections);\r\n//   // const sec_keys = Object.keys(sections);\r\n  \r\n//   return (\r\n//     Object.values(courses).map((key,index) => {\r\n//       return(\r\n//     <div>\r\n       \r\n//           <p className=\"head\"><span>({courses[key].number}) ({courses[index].name}) |</span><span className=\"credit\"> ({courses[index].credits} Credits)   </span>\r\n//           <button className=\"credit\"  > Add Course</button> </p>\r\n//           <p className=\"subject\">Subject: {courses[index].subject}</p>\r\n//           <p className=\"des\">{courses[index].description}</p>\r\n//           <p className=\"req\"><span className=\"req_title\">Requisites: </span><span>{this.getReq(courses[index].requisites)}</span></p>\r\n//           <p className=\"key\"><u>Keywords: </u> <span>{courses[index].keywords}.join(',')</span></p>\r\n         \r\n//          {/* {\r\n//            sec.map((k, i) => (\r\n//             <div>\r\n//             <h2>Sections</h2>\r\n//             <Section section={k} />\r\n//             </div>\r\n//            )\r\n//               )\r\n//          } */}\r\n         \r\n//          <div className=\"secs\">\r\n//            {this.Section()}\r\n//          </div>\r\n//          <br/>\r\n//          <br/> \r\n//     </div>)}\r\n//   ))\r\n\r\n// }\r\n\r\n\r\nexport default Course\r\n"]},"metadata":{},"sourceType":"module"}