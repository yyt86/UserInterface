{"ast":null,"code":"var _jsxFileName = \"F:\\\\course\\\\639-UI\\\\react1-alpha-yyt86-master\\\\src\\\\Course.js\";\nimport React from 'react';\nimport './App.css';\nimport Section from './Section';\nimport \"./course.css\";\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\n\nclass Course extends React.Component {\n  constructor(props) {\n    super(props); // this.section = React.createRef();\n    // this.subsection = React.createRef();\n\n    this.getSectionOptions = data => {\n      let sects = [];\n      let sectionOptions = [];\n      sects.push(\"All\");\n\n      for (const section of Object.values(data.sections)) {\n        if (sects.indexOf(section.number) === -1) sects.push(section.number);\n      }\n\n      for (const sect of sects) {\n        sectionOptions.push( /*#__PURE__*/React.createElement(\"option\", {\n          key: sect,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 27\n          }\n        }, sect));\n      }\n\n      return sectionOptions;\n    };\n\n    this.getSubsectionOptions = data => {\n      let subsects = [];\n      let sec_id = 0;\n      let subSectionOptions = [];\n      let sectionSelection = this.state.section;\n      subsects.push(\"All\");\n\n      if (sectionSelection !== 'All') {\n        for (const [key, section] of Object.entries(data.sections)) {\n          if (section.number === sectionSelection) sec_id = key;\n        }\n\n        for (const subsection of Object.values(data.sections[sec_id].subsections)) {\n          if (subsects.indexOf(subsection.number) === -1) subsects.push(subsection.number);\n        }\n\n        for (const subsect of subsects) {\n          subSectionOptions.push( /*#__PURE__*/React.createElement(\"option\", {\n            key: subsect,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 32\n            }\n          }, subsect));\n        }\n      } else {\n        subSectionOptions.push( /*#__PURE__*/React.createElement(\"option\", {\n          key: 'All',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 30\n          }\n        }, 'All'));\n      }\n\n      return subSectionOptions;\n    };\n\n    this.state = {\n      addSection: \"\",\n      addSubsection: \"\",\n      cart: [],\n      sectiom: \"\",\n      subsection: \"\"\n    };\n  }\n\n  getReq(arr) {\n    if (arr.length === 0) {\n      return \"None\";\n    } else if (arr[0].constructor === Array) {\n      let list = [];\n\n      for (const item of arr.values()) {\n        if (item.length > 1) list.push(item.join(\" OR \"));else list.push(item);\n      }\n\n      let list1 = list.map(x => \"(\" + x + \")\");\n      return list1.join(\" AND \");\n    }\n  } // getSections(data) {\n  // \tlet sects = [];\n  // \tsects.push(\"All\");\n  // \tfor(const section of Object.values(data.sections)) {\n  // \t  if(sects.indexOf(section.number) === -1)\n  // \t  \tsects.push(section.number);\n  // \t}\n  // \treturn sects;\n  // }\n\n\n  handleChangeSec(event) {\n    this.setState({\n      section: event.target.value\n    });\n  }\n\n  handleChangeSubsec(event) {\n    this.setState({\n      subsection: event.target.value\n    });\n  }\n\n  render() {\n    // console.log(this.props.data.number);\n    const course = this.props.data;\n    return /*#__PURE__*/React.createElement(Card, {\n      style: {\n        marginTop: '5px',\n        marginBottom: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, course.number), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, \" \", course.name, \" \"), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formCredit\",\n      style: {\n        float: \"middle\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        width: '50px',\n        height: '50px',\n        borderRadius: '50%',\n        backgroundColor: \"#7FFFD4\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, course.credits, \"cr \")), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formSections\",\n      onChange: () => this.handleChangeSec(),\n      style: {\n        marginRight: \"10px\",\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, \"Sections\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      ref: this.section,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, this.getSectionOptions(course))), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formSections\",\n      onChange: () => this.handleChangeSubsec(),\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, \"Subsections\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      ref: this.subsection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, this.getSubsectionOptions(course))))));\n  }\n\n}\n\nexport default Course;","map":{"version":3,"sources":["F:/course/639-UI/react1-alpha-yyt86-master/src/Course.js"],"names":["React","Section","Card","Form","Course","Component","constructor","props","getSectionOptions","data","sects","sectionOptions","push","section","Object","values","sections","indexOf","number","sect","getSubsectionOptions","subsects","sec_id","subSectionOptions","sectionSelection","state","key","entries","subsection","subsections","subsect","addSection","addSubsection","cart","sectiom","getReq","arr","length","Array","list","item","join","list1","map","x","handleChangeSec","event","setState","target","value","handleChangeSubsec","render","course","marginTop","marginBottom","name","float","width","height","borderRadius","backgroundColor","credits","marginRight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,cAAP;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;AACA;;AAHiB,SAkDnBC,iBAlDmB,GAkDEC,IAAD,IAAU;AAC5B,UAAIC,KAAK,GAAG,EAAZ;AACA,UAAIC,cAAc,GAAG,EAArB;AAEFD,MAAAA,KAAK,CAACE,IAAN,CAAW,KAAX;;AACA,WAAI,MAAMC,OAAV,IAAqBC,MAAM,CAACC,MAAP,CAAcN,IAAI,CAACO,QAAnB,CAArB,EAAmD;AACjD,YAAGN,KAAK,CAACO,OAAN,CAAcJ,OAAO,CAACK,MAAtB,MAAkC,CAAC,CAAtC,EACCR,KAAK,CAACE,IAAN,CAAWC,OAAO,CAACK,MAAnB;AACF;;AAEC,WAAI,MAAMC,IAAV,IAAkBT,KAAlB,EAAyB;AACvBC,QAAAA,cAAc,CAACC,IAAf,eAAoB;AAAQ,UAAA,GAAG,EAAEO,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBA,IAApB,CAApB;AACD;;AAED,aAAOR,cAAP;AACD,KAjEkB;;AAAA,SAmEnBS,oBAnEmB,GAmEKX,IAAD,IAAU;AAC/B,UAAIY,QAAQ,GAAG,EAAf;AACA,UAAIC,MAAM,GAAG,CAAb;AACA,UAAIC,iBAAiB,GAAG,EAAxB;AACA,UAAIC,gBAAgB,GAAG,KAAKC,KAAL,CAAWZ,OAAlC;AAEAQ,MAAAA,QAAQ,CAACT,IAAT,CAAc,KAAd;;AACA,UAAGY,gBAAgB,KAAK,KAAxB,EAA8B;AAC5B,aAAI,MAAM,CAACE,GAAD,EAAKb,OAAL,CAAV,IAA2BC,MAAM,CAACa,OAAP,CAAelB,IAAI,CAACO,QAApB,CAA3B,EAA0D;AACxD,cAAGH,OAAO,CAACK,MAAR,KAAmBM,gBAAtB,EACEF,MAAM,GAAGI,GAAT;AACH;;AAED,aAAI,MAAME,UAAV,IAAwBd,MAAM,CAACC,MAAP,CAAcN,IAAI,CAACO,QAAL,CAAcM,MAAd,EAAsBO,WAApC,CAAxB,EAA0E;AACxE,cAAGR,QAAQ,CAACJ,OAAT,CAAiBW,UAAU,CAACV,MAA5B,MAAwC,CAAC,CAA5C,EACEG,QAAQ,CAACT,IAAT,CAAcgB,UAAU,CAACV,MAAzB;AACH;;AAED,aAAI,MAAMY,OAAV,IAAqBT,QAArB,EAA+B;AAC7BE,UAAAA,iBAAiB,CAACX,IAAlB,eAAuB;AAAQ,YAAA,GAAG,EAAEkB,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAuBA,OAAvB,CAAvB;AACD;AACF,OAdD,MAeI;AACFP,QAAAA,iBAAiB,CAACX,IAAlB,eAAuB;AAAQ,UAAA,GAAG,EAAE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqB,KAArB,CAAvB;AACD;;AAED,aAAOW,iBAAP;AACD,KA9FkB;;AAKjB,SAAKE,KAAL,GAAa;AACXM,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,aAAa,EAAE,EAFJ;AAGXC,MAAAA,IAAI,EAAE,EAHK;AAIXC,MAAAA,OAAO,EAAC,EAJG;AAKXN,MAAAA,UAAU,EAAC;AALA,KAAb;AAOH;;AAICO,EAAAA,MAAM,CAAEC,GAAF,EAAM;AACV,QAAIA,GAAG,CAACC,MAAJ,KAAe,CAAnB,EAAqB;AACnB,aAAO,MAAP;AACD,KAFD,MAGK,IAAGD,GAAG,CAAC,CAAD,CAAH,CAAO9B,WAAP,KAAuBgC,KAA1B,EAAgC;AAEnC,UAAIC,IAAI,GAAC,EAAT;;AACA,WAAI,MAAMC,IAAV,IAAkBJ,GAAG,CAACrB,MAAJ,EAAlB,EAA+B;AAC7B,YAAGyB,IAAI,CAACH,MAAL,GAAc,CAAjB,EACEE,IAAI,CAAC3B,IAAL,CAAU4B,IAAI,CAACC,IAAL,CAAU,MAAV,CAAV,EADF,KAGEF,IAAI,CAAC3B,IAAL,CAAU4B,IAAV;AACH;;AACD,UAAIE,KAAK,GAAGH,IAAI,CAACI,GAAL,CAASC,CAAC,IAAI,MAAIA,CAAJ,GAAM,GAApB,CAAZ;AACA,aAAOF,KAAK,CAACD,IAAN,CAAW,OAAX,CAAP;AACD;AAEF,GAlCkC,CAoCnC;AACD;AACA;AAEA;AACA;AACA;AACA;AAEA;AACC;;;AACAI,EAAAA,eAAe,CAACC,KAAD,EAAO;AAAK,SAAKC,QAAL,CAAc;AAAClC,MAAAA,OAAO,EAAEiC,KAAK,CAACE,MAAN,CAAaC;AAAvB,KAAd;AAAgD;;AAC3EC,EAAAA,kBAAkB,CAACJ,KAAD,EAAO;AAAK,SAAKC,QAAL,CAAc;AAACnB,MAAAA,UAAU,EAAEkB,KAAK,CAACE,MAAN,CAAaC;AAA1B,KAAd;AAAmD;;AAqDjFE,EAAAA,MAAM,GAAE;AACN;AACA,UAAMC,MAAM,GAAG,KAAK7C,KAAL,CAAWE,IAA1B;AAEA,wBAEE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAC4C,QAAAA,SAAS,EAAE,KAAZ;AAAmBC,QAAAA,YAAY,EAAC;AAAhC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaF,MAAM,CAAClC,MAApB,CADF,eAEE,oBAAC,IAAD,CAAM,QAAN;AAAe,MAAA,SAAS,EAAC,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA6CkC,MAAM,CAACG,IAApD,MAFF,eAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,YAAtB;AAAoC,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC,MAAP;AAAeC,QAAAA,MAAM,EAAC,MAAtB;AAA8BC,QAAAA,YAAY,EAAC,KAA3C;AAAkDC,QAAAA,eAAe,EAAE;AAAnE,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6FR,MAAM,CAACS,OAApG,QADA,CADA,eAKE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,cAAtB;AAAsC,MAAA,QAAQ,EAAE,MAAM,KAAKhB,eAAL,EAAtD;AAA8E,MAAA,KAAK,EAAE;AAACiB,QAAAA,WAAW,EAAC,MAAb;AAAqBN,QAAAA,KAAK,EAAC;AAA3B,OAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,EAAE,EAAC,QAAjB;AAA0B,MAAA,GAAG,EAAE,KAAK3C,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,iBAAL,CAAuB4C,MAAvB,CADH,CAFF,CALF,eAYE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,cAAtB;AAAsC,MAAA,QAAQ,EAAE,MAAM,KAAKF,kBAAL,EAAtD;AAAiF,MAAA,KAAK,EAAE;AAACM,QAAAA,KAAK,EAAC;AAAP,OAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,EAAE,EAAC,QAAjB;AAA0B,MAAA,GAAG,EAAE,KAAK5B,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKR,oBAAL,CAA0BgC,MAA1B,CADH,CAFF,CAZF,CAJF,CADJ,CAFF;AAqDD;;AA9JkC;;AAkKrC,eAAehD,MAAf","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport Section from './Section'\r\nimport \"./course.css\"\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass Course extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.section = React.createRef();\r\n    // this.subsection = React.createRef();\r\n\r\n    this.state = {\r\n      addSection: \"\",\r\n      addSubsection: \"\",\r\n      cart: [],\r\n      sectiom:\"\",\r\n      subsection:\"\"\r\n    }\r\n}\r\n  \r\n  \r\n\r\n  getReq (arr){\r\n    if (arr.length === 0){\r\n      return \"None\"\r\n    }\r\n    else if(arr[0].constructor === Array){\r\n      \r\n      let list=[];\r\n      for(const item of arr.values()){\r\n        if(item.length > 1)\r\n          list.push(item.join(\" OR \"))\r\n        else\r\n          list.push(item)\r\n      }\r\n      let list1 = list.map(x =>(\"(\"+x+\")\"))\r\n      return list1.join(\" AND \")\r\n    }\r\n    \r\n  }\r\n\r\n  // getSections(data) {\r\n\t// \tlet sects = [];\r\n\t// \tsects.push(\"All\");\r\n\t\r\n\t// \tfor(const section of Object.values(data.sections)) {\r\n\t// \t  if(sects.indexOf(section.number) === -1)\r\n\t// \t  \tsects.push(section.number);\r\n\t// \t}\r\n\t\r\n\t// \treturn sects;\r\n  // }\r\n  handleChangeSec(event){    this.setState({section: event.target.value});  }\r\n  handleChangeSubsec(event){    this.setState({subsection: event.target.value});  }\r\n\r\n\r\n  getSectionOptions = (data) => {\r\n    let sects = [];\r\n    let sectionOptions = [];\r\n\r\n\t\tsects.push(\"All\");\r\n\t\tfor(const section of Object.values(data.sections)) {\r\n\t\t  if(sects.indexOf(section.number) === -1)\r\n\t\t  \tsects.push(section.number);\r\n\t\t}\r\n\r\n    for(const sect of sects) {\r\n      sectionOptions.push(<option key={sect}>{sect}</option>);\r\n    }\r\n\r\n    return sectionOptions;\r\n  }\r\n    \r\n  getSubsectionOptions = (data) => {\r\n    let subsects = [];\r\n    let sec_id = 0;\r\n    let subSectionOptions = [];\r\n    let sectionSelection = this.state.section;\r\n\r\n    subsects.push(\"All\");\r\n    if(sectionSelection !== 'All'){\r\n      for(const [key,section] of Object.entries(data.sections)) {\r\n        if(section.number === sectionSelection)\r\n          sec_id = key;\r\n      }\r\n\r\n      for(const subsection of Object.values(data.sections[sec_id].subsections)) {\r\n        if(subsects.indexOf(subsection.number) === -1)\r\n          subsects.push(subsection.number);\r\n      }\r\n\r\n      for(const subsect of subsects) {\r\n        subSectionOptions.push(<option key={subsect}>{subsect}</option>);\r\n      }\r\n    }\r\n    else{\r\n      subSectionOptions.push(<option key={'All'}>{'All'}</option>);\r\n    }\r\n  \r\n    return subSectionOptions;\r\n  }  \r\n\r\n\r\n  \r\n\r\n\r\n  render(){\r\n    // console.log(this.props.data.number);\r\n    const course = this.props.data;\r\n    \r\n    return (\r\n      \r\n      <Card style={{marginTop: '5px', marginBottom:'5px'}}>\r\n          <Card.Body>\r\n            <Card.Title>{course.number}</Card.Title>\r\n            <Card.Subtitle className=\"mb-2 text-muted\"> {course.name} </Card.Subtitle>\r\n            \r\n            <Form>\r\n            <Form.Group controlId=\"formCredit\"  style={{float:\"middle\"}} >\r\n            <span style={{width:'50px', height:'50px', borderRadius:'50%', backgroundColor: \"#7FFFD4\"}}>{course.credits}cr </span>\r\n            </Form.Group>\r\n            \r\n              <Form.Group controlId=\"formSections\"  onChange={() => this.handleChangeSec()} style={{marginRight:\"10px\", float:\"right\"}} >\r\n                <Form.Label>Sections</Form.Label>\r\n                <Form.Control as=\"select\" ref={this.section}>\r\n                  {this.getSectionOptions(course)}\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formSections\"  onChange={() => this.handleChangeSubsec()} style={{float:\"right\"}} >\r\n                <Form.Label>Subsections</Form.Label>\r\n                <Form.Control as=\"select\" ref={this.subsection}>\r\n                  {this.getSubsectionOptions(course)}\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form>\r\n\r\n              {/* <div>\r\n         \r\n         <p className=\"head\"><span>({course.number}) {course.name} |</span><span className=\"credit\"> ({course.credits} Credits)   </span>\r\n         {this.props.cartMode ? <button onClick={() => {this.props.removecart(this.props.data, null, null );}}>Remove Course</button> : \r\n      <button onClick={() => {this.props.addtocart(this.props.data, null, null ) }}>Add Course</button>}  </p>\r\n         <p className=\"subject\">Subject: {course.subject}</p>\r\n         <p className=\"des\">{course.description}</p>\r\n         <p className=\"req\"><span className=\"req_title\">Requisites: </span><span>{this.getReq(course.requisites)}</span></p>\r\n         <p className=\"key\"><u>Keywords: </u> <span> {course.keywords.join(', ')}</span></p>\r\n         <p className=\"sec\" key={course.name}>Sections</p>\r\n         <div className=\"secs\">\r\n          <Section key={course.sections.number} data={this.props.data} addtocart={this.props.addtocart} removecart={this.props.removecart} cartMode={this.props.cartMode} />\r\n         </div>\r\n          \r\n         \r\n         <br/>\r\n         <br/> \r\n        </div> */}\r\n          </Card.Body>\r\n      </Card>\r\n     \r\n     \r\n\r\n     \r\n    )\r\n  \r\n  }\r\n}\r\n\r\n\r\nexport default Course\r\n"]},"metadata":{},"sourceType":"module"}