{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\course\\\\639-UI\\\\react_native1_alpha-yyt86-v2\\\\react_native1_alpha-yyt86-v2\\\\LoginView.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport base64 from 'base-64';\n\nvar LoginView = function (_React$Component) {\n  _inherits(LoginView, _React$Component);\n\n  var _super = _createSuper(LoginView);\n\n  function LoginView(props) {\n    var _this;\n\n    _classCallCheck(this, LoginView);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      username: \"\",\n      password: \"\"\n    };\n    _this.handleLogin = _this.handleLogin.bind(_assertThisInitialized(_this));\n    _this.handleSignup = _this.handleSignup.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(LoginView, [{\n    key: \"handleLogin\",\n    value: function handleLogin() {\n      var _this2 = this;\n\n      fetch('https://mysqlcs639.cs.wisc.edu/login', {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Basic ' + base64.encode(this.state.username + \":\" + this.state.password)\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        if (res.token) {\n          _this2.props.login(_this2.state.username, res.token);\n        } else {\n          alert(\"Incorrect username or password! Please try again.\");\n        }\n      });\n    }\n  }, {\n    key: \"handleSignup\",\n    value: function handleSignup() {\n      this.props.navigation.navigate('SignUp');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.bigText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, \"FitnessTracker\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, \"Welcome! Please login or signup to continue.\"), React.createElement(View, {\n        style: styles.space,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlignVertical: \"center\",\n          fontWeight: \"700\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, \"Username\")), React.createElement(TextInput, {\n        style: styles.input,\n        accessible: true,\n        accessibilityLabel: \"Please input your username\",\n        accessibilityHint: \"Swipe down to input your password\",\n        underlineColorAndroid: \"transparent\",\n        onChangeText: function onChangeText(username) {\n          return _this3.setState({\n            username: username\n          });\n        },\n        value: this.state.username,\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlignVertical: \"center\",\n          fontWeight: \"700\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, \"Password\")), React.createElement(TextInput, {\n        style: styles.input,\n        accessible: true,\n        accessibilityLabel: \"Please input your password\",\n        accessibilityHint: \"Swipe left down to click login button and right down to sign up\",\n        secureTextEntry: true,\n        underlineColorAndroid: \"transparent\",\n        onChangeText: function onChangeText(password) {\n          return _this3.setState({\n            password: password\n          });\n        },\n        value: this.state.password,\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.space,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        color: \"#942a21\",\n        style: styles.buttonInline,\n        accessible: true,\n        accessibilityLabel: \"welcome back\" + this.state.username,\n        accessibilityHint: \"You will nevigate to the profile page\",\n        title: \"login\",\n        onPress: this.handleLogin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.spaceHorizontal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }), React.createElement(Button, {\n        color: \"#942a21\",\n        style: styles.buttonInline,\n        accessible: true,\n        accessibilityLabel: \"welcome to fitness track app\",\n        accessibilityHint: \"You will nevigate to the sign up page\",\n        title: \"Signup\",\n        onPress: this.handleSignup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return LoginView;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  bigText: {\n    fontSize: 32,\n    fontWeight: \"700\",\n    marginBottom: 5\n  },\n  space: {\n    width: 20,\n    height: 20\n  },\n  spaceHorizontal: {\n    display: \"flex\",\n    width: 20\n  },\n  buttonInline: {\n    display: \"flex\"\n  },\n  input: {\n    width: 200,\n    padding: 10,\n    margin: 5,\n    height: 40,\n    borderColor: '#c9392c',\n    borderWidth: 1\n  },\n  button: {\n    display: \"flex\",\n    width: 80,\n    height: 40,\n    padding: 10,\n    backgroundColor: \"#942a21\"\n  }\n});\nexport default LoginView;","map":{"version":3,"sources":["F:/course/639-UI/react_native1_alpha-yyt86-v2/react_native1_alpha-yyt86-v2/LoginView.js"],"names":["React","base64","LoginView","props","state","username","password","handleLogin","bind","handleSignup","fetch","method","headers","encode","then","res","json","token","login","alert","navigation","navigate","styles","container","bigText","space","textAlignVertical","fontWeight","input","setState","flexDirection","flexWrap","buttonInline","spaceHorizontal","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontSize","marginBottom","width","height","display","padding","margin","borderColor","borderWidth","button"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, Button, TextInput } from 'react-native';\nimport base64 from 'base-64';\n\nclass LoginView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    }\n\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleSignup = this.handleSignup.bind(this);\n  }\n\n  /**\n   * Logs in to the application.\n   * \n   * Note that we have to follow the authorization rules; a header\n   * with a base64-encoded username and password.\n   * \n   * Upon response, we analyze whether or not we are successful.\n   * If successful, we use a callback from App to log us in and\n   * store the username and token in App.\n   */\n  handleLogin() {\n    fetch('https://mysqlcs639.cs.wisc.edu/login', {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Basic ' + base64.encode(this.state.username + \":\" + this.state.password)\n      }\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.token) {\n          this.props.login(this.state.username, res.token);\n        } else {\n          alert(\"Incorrect username or password! Please try again.\");\n        }\n      });\n  }\n\n  /**\n   * Use React Navigation to switch to the Sign Up page.\n   */\n  handleSignup() {\n    this.props.navigation.navigate('SignUp');\n  }\n\n  /**\n   * Displays and collects the login information.\n   * \n   * The styling could definitely be cleaned up; should be consistent!\n   */\n \n  render() {\n    return (\n      <View style={styles.container} accessible={true}>\n        <Text style={styles.bigText}>FitnessTracker</Text>\n        <Text>Welcome! Please login or signup to continue.</Text>\n        <View style={styles.space} />\n        <View accessible={true}>\n          <Text style={{ textAlignVertical: \"center\", fontWeight: \"700\" }}>Username</Text>\n        </View>\n        <TextInput style={styles.input}\n        // secureTextEntry={true}\n          accessible={true}\n            accessibilityLabel={\"Please input your username\"}\n            accessibilityHint={\"Swipe down to input your password\"}\n          underlineColorAndroid=\"transparent\"\n          // placeholder=\"Username\"\n          // defaultValue = \"Username\"\n          // placeholderTextColor=\"#992a20\"\n          onChangeText={(username) => this.setState({ username: username })}\n          value={this.state.username}\n          autoCapitalize=\"none\" />\n          <View accessible={true}>\n          <Text style={{ textAlignVertical: \"center\", fontWeight: \"700\" }}>Password</Text>\n        </View>\n        <TextInput style={styles.input}\n        accessible={true}\n            accessibilityLabel={\"Please input your password\"}\n            accessibilityHint={\"Swipe left down to click login button and right down to sign up\"}\n          secureTextEntry={true}\n          underlineColorAndroid=\"transparent\"\n          // placeholder=\"Password\"\n          // placeholderTextColor=\"#992a20\"\n          onChangeText={(password) => this.setState({ password: password })}\n          value={this.state.password}\n          autoCapitalize=\"none\" />\n        <View style={styles.space} />\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n          {/* <TouchableOpacity  style={styles.button} title=\"Login\" accessible={true}\n            accessibilityLabel={\"welcome back\" + this.state.username}\n            accessibilityHint={\"You will nevigate to the profile page\"} onPress={this.handleLogin} >\n            <Text style={{fontSize:16, fontWeight: \"700\", color:\"#fff\"}}>LOGIN</Text>\n        </TouchableOpacity> */}\n        <Button color=\"#942a21\" style={styles.buttonInline}  accessible={true}\n            accessibilityLabel={\"welcome back\" + this.state.username}\n            accessibilityHint={\"You will nevigate to the profile page\"} title=\"login\" onPress={this.handleLogin} />\n          <View style={styles.spaceHorizontal} />\n          <Button color=\"#942a21\" style={styles.buttonInline}  accessible={true}\n            accessibilityLabel={\"welcome to fitness track app\"}\n            accessibilityHint={\"You will nevigate to the sign up page\"}  title=\"Signup\" onPress={this.handleSignup} />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  bigText: {\n    fontSize: 32,\n    fontWeight: \"700\",\n    marginBottom: 5\n  },\n  space: {\n    width: 20,\n    height: 20,\n  },\n  spaceHorizontal: {\n    display: \"flex\",\n    width: 20\n  },\n  buttonInline: {\n    display: \"flex\"\n  },\n  input: {\n    width: 200,\n    padding: 10,\n    margin: 5,\n    height: 40,\n    borderColor: '#c9392c',\n    borderWidth: 1\n  },\n\n  button: {\n    // alignItems: \"center\",\n    display: \"flex\",\n    // backgroundColor: \"#DDDDDD\",\n    width: 80,\n    height: 40,\n    padding: 10,\n    backgroundColor:\"#942a21\"\n  },\n});\n\nexport default LoginView;\n"]},"metadata":{},"sourceType":"module"}