{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\course\\\\639-UI\\\\react_native2_alpha-yyt86-main\\\\TimePicker.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\n\nvar TimePicker = function TimePicker() {\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState('date'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mode = _useState4[0],\n      setMode = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      show = _useState6[0],\n      setShow = _useState6[1];\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(Platform.OS === 'ios');\n    setDate(currentDate);\n  };\n\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  var showDatepicker = function showDatepicker() {\n    showMode('date');\n  };\n\n  var showTimepicker = function showTimepicker() {\n    showMode('time');\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    onPress: showDatepicker,\n    title: \"Show date picker!\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    onPress: showTimepicker,\n    title: \"Show time picker!\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  })), show && React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    value: date,\n    mode: mode,\n    is24Hour: true,\n    display: \"default\",\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default TimePicker;","map":{"version":3,"sources":["F:/course/639-UI/react_native2_alpha-yyt86-main/TimePicker.js"],"names":["React","useState","DateTimePicker","TimePicker","Date","date","setDate","mode","setMode","show","setShow","onChange","event","selectedDate","currentDate","Platform","OS","showMode","currentMode","showDatepicker","showTimepicker"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;;;;;;AAEA,OAAOC,cAAP,MAA2B,wCAA3B;;AAoFA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA,kBACCF,QAAQ,CAAC,IAAIG,IAAJ,EAAD,CADT;AAAA;AAAA,MAChBC,IADgB;AAAA,MACVC,OADU;;AAAA,mBAECL,QAAQ,CAAC,MAAD,CAFT;AAAA;AAAA,MAEhBM,IAFgB;AAAA,MAEVC,OAFU;;AAAA,mBAGCP,QAAQ,CAAC,KAAD,CAHT;AAAA;AAAA,MAGhBQ,IAHgB;AAAA,MAGVC,OAHU;;AAKvB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,YAAR,EAAyB;AACxC,QAAMC,WAAW,GAAGD,YAAY,IAAIR,IAApC;AACAK,IAAAA,OAAO,CAACK,QAAQ,CAACC,EAAT,KAAgB,KAAjB,CAAP;AACAV,IAAAA,OAAO,CAACQ,WAAD,CAAP;AACD,GAJD;;AAMA,MAAMG,QAAQ,GAAG,SAAXA,QAAW,CAACC,WAAD,EAAiB;AAChCR,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAF,IAAAA,OAAO,CAACU,WAAD,CAAP;AACD,GAHD;;AAKA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BF,IAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,GAFD;;AAIA,MAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BH,IAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,GAFD;;AAIA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEE,cAAjB;AAAiC,IAAA,KAAK,EAAC,mBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,cAAjB;AAAiC,IAAA,KAAK,EAAC,mBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAOGX,IAAI,IACH,oBAAC,cAAD;AACE,IAAA,MAAM,EAAC,gBADT;AAEE,IAAA,KAAK,EAAEJ,IAFT;AAGE,IAAA,IAAI,EAAEE,IAHR;AAIE,IAAA,QAAQ,EAAE,IAJZ;AAKE,IAAA,OAAO,EAAC,SALV;AAME,IAAA,QAAQ,EAAEI,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADF;AAoBD,CA5CD;;AA8CA,eAAgBR,UAAhB","sourcesContent":["import React, {useState}  from 'react';\r\nimport {View, Button, Platform, StyleSheet, Text} from 'react-native';\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\n\r\n\r\n// class TimePicker extends React.Component {\r\n//     // const [date, setDate] = useState(new Date(1598051730000));\r\n//     // const [mode, setMode] = useState('date');\r\n//     // const [show, setShow] = useState(false)ï¼›\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state = {\r\n//            date: this.props.date,\r\n//            mode: 'data',\r\n//            show: false,\r\n//         }\r\n//      }\r\n  \r\n//     onChange = (event, selectedDate) => {\r\n//       let currentDate = selectedDate || this.state.date;\r\n//       this.setState({show: Platform.OS === 'android' ? true : false}),\r\n//       this.setState({data: currentDate});\r\n//     //   this.props.getDate(currentDate);\r\n//     };\r\n\r\n\r\n  \r\n//     showMode = (currentMode) => {\r\n//         this.setState({show: true});\r\n//         this.setState({mode: currentMode});\r\n//     };\r\n  \r\n//     showDatepicker = () => {\r\n//       this.showMode('date');\r\n//     };\r\n  \r\n//     showTimepicker = () => {\r\n//       this.showMode('time');\r\n//     };\r\n//   render(){\r\n//     const {show, date, mode} = this.state;\r\n//     return (\r\n//        <View>\r\n//          <View>\r\n//             <Text></Text>\r\n//             <Text></Text>\r\n//         </View>\r\n//         <View style={styles.spaceSmall}></View>\r\n//       <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\r\n//         <Button color=\"#942a21\" style={styles.buttonInline} onPress={this.showDatepicker} title=\"SET DATA\" />\r\n//         <View style={styles.spaceHorizontal} />\r\n//         <Button color=\"#942a21\" style={styles.buttonInline} onPress={this.showTimepicker} title=\"SET TIME\" />\r\n        \r\n//         {show && (\r\n//           <DateTimePicker\r\n//             testID=\"dateTimePicker\"\r\n//             value={date}\r\n//             mode={mode}\r\n//             is24Hour={true}\r\n//             display=\"default\"\r\n//             onChange={this.onChange}\r\n//           />\r\n//         )}\r\n//       </View>\r\n    \r\n//         </View> \r\n//     );\r\n//     }\r\n//   };\r\n\r\n//   const styles = StyleSheet.create({\r\n//     buttonInline: {\r\n//         display: \"flex\"\r\n//       },\r\n//       spaceSmall: {\r\n//         width: 20,\r\n//         height: 10,\r\n//       },\r\n//       spaceHorizontal: {\r\n//         display: \"flex\",\r\n//         width: 20\r\n//       },\r\n//   });\r\n\r\n//   export default TimePicker;\r\n\r\nconst TimePicker = () => {\r\n  const [date, setDate] = useState(new Date());\r\n  const [mode, setMode] = useState('date');\r\n  const [show, setShow] = useState(false);\r\n \r\n  const onChange = (event, selectedDate) => {\r\n    const currentDate = selectedDate || date;\r\n    setShow(Platform.OS === 'ios');\r\n    setDate(currentDate);\r\n  };\r\n \r\n  const showMode = (currentMode) => {\r\n    setShow(true);\r\n    setMode(currentMode);\r\n  };\r\n \r\n  const showDatepicker = () => {\r\n    showMode('date');\r\n  };\r\n \r\n  const showTimepicker = () => {\r\n    showMode('time');\r\n  };\r\n \r\n  return (\r\n    <View>\r\n      <View>\r\n        <Button onPress={showDatepicker} title=\"Show date picker!\" />\r\n      </View>\r\n      <View>\r\n        <Button onPress={showTimepicker} title=\"Show time picker!\" />\r\n      </View>\r\n      {show && (\r\n        <DateTimePicker\r\n          testID=\"dateTimePicker\"\r\n          value={date}\r\n          mode={mode}\r\n          is24Hour={true}\r\n          display=\"default\"\r\n          onChange={onChange}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport  default TimePicker;"]},"metadata":{},"sourceType":"module"}