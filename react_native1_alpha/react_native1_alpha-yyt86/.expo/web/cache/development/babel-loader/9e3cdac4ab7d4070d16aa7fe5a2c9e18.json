{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport moment from \"moment\";\nimport { Modal, Portal, Title, Provider } from 'react-native-paper';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\n\nvar ExercisesView = function (_React$Component) {\n  _inherits(ExercisesView, _React$Component);\n\n  var _super = _createSuper(ExercisesView);\n\n  function ExercisesView(props) {\n    var _this;\n\n    _classCallCheck(this, ExercisesView);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(ExercisesView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null);\n    }\n  }]);\n\n  return ExercisesView;\n}(React.Component);\n\nvar styles = StyleSheet.create({});\nexport default ExercisesView;","map":{"version":3,"sources":["F:/course/639-UI/react_native2_alpha-yyt86-main/ExercisesView.js"],"names":["React","moment","Modal","Portal","Title","Provider","Icon","ExercisesView","props","state","Component","styles","StyleSheet","create"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,QAA/B,QAA+C,oBAA/C;;;;;;;AAEA,OAAOC,IAAP;;IAEMC,a;;;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAFe;AAMlB;;;;wCAEmB,CAEnB;;;6BAEQ;AACL,aAAO,yCAAP;AACH;;;;EAfuBT,KAAK,CAACU,S;;AAkBlC,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAoIA,eAAeN,aAAf","sourcesContent":["import React from 'react';\nimport moment from \"moment\";\nimport { Modal, Portal, Title, Provider } from 'react-native-paper';\nimport {StyleSheet, Text, View, Button, TextInput, ScrollView } from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome5';\n\nclass ExercisesView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n        }\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        return <></>\n    }\n}\n\nconst styles = StyleSheet.create({\n    \n});\n\n\n// class ExercisesView extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             name: \"\",\n//             duration: 0.0,\n//             date: \"\",\n//             calories: 0.0,\n//             activityArray: [],\n//           }\n\n//     }\n\n//     deleteExercise(id){\n//         fetch('https://mysqlcs639.cs.wisc.edu/activities/' + id, {\n//           method: 'DELETE',\n//           headers: {\n//             'Content-Type': 'application/json',\n//             'x-access-token': this.props.accessToken\n//           },\n//         })\n//           .then(res => res.json())\n//           .then(res => {\n//             alert(\"Exercise has been deleted!\");\n\n//           })\n//           .catch(err => {\n//             alert(\"Something went wrong! \");\n//           });\n//           this.getData();\n    \n//     }\n\n//     handleAddActivity(){\n        \n//         return(\n//             <activityModal visible={this.state.visible}  id={this.props.id} accessToken={this.props.accessToken} addmode={true} editmode={false}/>\n//         )\n//     }\n\n//     getData(){\n//         fetch('https://mysqlcs639.cs.wisc.edu/activities/', {\n//           method: 'GET',\n//           headers: { 'x-access-token': this.props.accessToken }\n//         })\n//           .then(res => res.json())\n//           .then(res => {\n//               this.setState({activityArray: res});\n//             //   for(const [key, value] of Object.entries(res)){\n//             //       this.setState({[key]: value})\n//             //   }\n//            this.getExercises();\n//           });\n//     }\n\n//     getExercises(){\n//         let cardList = [];\n//         for(const [key, value] of Object.entries(this.state.activityArray)){\n//             let currentDate = moment(value.date).format(\"MMMM D, YYYY\");\n//             cardList.push(<activityCard name={value.name} date={value.date}\n//                            duration={value.duration} calories={value.calories}\n//                            id={value.id} accessToken={this.props.accessToken}\n//                            delete={(id)=>this.deleteExercise(id)} />)\n\n//         }\n//         return cardList;\n//     }\n\n//     componentDidMount() {\n//         this.getData();\n//     }\n\n//     render() {\n//         return (\n//         <ScrollView style={styles.mainContainer} contentContainerStyle={{ flexGrow: 11, justifyContent: 'center', alignItems: \"center\" }}>\n//             <View style={styles.space} />\n//             <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n//             <Icon name=\"walking\" size={40} color=\"#900\" style={{ marginRight: 20 }} />\n//           <Text style={styles.bigText}>Exercises</Text>\n//             </View>\n//             <View style={styles.spaceSmall}></View>\n//         <Text>Let's get to work!</Text>\n//         <Text>Record your exercises below.</Text>\n//         <View style={styles.space} />\n//         <Button color=\"#942a21\" style={styles.buttonInline} title=\"ADD ACTIVITY\" onPress={() => this.handleAddActivity()} />\n//         <View style={styles.space} />\n//         <View>{this.getExercises()}</View>\n//         </ScrollView>)\n//     }\n// }\n\n// const styles = StyleSheet.create({\n//     scrollView: {\n//         height: Dimensions.get('window').height\n//       },\n//       mainContainer: {\n//         flex: 1\n//       },\n//       scrollViewContainer: {},\n//       container: {\n//         flex: 1,\n//         backgroundColor: '#fff',\n//       },\n//       bigText: {\n//         fontSize: 32,\n//         fontWeight: \"700\",\n//         marginBottom: 5\n//       },\n//       spaceSmall: {\n//         width: 20,\n//         height: 10,\n//       },\n//       space: {\n//         width: 20,\n//         height: 20,\n//       },\n//       buttonInline: {\n//         display: \"flex\"\n//       },\n//       fab: {\n//         position: 'absolute',\n//         margin: 16,\n//         right: 0,\n//         bottom: 0,\n//       },\n// });\n\nexport default ExercisesView;"]},"metadata":{},"sourceType":"module"}