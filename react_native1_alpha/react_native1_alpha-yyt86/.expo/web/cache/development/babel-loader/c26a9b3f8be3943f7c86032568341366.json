{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\course\\\\639-UI\\\\react_native2_alpha-yyt86-main\\\\ActivityModal.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport { Portal, Provider } from 'react-native-paper';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TimePicker from \"./TimePicker\";\n\nvar ActivityModal = function (_React$Component) {\n  _inherits(ActivityModal, _React$Component);\n\n  var _super = _createSuper(ActivityModal);\n\n  function ActivityModal(props) {\n    var _this;\n\n    _classCallCheck(this, ActivityModal);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      name: \"\",\n      duration: 0.0,\n      date: _this.props.date,\n      calories: 0.0,\n      id: '',\n      accessToken: '',\n      modalVisible: _this.props.visible\n    };\n    return _this;\n  }\n\n  _createClass(ActivityModal, [{\n    key: \"getStoredData\",\n    value: function getStoredData(key) {\n      var value;\n      return _regeneratorRuntime.async(function getStoredData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n            case 3:\n              value = _context.sent;\n              this.setState(_defineProperty({}, key, value));\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 7]], Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        name: this.props.name,\n        duration: this.props.duration,\n        date: this.props.date,\n        calories: this.props.calories,\n        id: this.props.id,\n        accessToken: this.props.accessToken\n      });\n    }\n  }, {\n    key: \"handleSaveExercise\",\n    value: function handleSaveExercise() {\n      var _this2 = this;\n\n      this.setState({\n        duration: parseFloat(this.state.duration),\n        calories: parseFloat(this.state.calories)\n      }, function () {\n        return fetch('https://mysqlcs639.cs.wisc.edu/activities/' + _this2.props.id, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'x-access-token': _this2.props.accessToken\n          },\n          body: JSON.stringify({\n            name: _this2.state.name,\n            duration: _this2.state.duration,\n            date: _this2.state.date,\n            calories: _this2.state.calories\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (res) {\n          alert(\"Your exercise has been updated!\");\n        }).catch(function (err) {\n          alert(\"Something went wrong! Verify you have filled out the fields correctly.\");\n        });\n      });\n      this.props.updateData();\n    }\n  }, {\n    key: \"getDateTime\",\n    value: function getDateTime(date) {\n      this.setState({\n        date: date\n      });\n    }\n  }, {\n    key: \"getButton\",\n    value: function getButton() {\n      var _this3 = this;\n\n      if (this.props.editmode) {\n        return React.createElement(Button, {\n          color: \"#942a21\",\n          style: styles.buttonInline,\n          title: \"SAVE EXERCISE\",\n          onPress: function onPress() {\n            return _this3.handleSaveExercise();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }\n        });\n      } else {\n        return React.createElement(Button, {\n          color: \"#942a21\",\n          style: styles.buttonInline,\n          title: \"SAVE EXERCISE\",\n          onPress: function onPress() {\n            return _this3.handleAddExercise();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      console.log(this.state.date, \"render date\");\n      return React.createElement(Provider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: styles.mainContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 7\n        }\n      }, React.createElement(Modal, {\n        visible: this.props.visible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.bigText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }\n      }, \"Exercise Details\"), React.createElement(View, {\n        style: styles.space,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlignVertical: \"center\",\n          fontWeight: \"700\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      }, \"Exercise Name\")), React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        placeholderTextColor: \"#d9bebd\",\n        onChangeText: function onChangeText(name) {\n          return _this4.setState({\n            name: name\n          });\n        },\n        defaultValue: this.state.name,\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.spaceSmall,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlignVertical: \"center\",\n          fontWeight: \"700\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }\n      }, \"Duration (minutes)\")), React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        placeholderTextColor: \"#d9bebd\",\n        onChangeText: function onChangeText(duration) {\n          return _this4.setState({\n            duration: duration\n          });\n        },\n        defaultValue: this.state.duration + \"\",\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.spaceSmall,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlignVertical: \"center\",\n          fontWeight: \"700\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }\n      }, \"Calories Burnt (cal)\")), React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        placeholderTextColor: \"#d9bebd\",\n        onChangeText: function onChangeText(calories) {\n          return _this4.setState({\n            calories: calories\n          });\n        },\n        defaultValue: this.state.calories + \"\",\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.space,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlignVertical: \"center\",\n          fontWeight: \"700\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }\n      }, \"Exercise Data and Time\")), React.createElement(View, {\n        style: styles.spaceSmall,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }\n      }), React.createElement(TimePicker, {\n        date: this.state.date,\n        getDateTime: function getDateTime(data) {\n          return _this4.getDateTime(data);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.space,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlignVertical: \"center\",\n          fontWeight: \"400\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }\n      }, \"Looks good! Ready to save your work?\")), React.createElement(View, {\n        style: styles.space,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        color: \"#942a21\",\n        style: styles.buttonInline,\n        title: \"SAVE EXERCISE\",\n        onPress: function onPress() {\n          return _this4.handleSaveExercise();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.spaceHorizontal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        color: \"#a1635f\",\n        style: styles.buttonInline,\n        title: \"NEVER MIND\",\n        onPress: function onPress() {\n          return _this4.props.hideModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }\n      })))));\n    }\n  }]);\n\n  return ActivityModal;\n}(React.Component);\n\n;\nvar styles = StyleSheet.create({\n  scrollView: {\n    height: Dimensions.get('window').height\n  },\n  mainContainer: {\n    backgroundColor: 'white',\n    padding: 5,\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22,\n    marginLeft: 22,\n    elevation: 100\n  },\n  scrollViewContainer: {},\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  bigText: {\n    fontSize: 20,\n    fontWeight: \"700\",\n    marginBottom: 5\n  },\n  spaceSmall: {\n    width: 20,\n    height: 10\n  },\n  space: {\n    width: 20,\n    height: 20\n  },\n  spaceHorizontal: {\n    display: \"flex\",\n    width: 20\n  },\n  buttonInline: {\n    display: \"flex\"\n  },\n  input: {\n    width: 200,\n    padding: 10,\n    margin: 5,\n    height: 40,\n    borderColor: '#c9392c',\n    borderWidth: 1\n  },\n  inputInline: {\n    flexDirection: \"row\",\n    display: \"flex\",\n    width: 200,\n    padding: 10,\n    margin: 5,\n    height: 40,\n    borderColor: '#c9392c',\n    borderWidth: 1\n  }\n});\nexport default ActivityModal;","map":{"version":3,"sources":["F:/course/639-UI/react_native2_alpha-yyt86-main/ActivityModal.js"],"names":["React","Portal","Provider","TimePicker","ActivityModal","props","state","name","duration","date","calories","id","accessToken","modalVisible","visible","key","AsyncStorage","getItem","value","setState","console","log","parseFloat","fetch","method","headers","body","JSON","stringify","then","res","json","alert","catch","err","updateData","editmode","styles","buttonInline","handleSaveExercise","handleAddExercise","mainContainer","bigText","space","textAlignVertical","fontWeight","input","spaceSmall","data","getDateTime","flexDirection","flexWrap","spaceHorizontal","hideModal","Component","StyleSheet","create","scrollView","height","Dimensions","get","backgroundColor","padding","flex","justifyContent","alignItems","marginTop","marginLeft","elevation","scrollViewContainer","container","fontSize","marginBottom","width","display","margin","borderColor","borderWidth","inputInline"],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAUC,MAAV,EAAkBC,QAAlB,QAAkC,oBAAlC;;;;;;;;AAGA,OAAOC,UAAP;;IAGMC,a;;;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,QAAQ,EAAE,GAFC;AAGXC,MAAAA,IAAI,EAAG,MAAKJ,KAAL,CAAWI,IAHP;AAIXC,MAAAA,QAAQ,EAAE,GAJC;AAKXC,MAAAA,EAAE,EAAE,EALO;AAMXC,MAAAA,WAAW,EAAE,EANF;AAOXC,MAAAA,YAAY,EAAE,MAAKR,KAAL,CAAWS;AAPd,KAAb;AAFe;AAWhB;;;;kCAEmBC,G;;;;;;;;+CAEIC,YAAY,CAACC,OAAb,CAAqBF,GAArB,C;;;AAAdG,cAAAA,K;AACJ,mBAAKC,QAAL,qBAAgBJ,GAAhB,EAAsBG,KAAtB;;;;;;;AAEAE,cAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;wCAIc;AAsBd,WAAKF,QAAL,CAAc;AACZZ,QAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,IADL;AAEZC,QAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,QAFT;AAGZC,QAAAA,IAAI,EAAG,KAAKJ,KAAL,CAAWI,IAHN;AAIZC,QAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWK,QAJT;AAKZC,QAAAA,EAAE,EAAE,KAAKN,KAAL,CAAWM,EALH;AAMZC,QAAAA,WAAW,EAAE,KAAKP,KAAL,CAAWO;AANZ,OAAd;AASH;;;yCAGkB;AAAA;;AACnB,WAAKO,QAAL,CAAc;AACZX,QAAAA,QAAQ,EAAEc,UAAU,CAAC,KAAKhB,KAAL,CAAWE,QAAZ,CADR;AAEZE,QAAAA,QAAQ,EAAEY,UAAU,CAAC,KAAKhB,KAAL,CAAWI,QAAZ;AAFR,OAAd,EAIG;AAAA,eAAMa,KAAK,CAAC,+CAA+C,MAAI,CAAClB,KAAL,CAAWM,EAA3D,EAA+D;AAC3Ea,UAAAA,MAAM,EAAE,KADmE;AAE3EC,UAAAA,OAAO,EAAE;AACP,4BAAgB,kBADT;AAEP,8BAAkB,MAAI,CAACpB,KAAL,CAAWO;AAFtB,WAFkE;AAM3Ec,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBrB,YAAAA,IAAI,EAAE,MAAI,CAACD,KAAL,CAAWC,IADE;AAEjBC,YAAAA,QAAQ,EAAE,MAAI,CAACF,KAAL,CAAWE,QAFJ;AAGjBC,YAAAA,IAAI,EAAE,MAAI,CAACH,KAAL,CAAWG,IAHA;AAIjBC,YAAAA,QAAQ,EAAE,MAAI,CAACJ,KAAL,CAAWI;AAJJ,WAAf;AANqE,SAA/D,CAAL,CAaNmB,IAbM,CAaD,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,SAbF,EAcNF,IAdM,CAcD,UAAAC,GAAG,EAAI;AAEXE,UAAAA,KAAK,CAAC,iCAAD,CAAL;AAED,SAlBM,EAmBNC,KAnBM,CAmBA,UAAAC,GAAG,EAAI;AACZF,UAAAA,KAAK,CAAC,wEAAD,CAAL;AACD,SArBM,CAAN;AAAA,OAJH;AA4BE,WAAK3B,KAAL,CAAW8B,UAAX;AAEH;;;gCAMW1B,I,EAAK;AACf,WAAKU,QAAL,CAAc;AACZV,QAAAA,IAAI,EAAEA;AADM,OAAd;AAGD;;;gCAKU;AAAA;;AACT,UAAG,KAAKJ,KAAL,CAAW+B,QAAd,EAAuB;AACrB,eACA,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,KAAK,EAAEC,MAAM,CAACC,YAAtC;AAAoD,UAAA,KAAK,EAAC,eAA1D;AAA2E,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACC,kBAAL,EAAN;AAAA,WAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAGD,OAJD,MAKI;AACF,eACE,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,KAAK,EAAEF,MAAM,CAACC,YAAtC;AAAoD,UAAA,KAAK,EAAC,eAA1D;AAA2E,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACE,iBAAL,EAAN;AAAA,WAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;AAEF;;;6BAaO;AAAA;;AAENpB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWG,IAAvB,EAA6B,aAA7B;AAEA,aACJ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE4B,MAAM,CAACI,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAQ,QAAA,OAAO,EAAG,KAAKpC,KAAL,CAAWS,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEuB,MAAM,CAACK,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,EAGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACM,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,iBAAiB,EAAE,QAArB;AAA+BC,UAAAA,UAAU,EAAE;AAA3C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,CAJA,EAOA,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAER,MAAM,CAACS,KAAzB;AACE,QAAA,qBAAqB,EAAC,aADxB;AAGE,QAAA,oBAAoB,EAAC,SAHvB;AAIE,QAAA,YAAY,EAAE,sBAACvC,IAAD;AAAA,iBAAU,MAAI,CAACY,QAAL,CAAc;AAAEZ,YAAAA,IAAI,EAAEA;AAAR,WAAd,CAAV;AAAA,SAJhB;AAKE,QAAA,YAAY,EAAE,KAAKD,KAAL,CAAWC,IAL3B;AAME,QAAA,cAAc,EAAC,MANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPA,EAcA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE8B,MAAM,CAACU,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdA,EAgBA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEH,UAAAA,iBAAiB,EAAE,QAArB;AAA+BC,UAAAA,UAAU,EAAE;AAA3C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CAhBA,EAmBA,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAER,MAAM,CAACS,KAAzB;AACE,QAAA,qBAAqB,EAAC,aADxB;AAGE,QAAA,oBAAoB,EAAC,SAHvB;AAIE,QAAA,YAAY,EAAE,sBAACtC,QAAD;AAAA,iBAAc,MAAI,CAACW,QAAL,CAAc;AAAEX,YAAAA,QAAQ,EAAEA;AAAZ,WAAd,CAAd;AAAA,SAJhB;AAKE,QAAA,YAAY,EAAE,KAAKF,KAAL,CAAWE,QAAX,GAAsB,EALtC;AAME,QAAA,cAAc,EAAC,MANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBA,EA0BA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE6B,MAAM,CAACU,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1BA,EA2BA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEH,UAAAA,iBAAiB,EAAE,QAArB;AAA+BC,UAAAA,UAAU,EAAE;AAA3C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CA3BA,EA8BA,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAER,MAAM,CAACS,KAAzB;AACE,QAAA,qBAAqB,EAAC,aADxB;AAGE,QAAA,oBAAoB,EAAC,SAHvB;AAIE,QAAA,YAAY,EAAE,sBAACpC,QAAD;AAAA,iBAAc,MAAI,CAACS,QAAL,CAAc;AAAET,YAAAA,QAAQ,EAAEA;AAAZ,WAAd,CAAd;AAAA,SAJhB;AAKE,QAAA,YAAY,EAAE,KAAKJ,KAAL,CAAWI,QAAX,GAAsB,EALtC;AAME,QAAA,cAAc,EAAC,MANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9BA,EAsCA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE2B,MAAM,CAACM,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtCA,EAuCA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,iBAAiB,EAAE,QAArB;AAA+BC,UAAAA,UAAU,EAAE;AAA3C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,CAvCA,EA0CA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACU,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1CA,EA2CA,oBAAC,UAAD;AAAa,QAAA,IAAI,EAAE,KAAKzC,KAAL,CAAWG,IAA9B;AAAqC,QAAA,WAAW,EAAE,qBAACuC,IAAD;AAAA,iBAAS,MAAI,CAACC,WAAL,CAAiBD,IAAjB,CAAT;AAAA,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3CA,EA6CA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEX,MAAM,CAACM,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7CA,EA8CA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,iBAAiB,EAAE,QAArB;AAA+BC,UAAAA,UAAU,EAAE;AAA3C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADA,CA9CA,EAkDA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACM,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlDA,EAmDA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEO,UAAAA,aAAa,EAAE,KAAjB;AAAwBC,UAAAA,QAAQ,EAAE;AAAlC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,KAAK,EAAEd,MAAM,CAACC,YAAtC;AAAoD,QAAA,KAAK,EAAC,eAA1D;AAA2E,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,kBAAL,EAAN;AAAA,SAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACe,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,EAGE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,KAAK,EAAEf,MAAM,CAACC,YAAtC;AAAoD,QAAA,KAAK,EAAC,YAA1D;AAAuE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACjC,KAAL,CAAWgD,SAAX,EAAN;AAAA,SAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CAnDA,CADF,CADF,CADI;AA6DW;;;;EAjMSrD,KAAK,CAACsD,S;;AAqMjC;AAED,IAAMjB,MAAM,GAAGkB,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,MAAM,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF;AADvB,GADiB;AAI7BjB,EAAAA,aAAa,EAAE;AACboB,IAAAA,eAAe,EAAE,OADJ;AAEbC,IAAAA,OAAO,EAAE,CAFI;AAIbC,IAAAA,IAAI,EAAE,CAJO;AAKbC,IAAAA,cAAc,EAAE,QALH;AAMbC,IAAAA,UAAU,EAAE,QANC;AAObC,IAAAA,SAAS,EAAE,EAPE;AAQbC,IAAAA,UAAU,EAAE,EARC;AASbC,IAAAA,SAAS,EAAC;AATG,GAJc;AAiB7BC,EAAAA,mBAAmB,EAAE,EAjBQ;AAkB7BC,EAAAA,SAAS,EAAE;AACTP,IAAAA,IAAI,EAAE,CADG;AAETF,IAAAA,eAAe,EAAE;AAFR,GAlBkB;AAsB7BnB,EAAAA,OAAO,EAAE;AACP6B,IAAAA,QAAQ,EAAE,EADH;AAEP1B,IAAAA,UAAU,EAAE,KAFL;AAGP2B,IAAAA,YAAY,EAAE;AAHP,GAtBoB;AA2B7BzB,EAAAA,UAAU,EAAE;AACV0B,IAAAA,KAAK,EAAE,EADG;AAEVf,IAAAA,MAAM,EAAE;AAFE,GA3BiB;AA+B7Bf,EAAAA,KAAK,EAAE;AACL8B,IAAAA,KAAK,EAAE,EADF;AAELf,IAAAA,MAAM,EAAE;AAFH,GA/BsB;AAmC7BN,EAAAA,eAAe,EAAE;AACfsB,IAAAA,OAAO,EAAE,MADM;AAEfD,IAAAA,KAAK,EAAE;AAFQ,GAnCY;AAuC7BnC,EAAAA,YAAY,EAAE;AACZoC,IAAAA,OAAO,EAAE;AADG,GAvCe;AA0C7B5B,EAAAA,KAAK,EAAE;AACL2B,IAAAA,KAAK,EAAE,GADF;AAELX,IAAAA,OAAO,EAAE,EAFJ;AAGLa,IAAAA,MAAM,EAAE,CAHH;AAILjB,IAAAA,MAAM,EAAE,EAJH;AAKLkB,IAAAA,WAAW,EAAE,SALR;AAMLC,IAAAA,WAAW,EAAE;AANR,GA1CsB;AAkD7BC,EAAAA,WAAW,EAAE;AACX5B,IAAAA,aAAa,EAAE,KADJ;AAEXwB,IAAAA,OAAO,EAAE,MAFE;AAGXD,IAAAA,KAAK,EAAE,GAHI;AAIXX,IAAAA,OAAO,EAAE,EAJE;AAKXa,IAAAA,MAAM,EAAE,CALG;AAMXjB,IAAAA,MAAM,EAAE,EANG;AAOXkB,IAAAA,WAAW,EAAE,SAPF;AAQXC,IAAAA,WAAW,EAAE;AARF;AAlDgB,CAAlB,CAAf;AA8DE,eAAezE,aAAf","sourcesContent":["import * as React from 'react';\r\nimport {  Portal, Provider } from 'react-native-paper';\r\n// import timePicker from \"./timePicker\";\r\nimport { StyleSheet, Text, View, Button, TextInput, Dimensions , Modal,} from 'react-native';\r\nimport TimePicker from './TimePicker';\r\n// import { Overlay } from 'react-native-elements';\r\n\r\nclass ActivityModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          name: \"\",\r\n          duration: 0.0,\r\n          date:  this.props.date,\r\n          calories: 0.0,\r\n          id: '',\r\n          accessToken: '',\r\n          modalVisible: this.props.visible,\r\n        }\r\n      }\r\n\r\n      async getStoredData(key){\r\n        try{\r\n            let value = await AsyncStorage.getItem(key);\r\n            this.setState({[key]: value});\r\n         } catch (error) {\r\n            console.log(error);\r\n         }\r\n    }\r\n\r\n      componentDidMount() {\r\n          // console.log(this.props.accessToken)\r\n          // console.log(this.props.id, \"id\")\r\n        //  fetch('https://mysqlcs639.cs.wisc.edu/activities/' + this.props.id, {\r\n        //     method: 'GET',\r\n        //     headers: { 'x-access-token': this.props.accessToken }\r\n        //   })\r\n        //     .then(res => res.json())\r\n        //     .then(res => {\r\n        //       console.log(res.date, \"res.date\") \r\n        //       this.setState({\r\n        //         name: res.name,\r\n        //         duration: res.duration,\r\n        //         date: res.date,\r\n        //         calories: res.calories,\r\n        //         modalVisible: false,\r\n        //         setdate: '',\r\n        //         settime: '',\r\n        //       }),\r\n        //       console.log(this.state.date, \"fetch date\") \r\n        //     })\r\n        //     console.log(this.state.date, \"editmode date\");\r\n            this.setState({\r\n              name: this.props.name,\r\n              duration: this.props.duration,\r\n              date:  this.props.date,\r\n              calories: this.props.calories,\r\n              id: this.props.id,\r\n              accessToken: this.props.accessToken,\r\n            })\r\n\r\n        }\r\n      \r\n\r\n      handleSaveExercise() {\r\n        this.setState({\r\n          duration: parseFloat(this.state.duration),\r\n          calories: parseFloat(this.state.calories),\r\n          \r\n        }, () => fetch('https://mysqlcs639.cs.wisc.edu/activities/' + this.props.id, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'x-access-token': this.props.accessToken\r\n          },\r\n          body: JSON.stringify({\r\n            name: this.state.name,\r\n              duration: this.state.duration,\r\n              date: this.state.date,\r\n              calories: this.state.calories,\r\n          })\r\n        })\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            \r\n            alert(\"Your exercise has been updated!\");\r\n\r\n          })\r\n          .catch(err => {\r\n            alert(\"Something went wrong! Verify you have filled out the fields correctly.\");\r\n          }));\r\n\r\n          // this.setState({ modalVisible: false });\r\n          this.props.updateData()\r\n    \r\n      }\r\n\r\n      // setModalVisible = (visible) => {\r\n      //   this.setState({ modalVisible: visible });\r\n      // }\r\n\r\n      getDateTime(date){\r\n        this.setState({\r\n          date: date,\r\n        })\r\n      }\r\n      // clsoe(){\r\n      //   this.props.hideModal()\r\n      // }\r\n\r\n      getButton(){\r\n        if(this.props.editmode){\r\n          return(\r\n          <Button color=\"#942a21\" style={styles.buttonInline} title=\"SAVE EXERCISE\"  onPress={() => this.handleSaveExercise()} />\r\n          )\r\n        }\r\n        else{\r\n          return(\r\n            <Button color=\"#942a21\" style={styles.buttonInline} title=\"SAVE EXERCISE\"  onPress={() => this.handleAddExercise()} />\r\n          )\r\n        }\r\n        \r\n      }\r\n\r\n      // getTimepicker(){\r\n      //   if(this.props.editmode){\r\n      //     return(<TimePicker date={this.state.date}  /> )\r\n      //   }\r\n      //   else{\r\n      //     return(<TimePicker date={new Date()}  /> )\r\n      //   }\r\n        \r\n      // }\r\n    \r\n//onDismiss={this.props.hideModal} contentContainerStyle={styles.mainContainer}\r\n      render(){\r\n        // console.log(this.props.visible, \"visible\");\r\n        console.log(this.state.date, \"render date\");\r\n        // if(this.props.visible){\r\n        return (\r\n    <Provider>\r\n      <View style={styles.mainContainer}>\r\n        <Modal  visible= {this.props.visible}  >\r\n        {/* <View style={styles.space} /> */}\r\n          <Text style={styles.bigText}>Exercise Details</Text>\r\n          <View style={styles.space} />\r\n        <View>\r\n        <Text style={{ textAlignVertical: \"center\", fontWeight: \"700\" }}>Exercise Name</Text>\r\n        </View>\r\n        <TextInput style={styles.input}\r\n          underlineColorAndroid=\"transparent\"\r\n        //   placeholder=\"Badger\"\r\n          placeholderTextColor=\"#d9bebd\"\r\n          onChangeText={(name) => this.setState({ name: name })}\r\n          defaultValue={this.state.name}\r\n          autoCapitalize=\"none\" />\r\n        <View style={styles.spaceSmall}></View>\r\n\r\n        <View>\r\n          <Text style={{ textAlignVertical: \"center\", fontWeight: \"700\" }}>Duration (minutes)</Text>\r\n        </View>\r\n        <TextInput style={styles.input}\r\n          underlineColorAndroid=\"transparent\"\r\n        //   placeholder=\"2200\"\r\n          placeholderTextColor=\"#d9bebd\"\r\n          onChangeText={(duration) => this.setState({ duration: duration })}\r\n          defaultValue={this.state.duration + \"\"}\r\n          autoCapitalize=\"none\" />\r\n        <View style={styles.spaceSmall}></View>\r\n        <View>\r\n          <Text style={{ textAlignVertical: \"center\", fontWeight: \"700\" }}>Calories Burnt (cal)</Text>\r\n        </View>\r\n        <TextInput style={styles.input}\r\n          underlineColorAndroid=\"transparent\"\r\n        //   placeholder=\"52\"\r\n          placeholderTextColor=\"#d9bebd\"\r\n          onChangeText={(calories) => this.setState({ calories: calories })}\r\n          defaultValue={this.state.calories + \"\"}\r\n          autoCapitalize=\"none\" />\r\n     \r\n        <View style={styles.space} />\r\n        <View>\r\n          <Text style={{ textAlignVertical: \"center\", fontWeight: \"700\" }}>Exercise Data and Time</Text>    \r\n        </View>\r\n        <View style={styles.spaceSmall}></View>\r\n        <TimePicker  date={this.state.date}  getDateTime={(data) =>this.getDateTime(data)}/>\r\n        {/* getDateTime={(date) => this.getDateTime(date)} */}\r\n        <View style={styles.space} />\r\n        <View>\r\n        <Text style={{ textAlignVertical: \"center\", fontWeight: \"400\" }}>Looks good! Ready to save your work?</Text>\r\n        </View>\r\n          \r\n        <View style={styles.space} />  \r\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\r\n        <Button color=\"#942a21\" style={styles.buttonInline} title=\"SAVE EXERCISE\"  onPress={() => this.handleSaveExercise()} />\r\n        <View style={styles.spaceHorizontal} />\r\n          <Button color=\"#a1635f\" style={styles.buttonInline} title=\"NEVER MIND\" onPress={() => this.props.hideModal()} />\r\n        </View>\r\n        </Modal>\r\n      </View>\r\n    </Provider> );}\r\n  // );}\r\n  // return (<View></View>)\r\n  // }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    scrollView: {\r\n      height: Dimensions.get('window').height\r\n    },\r\n    mainContainer: {\r\n      backgroundColor: 'white', \r\n      padding: 5,\r\n      // height: Dimensions.get('window').height -20,\r\n      flex: 1,\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      marginTop: 22,\r\n      marginLeft: 22,\r\n      elevation:100,\r\n      // width: Dimensions.get('window').width*0.9,\r\n      // height: Dimensions.get('window').height*0.8,\r\n    },\r\n    scrollViewContainer: {},\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n    },\r\n    bigText: {\r\n      fontSize: 20,\r\n      fontWeight: \"700\",\r\n      marginBottom: 5\r\n    },\r\n    spaceSmall: {\r\n      width: 20,\r\n      height: 10,\r\n    },\r\n    space: {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    spaceHorizontal: {\r\n      display: \"flex\",\r\n      width: 20\r\n    },\r\n    buttonInline: {\r\n      display: \"flex\"\r\n    },\r\n    input: {\r\n      width: 200,\r\n      padding: 10,\r\n      margin: 5,\r\n      height: 40,\r\n      borderColor: '#c9392c',\r\n      borderWidth: 1\r\n    },\r\n    inputInline: {\r\n      flexDirection: \"row\",\r\n      display: \"flex\",\r\n      width: 200,\r\n      padding: 10,\r\n      margin: 5,\r\n      height: 40,\r\n      borderColor: '#c9392c',\r\n      borderWidth: 1\r\n    }\r\n  });\r\n  \r\n  export default ActivityModal;"]},"metadata":{},"sourceType":"module"}