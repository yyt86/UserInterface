{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\course\\\\639-UI\\\\react_native2_alpha-yyt86-main\\\\MealCard.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Avatar, Button, Card, Title, Paragraph } from 'react-native-paper';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\n\nvar MealCard = function (_React$Component) {\n  _inherits(MealCard, _React$Component);\n\n  var _super = _createSuper(MealCard);\n\n  function MealCard(props) {\n    var _this;\n\n    _classCallCheck(this, MealCard);\n\n    _this = _super.call(this, props);\n\n    _this.delete = function () {\n      _this.props.deleteExercise(_this.props.id);\n    };\n\n    _this.showModal = function () {\n      return _this.setState({\n        visible: true\n      });\n    };\n\n    _this.hideModal = function () {\n      return _this.setState({\n        visible: false\n      });\n    };\n\n    _this.randomColor = function () {\n      var color = ['red', '#66CCFF', '#FFCC00', '#1C9379', '#8A7BA7'];\n      var col = color[Math.floor(Math.random() * color.length)];\n      return col;\n    };\n\n    _this.state = {\n      visible: false\n    };\n    return _this;\n  }\n\n  _createClass(MealCard, [{\n    key: \"foodChips\",\n    value: function foodChips(food) {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, food.map(function (item, index) {\n        return React.createElement(View, {\n          style: {\n            margin: 5,\n            flexWrap: 'wrap'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }\n        }, React.createElement(Chip, {\n          key: index,\n          mode: \"outlined\",\n          height: 30,\n          textStyle: {\n            color: 'white',\n            fontSize: 15\n          },\n          style: {\n            backgroundColor: _this2.randomColor()\n          },\n          onPress: function onPress() {\n            return Alert.alert('Clicked Chip' + item.name);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }\n        }, item.name));\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.id, \"card id\");\n      return React.createElement(Card, {\n        style: styles.card,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, React.createElement(Card.Title, {\n        stytle: {\n          fontWeight: \"700\",\n          fontSize: 20\n        },\n        title: this.props.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }), React.createElement(Card.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 18\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'column'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.left,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }\n      }, React.createElement(Paragraph, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }\n      }, this.props.date, \" \"), React.createElement(Paragraph, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }\n      }, \"Meal calories : \", this.props.mealFoodCal), React.createElement(Paragraph, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }\n      }, \"Meal proteins : \", this.props.mealProteins), React.createElement(Paragraph, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }\n      }, \"Meal fats : \", this.props.mealFats), React.createElement(Paragraph, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }\n      }, \"Meal carbohydrates : \", this.props.mealCarbo)), React.createElement(View, {\n        style: styles.spaceSmall,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }), this.foodChips(this.props.foods))), React.createElement(Card.Actions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 14\n        }\n      }, React.createElement(Button, {\n        onPress: this.showModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 18\n        }\n      }, \"Edit\"), React.createElement(Button, {\n        onPress: this.delete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 18\n        }\n      }, \"Delete\"), React.createElement(ActivityModal, {\n        visible: this.state.visible,\n        id: this.props.id,\n        accessToken: this.props.accessToken,\n        addmode: true,\n        editmode: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      })));\n    }\n  }]);\n\n  return MealCard;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  card: {\n    margin: 4,\n    backgroundColor: \"#FAFAD2\",\n    borderRadius: 5\n  },\n  left: {\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  cal: {\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    fontWeight: \"600\",\n    fontSize: 16\n  },\n  mainContainer: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["F:/course/639-UI/react_native2_alpha-yyt86-main/MealCard.js"],"names":["React","Avatar","Button","Card","Title","Paragraph","MealCard","props","delete","deleteExercise","id","showModal","setState","visible","hideModal","randomColor","color","col","Math","floor","random","length","state","food","flex","map","item","index","margin","flexWrap","fontSize","backgroundColor","Alert","alert","name","console","log","styles","card","fontWeight","flexDirection","left","date","mealFoodCal","mealProteins","mealFats","mealCarbo","spaceSmall","foodChips","foods","accessToken","Component","StyleSheet","create","borderRadius","alignItems","justifyContent","cal","mainContainer"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Avatar, Button, Card, Title, Paragraph } from 'react-native-paper';\r\nimport {StyleSheet, View, Dimensions, Modal} from \"react-native\";\r\n\r\nclass MealCard extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            visible: false,\r\n        }\r\n        \r\n    }\r\n    delete = () =>{\r\n        this.props.deleteExercise(this.props.id);\r\n    }\r\n\r\n    showModal = () => this.setState({visible: true});\r\n    hideModal = () => this.setState({visible: false});\r\n\r\n    \r\n    randomColor = () => {\r\n        let color = ['red', '#66CCFF', '#FFCC00', '#1C9379', '#8A7BA7'];\r\n        let col = color[Math.floor(Math.random() * color.length)];\r\n        return col;\r\n    };\r\n\r\n    foodChips(food){\r\n        return(\r\n            <View style = {{flex:1}}>{\r\n                food.map((item, index) => {\r\n                    return (\r\n                        <View style={{margin: 5,flexWrap: 'wrap',}}>\r\n                        <Chip key={index} mode=\"outlined\" height={30} \r\n                        textStyle={{ color:'white',fontSize: 15 }} \r\n                        style={{ backgroundColor: this.randomColor() }} \r\n                        onPress={() => Alert.alert('Clicked Chip'+ item.name)}>\r\n                        {item.name}\r\n                        </Chip>\r\n                    </View>\r\n                    );\r\n                 })}\r\n            </View>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        console.log(this.props.id, \"card id\")\r\n        return(\r\n            <Card style={styles.card}>\r\n            <Card.Title stytle={{fontWeight: \"700\", fontSize: 20}} title={this.props.name} />\r\n                 <Card.Content>\r\n                    <View style={{flexDirection: 'column'}}>\r\n                        <View style={styles.left}>\r\n                            <Paragraph >{this.props.date} </Paragraph>\r\n                            <Paragraph>Meal calories : {this.props. mealFoodCal}</Paragraph>\r\n                            <Paragraph>Meal proteins : {this.props. mealProteins}</Paragraph>\r\n                            <Paragraph>Meal fats : {this.props. mealFats}</Paragraph>\r\n                            <Paragraph>Meal carbohydrates : {this.props. mealCarbo}</Paragraph>\r\n                        </View>\r\n                        <View style={styles.spaceSmall}></View>\r\n                        {this.foodChips(this.props.foods)}\r\n                    </View>\r\n                     \r\n                 </Card.Content>\r\n             <Card.Actions>\r\n             \r\n      \r\n                 <Button onPress={this.showModal}>Edit</Button>\r\n                 <Button onPress={this.delete}>Delete</Button>\r\n                 {/* <Portal> */}\r\n                {/* <Modal visible={this.state.visible}> */}\r\n                <ActivityModal visible={this.state.visible}  id={this.props.id} accessToken={this.props.accessToken} addmode={true} editmode={false}/>\r\n                {/* <Button color=\"#a1635f\" style={styles.buttonInline} title=\"NEVERMIND\" onPress={ this.hideModal} />\r\n                 </Modal> */}\r\n            {/* </Portal> */}\r\n             </Card.Actions>\r\n             </Card>\r\n\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    card:{\r\n        margin: 4,\r\n        backgroundColor: \"#FAFAD2\",\r\n        borderRadius: 5,\r\n    },\r\n    left:{\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start'\r\n    },\r\n\r\n    cal:{\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        fontWeight: \"600\",\r\n         fontSize: 16 ,\r\n    },\r\n    mainContainer: {\r\n        flex: 1\r\n      },\r\n    \r\n});"]},"metadata":{},"sourceType":"module"}