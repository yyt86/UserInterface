{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\course\\\\639-UI\\\\react_native2_alpha-yyt86-main\\\\MealCard.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Avatar, Button, Card, Title, Paragraph, Chip } from 'react-native-paper';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport MealModal from \"./MealModal\";\nimport moment from \"moment\";\n\nvar MealCard = function (_React$Component) {\n  _inherits(MealCard, _React$Component);\n\n  var _super = _createSuper(MealCard);\n\n  function MealCard(props) {\n    var _this;\n\n    _classCallCheck(this, MealCard);\n\n    _this = _super.call(this, props);\n\n    _this.delete = function () {\n      _this.props.deleteMeal(_this.props.id);\n    };\n\n    _this.select = function () {\n      var _this$props = _this.props,\n          food = _this$props.food,\n          id = _this$props.id,\n          accessToken = _this$props.accessToken;\n\n      if (food !== null && typeof food !== 'undefined') {\n        fetch('https://mysqlcs639.cs.wisc.edu/meals/' + id + '/foods/', {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json',\n            'x-access-token': accessToken\n          }\n        }).then(function (res) {\n          return res.json();\n        }).then(function (res) {\n          var _this$props$route$par;\n\n          if ((_this$props$route$par = _this.props.route.params) == null ? void 0 : _this$props$route$par.foodList) {\n            for (var i = 0; i < _this.props.route.params.foodList.length; i++) {\n              var value = _this.props.route.params.foodList[i];\n\n              if (value.select) {\n                fetch('https://mysqlcs639.cs.wisc.edu/meals/' + id + '/foods/', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'x-access-token': accessToken\n                  },\n                  body: JSON.stringify({\n                    name: value.name,\n                    calories: value.calories,\n                    protein: value.protein,\n                    carbohydrates: value.carbohydrates,\n                    fat: value.fat\n                  })\n                }).then(function (res) {\n                  return res.json();\n                }).then(function (res) {\n                  _this.props.updateData();\n\n                  alert(\"Your foods have been reselected.\");\n                });\n              }\n            }\n          }\n        }).catch(function (err) {\n          alert(\"Something went wrong! \");\n        });\n      }\n    };\n\n    _this.showModal = function () {\n      return _this.setState({\n        visible: true\n      });\n    };\n\n    _this.hideModal = function () {\n      return _this.setState({\n        visible: false\n      });\n    };\n\n    _this.randomColor = function () {\n      var color = ['red', '#66CCFF', '#FFCC00', '#1C9379', '#8A7BA7'];\n      var col = color[Math.floor(Math.random() * color.length)];\n      return col;\n    };\n\n    _this.state = {\n      visible: false\n    };\n    return _this;\n  }\n\n  _createClass(MealCard, [{\n    key: \"getModal\",\n    value: function getModal() {\n      if (this.state.visible) {\n        return React.createElement(MealModal, {\n          visible: this.state.visible,\n          updateData: this.props.updateData,\n          hideModal: this.hideModal,\n          id: this.props.id,\n          date: this.props.date,\n          accessToken: this.props.accessToken,\n          name: this.props.name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }\n        });\n      }\n    }\n  }, {\n    key: \"foodChips\",\n    value: function foodChips(food) {\n      var _this2 = this;\n\n      if (food !== null && typeof food !== 'undefined') {\n        return React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }\n        }, food.map(function (item, index) {\n          return React.createElement(View, {\n            key: index,\n            style: {\n              margin: 5,\n              flexWrap: 'wrap'\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }\n          }, React.createElement(Chip, {\n            key: index,\n            mode: \"outlined\",\n            height: 30,\n            textStyle: {\n              color: 'white',\n              fontSize: 15\n            },\n            style: {\n              backgroundColor: '#1C9379'\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }\n          }, item.name));\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var currentDate = moment(this.props.date).format('MMMM Do YYYY, h:mm:ss a');\n      return React.createElement(Card, {\n        style: styles.card,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, React.createElement(Card.Title, {\n        stytle: {\n          fontWeight: \"700\",\n          fontSize: 18\n        },\n        title: this.props.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }), React.createElement(Card.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 18\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'column'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.left,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }\n      }, this.props.mealmode ? React.createElement(Paragraph, {\n        style: styles.para,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 52\n        }\n      }, currentDate, \" \") : React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 112\n        }\n      }), React.createElement(Paragraph, {\n        style: styles.para,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }\n      }, \"Meal calories: \", this.props.mealFoodCal, \" (kcal)\"), React.createElement(Paragraph, {\n        style: styles.para,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }\n      }, \"Meal proteins: \", this.props.mealProteins, \" (grams)\"), React.createElement(Paragraph, {\n        style: styles.para,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }\n      }, \"Meal fats: \", this.props.mealFats, \" (grams)\"), React.createElement(Paragraph, {\n        style: styles.para,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }\n      }, \"Meal carbohydrates: \", this.props.mealCarbo, \" (grams)\")), React.createElement(View, {\n        style: styles.spaceSmall,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }\n      }), this.foodChips(this.props.foods))), this.props.mealmode ? React.createElement(Card.Actions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 14\n        }\n      }, React.createElement(Button, {\n        onPress: this.showModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 18\n        }\n      }, \"Edit\"), React.createElement(Button, {\n        onPress: this.delete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 18\n        }\n      }, \"Delete\"), React.createElement(Button, {\n        onPress: function onPress() {\n          _this3.props.navigation.navigate('Food', {\n            foods: _this3.props.foods,\n            id: _this3.props.id\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 18\n        }\n      }, \"Select_food\"), this.getModal()) : React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }\n      }));\n    }\n  }]);\n\n  return MealCard;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  card: {\n    margin: 4,\n    backgroundColor: \"#fff\",\n    borderRadius: 5,\n    width: Dimensions.get('window').width * 0.9\n  },\n  left: {\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  cal: {\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    fontWeight: \"600\",\n    fontSize: 16\n  },\n  mainContainer: {\n    flex: 1\n  },\n  para: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontWeight: \"400\",\n    fontSize: 14\n  }\n});\nexport default MealCard;","map":{"version":3,"sources":["F:/course/639-UI/react_native2_alpha-yyt86-main/MealCard.js"],"names":["React","Avatar","Button","Card","Title","Paragraph","Chip","MealModal","moment","MealCard","props","delete","deleteMeal","id","select","food","accessToken","fetch","method","headers","then","res","json","route","params","foodList","i","length","value","body","JSON","stringify","name","calories","protein","carbohydrates","fat","updateData","alert","catch","err","showModal","setState","visible","hideModal","randomColor","color","col","Math","floor","random","state","date","flex","map","item","index","margin","flexWrap","fontSize","backgroundColor","currentDate","format","styles","card","fontWeight","flexDirection","left","mealmode","para","mealFoodCal","mealProteins","mealFats","mealCarbo","spaceSmall","foodChips","foods","navigation","navigate","getModal","Component","StyleSheet","create","borderRadius","width","Dimensions","get","alignItems","justifyContent","cal","mainContainer"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Avatar, Button, Card, Title, Paragraph, Chip } from 'react-native-paper';\r\nimport {StyleSheet, View, Dimensions, Modal} from \"react-native\";\r\nimport MealModal from \"./MealModal\"\r\nimport moment from \"moment\";\r\nclass MealCard extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            visible: false,\r\n        }\r\n        \r\n    }\r\n    delete = () =>{\r\n        this.props.deleteMeal(this.props.id);\r\n    }\r\n\r\n    select = () =>{\r\n        // this.props.select(food);\r\n        const {food, id, accessToken} = this.props\r\n        // this.props.navigation.navigate('Food')\r\n        if(food !== null && (typeof food !== 'undefined')){\r\n            fetch('https://mysqlcs639.cs.wisc.edu/meals/' + id + '/foods/', {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-access-token': accessToken\r\n                },\r\n                })\r\n                .then(res => res.json())\r\n                .then(res => { \r\n                    if( this.props.route.params?.foodList){\r\n                        for(let i=0; i<this.props.route.params.foodList.length; i++){\r\n                            let value = this.props.route.params.foodList[i]\r\n                            if(value.select){\r\n                                fetch('https://mysqlcs639.cs.wisc.edu/meals/' + id + '/foods/', {\r\n                                method: 'POST',\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                    'x-access-token': accessToken\r\n                                },\r\n                                body: JSON.stringify({\r\n                                    name:value.name,\r\n                                    calories:value.calories,\r\n                                    protein:value.protein,\r\n                                    carbohydrates:value.carbohydrates,\r\n                                    fat:value.fat\r\n                                  })\r\n\r\n                            })\r\n                            .then(res => res.json())\r\n                            .then(res=>{\r\n                                this.props.updateData()\r\n                                alert(\"Your foods have been reselected.\")\r\n                            });\r\n                            }   \r\n                        }\r\n                        \r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    alert(\"Something went wrong! \");\r\n                });\r\n            }\r\n        \r\n    }\r\n\r\n    showModal = () => this.setState({visible: true});\r\n    hideModal = () => this.setState({visible: false});\r\n\r\n    getModal(){\r\n        if(this.state.visible){\r\n            return(\r\n                <MealModal visible={this.state.visible} updateData = {this.props.updateData} hideModal={this.hideModal} \r\n                id={this.props.id} date={this.props.date} accessToken={this.props.accessToken} name={this.props.name} \r\n                           />\r\n            )\r\n        }\r\n    }\r\n\r\n    randomColor = () => {\r\n        let color = ['red', '#66CCFF', '#FFCC00', '#1C9379', '#8A7BA7'];\r\n        let col = color[Math.floor(Math.random() * color.length)];\r\n        return col;\r\n    };\r\n\r\n    foodChips(food){\r\n        if(food !== null && (typeof food !== 'undefined')){\r\n        return(\r\n            <View style = {{flex:1}}>{\r\n                food.map((item, index) => {\r\n                    return (\r\n                        <View key={index} style={{margin: 5,flexWrap: 'wrap',}}>\r\n                        <Chip key={index} mode=\"outlined\" height={30} \r\n                        textStyle={{ color:'white',fontSize: 15 }} \r\n                        style={{ backgroundColor: '#1C9379' }} \r\n                        // onPress={() => Alert.alert('Clicked Chip'+ item.name)}\r\n                        >\r\n                        {item.name}\r\n                        </Chip>\r\n                    </View>\r\n                    );\r\n                 })}\r\n            </View>\r\n        )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let currentDate = moment(this.props.date).format('MMMM Do YYYY, h:mm:ss a')\r\n        return(\r\n            <Card style={styles.card}>\r\n            <Card.Title stytle={{fontWeight: \"700\", fontSize: 18}} title={this.props.name} />\r\n                 <Card.Content>\r\n                    <View style={{flexDirection: 'column'}}>\r\n                        <View style={styles.left}>\r\n                            {this.props.mealmode ? <Paragraph style={styles.para}>{currentDate} </Paragraph> : <View></View>}\r\n                            <Paragraph style={styles.para}>Meal calories: {this.props. mealFoodCal} (kcal)</Paragraph>\r\n                            <Paragraph style={styles.para}>Meal proteins: {this.props. mealProteins} (grams)</Paragraph>\r\n                            <Paragraph style={styles.para}>Meal fats: {this.props. mealFats} (grams)</Paragraph>\r\n                            <Paragraph style={styles.para}>Meal carbohydrates: {this.props. mealCarbo} (grams)</Paragraph>\r\n                        </View>\r\n                        <View style={styles.spaceSmall}></View>\r\n                        {this.foodChips(this.props.foods)}\r\n                    </View>\r\n                     \r\n                 </Card.Content>\r\n                 {this.props.mealmode ? \r\n             <Card.Actions>\r\n                 <Button onPress={this.showModal}>Edit</Button>\r\n                 <Button onPress={this.delete}>Delete</Button>\r\n                 <Button onPress={()=>{this.props.navigation.navigate(\r\n                     'Food', {foods: this.props.foods, id: this.props.id})}}>Select_food</Button>\r\n                 {/* <Portal> */}\r\n                {/* <Modal visible={this.state.visible}> */}\r\n                {/* <MealModal visible={this.state.visible}  id={this.props.id} accessToken={this.props.accessToken} /> */}\r\n                {/* <Button color=\"#a1635f\" style={styles.buttonInline} title=\"NEVERMIND\" onPress={ this.hideModal} />\r\n                 </Modal> */}\r\n            {/* </Portal> */}\r\n            {this.getModal()}\r\n             </Card.Actions>\r\n             :<View></View>}\r\n             </Card>\r\n\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    card:{\r\n        margin: 4,\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: 5,\r\n        width: Dimensions.get('window').width *0.9,\r\n    },\r\n   \r\n    left:{\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start'\r\n    },\r\n\r\n    cal:{\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        fontWeight: \"600\",\r\n         fontSize: 16 ,\r\n    },\r\n    mainContainer: {\r\n        flex: 1\r\n      },\r\n\r\n      para:{\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        fontWeight: \"400\",\r\n         fontSize: 14 ,\r\n    },\r\n    \r\n});\r\n\r\nexport default MealCard;"]},"metadata":{},"sourceType":"module"}