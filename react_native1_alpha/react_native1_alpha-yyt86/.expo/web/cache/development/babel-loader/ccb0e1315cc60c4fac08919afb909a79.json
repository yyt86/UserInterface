{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\course\\\\639-UI\\\\react_native2_alpha-yyt86-main\\\\ExercisesView.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport moment from \"moment\";\nimport { Modal, Portal, Title, Provider, FAB } from 'react-native-paper';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport ActivityCard from \"./ActivityCard\";\nimport ActivityModal from \"./ActivityModal\";\nimport AddActivity from \"./AddActivity\";\nimport { useIsFocused } from '@react-navigation/native';\n\nvar ExercisesView = function (_React$Component) {\n  _inherits(ExercisesView, _React$Component);\n\n  var _super = _createSuper(ExercisesView);\n\n  function ExercisesView(props) {\n    var _this;\n\n    _classCallCheck(this, ExercisesView);\n\n    _this = _super.call(this, props);\n\n    _this.hideModal = function () {\n      return _this.setState({\n        visible: false\n      });\n    };\n\n    _this.state = {\n      name: \"\",\n      duration: 0.0,\n      date: \"\",\n      calories: 0.0,\n      activityArray: [],\n      accessToken: \"\",\n      username: \"\",\n      visible: false\n    };\n    return _this;\n  }\n\n  _createClass(ExercisesView, [{\n    key: \"getStoredData\",\n    value: function getStoredData(key) {\n      var value;\n      return _regeneratorRuntime.async(function getStoredData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n            case 3:\n              value = _context.sent;\n              this.setState(_defineProperty({}, key, value));\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 7]], Promise);\n    }\n  }, {\n    key: \"deleteExercise\",\n    value: function deleteExercise(id) {\n      var _this2 = this;\n\n      fetch('https://mysqlcs639.cs.wisc.edu/activities/' + id, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-access-token': this.state.accessToken\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        _this2.updateData();\n\n        alert(\"Exercise has been deleted!\");\n      }).catch(function (err) {\n        alert(\"Something went wrong! \");\n      });\n    }\n  }, {\n    key: \"handleAddActivity\",\n    value: function handleAddActivity() {\n      this.setState({\n        visible: true\n      });\n    }\n  }, {\n    key: \"getModal\",\n    value: function getModal() {\n      var _this3 = this;\n\n      if (this.state.visible) {\n        return React.createElement(AddActivity, {\n          visible: this.state.visible,\n          updateData: function updateData() {\n            return _this3.updateData();\n          },\n          hideModal: this.hideModal,\n          accessToken: this.state.accessToken,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }\n        });\n      }\n    }\n  }, {\n    key: \"updateData\",\n    value: function updateData() {\n      var _this4 = this;\n\n      fetch('https://mysqlcs639.cs.wisc.edu/activities/', {\n        method: 'GET',\n        headers: {\n          'x-access-token': this.state.accessToken\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        console.log(res, \"res\");\n\n        _this4.setState({\n          activityArray: res.activities\n        });\n\n        _this4.getExercises();\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"getExercises\",\n    value: function getExercises() {\n      var _this5 = this;\n\n      var cardList = [];\n\n      for (var i = 0; i < this.state.activityArray.length; i++) {\n        var value = this.state.activityArray[i];\n        cardList.push(React.createElement(ActivityCard, {\n          key: i,\n          name: value.name,\n          date: value.date,\n          duration: value.duration,\n          calories: value.calories,\n          id: value.id,\n          accessToken: this.state.accessToken,\n          deleteExercise: function deleteExercise(id) {\n            return _this5.deleteExercise(id);\n          },\n          updateData: function updateData() {\n            return _this5.updateData();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 27\n          }\n        }));\n      }\n\n      return cardList;\n    }\n  }, {\n    key: \"empty\",\n    value: function empty() {}\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this6 = this;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(this.getStoredData(\"accessToken\"));\n\n            case 2:\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(this.getStoredData(\"username\"));\n\n            case 4:\n              this.updateData();\n              this.navListener = this.props.navigation.addListener('focus', function () {\n                console.log(_this6.state.activityArray, \"exercises activity\");\n\n                _this6.updateData();\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.navListener();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      return React.createElement(ScrollView, {\n        style: styles.mainContainer,\n        contentContainerStyle: {\n          flexGrow: 11,\n          justifyContent: 'center',\n          alignItems: \"center\"\n        },\n        keyboardShouldPersistTaps: \"handled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.space,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }\n      }, React.createElement(Icon, {\n        name: \"walking\",\n        size: 40,\n        color: \"#900\",\n        style: {\n          marginRight: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: styles.bigText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }\n      }, \"Exercises\")), React.createElement(View, {\n        style: styles.spaceSmall,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }\n      }, \"Let's get to work!\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }\n      }, \"Record your exercises below.\"), React.createElement(FAB, {\n        icon: \"plus\",\n        medium: true,\n        style: styles.fab,\n        onPress: function onPress() {\n          return _this7.handleAddActivity();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }\n      }), this.getModal(), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }\n      }, this.getExercises()));\n    }\n  }]);\n\n  return ExercisesView;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  scrollView: {\n    height: Dimensions.get('window').height\n  },\n  mainContainer: {\n    flex: 1\n  },\n  scrollViewContainer: {},\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  bigText: {\n    fontSize: 32,\n    fontWeight: \"700\",\n    marginBottom: 5\n  },\n  spaceSmall: {\n    width: 20,\n    height: 10\n  },\n  space: {\n    width: 20,\n    height: 20\n  },\n  buttonInline: {\n    display: \"flex\"\n  },\n  fab: {\n    alignSelf: 'flex-end',\n    position: 'absolute',\n    top: 55,\n    right: 15,\n    backgroundColor: '#900'\n  }\n});\nexport default ExercisesView;","map":{"version":3,"sources":["F:/course/639-UI/react_native2_alpha-yyt86-main/ExercisesView.js"],"names":["React","moment","Modal","Portal","Title","Provider","FAB","Icon","AsyncStorage","ActivityCard","ActivityModal","AddActivity","useIsFocused","ExercisesView","props","hideModal","setState","visible","state","name","duration","date","calories","activityArray","accessToken","username","key","getItem","value","console","log","id","fetch","method","headers","then","res","json","updateData","alert","catch","err","activities","getExercises","cardList","i","length","push","deleteExercise","getStoredData","navListener","navigation","addListener","styles","mainContainer","flexGrow","justifyContent","alignItems","space","flexDirection","flexWrap","marginRight","bigText","spaceSmall","fab","handleAddActivity","getModal","Component","StyleSheet","create","scrollView","height","Dimensions","get","flex","scrollViewContainer","container","backgroundColor","fontSize","fontWeight","marginBottom","width","buttonInline","display","alignSelf","position","top","right"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,QAA/B,EAAyCC,GAAzC,QAAoD,oBAApD;;;;;;;AAEA,OAAOC,IAAP;;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,YAAP;AACA,OAAOC,aAAP;AACA,OAAOC,WAAP;AACA,SAASC,YAAT,QAA6B,0BAA7B;;IAyBMC,a;;;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UA8CnBC,SA9CmB,GA8CP;AAAA,aAAM,MAAKC,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAd,CAAN;AAAA,KA9CO;;AAEf,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,QAAQ,EAAE,GAFD;AAGTC,MAAAA,IAAI,EAAE,EAHG;AAITC,MAAAA,QAAQ,EAAE,GAJD;AAKTC,MAAAA,aAAa,EAAE,EALN;AAMTC,MAAAA,WAAW,EAAE,EANJ;AAOTC,MAAAA,QAAQ,EAAE,EAPD;AAQTR,MAAAA,OAAO,EAAE;AARA,KAAb;AAFe;AAalB;;;;kCAEmBS,G;;;;;;;;+CAEMlB,YAAY,CAACmB,OAAb,CAAqBD,GAArB,C;;;AAAdE,cAAAA,K;AACJ,mBAAKZ,QAAL,qBAAgBU,GAAhB,EAAsBE,KAAtB;;;;;;;AAEAC,cAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;mCAIOC,E,EAAG;AAAA;;AACdC,MAAAA,KAAK,CAAC,+CAA+CD,EAAhD,EAAoD;AACvDE,QAAAA,MAAM,EAAE,QAD+C;AAEvDC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,4BAAkB,KAAKhB,KAAL,CAAWM;AAFtB;AAF8C,OAApD,CAAL,CAOGW,IAPH,CAOQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAPX,EAQGF,IARH,CAQQ,UAAAC,GAAG,EAAI;AACX,QAAA,MAAI,CAACE,UAAL;;AAEAC,QAAAA,KAAK,CAAC,4BAAD,CAAL;AAED,OAbH,EAcGC,KAdH,CAcS,UAAAC,GAAG,EAAI;AACZF,QAAAA,KAAK,CAAC,wBAAD,CAAL;AACD,OAhBH;AAmBH;;;wCAGkB;AACf,WAAKvB,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAd;AAKH;;;+BAES;AAAA;;AACR,UAAG,KAAKC,KAAL,CAAWD,OAAd,EAAsB;AAClB,eACI,oBAAC,WAAD;AAAa,UAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD,OAAjC;AAA0C,UAAA,UAAU,EAAI;AAAA,mBAAK,MAAI,CAACqB,UAAL,EAAL;AAAA,WAAxD;AAAiF,UAAA,SAAS,EAAE,KAAKvB,SAAjG;AAA4G,UAAA,WAAW,EAAE,KAAKG,KAAL,CAAWM,WAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;AACJ;;;iCAEa;AAAA;;AACRQ,MAAAA,KAAK,CAAC,4CAAD,EAA+C;AAClDC,QAAAA,MAAM,EAAE,KAD0C;AAElDC,QAAAA,OAAO,EAAE;AAAE,4BAAkB,KAAKhB,KAAL,CAAWM;AAA/B;AAFyC,OAA/C,CAAL,CAIGW,IAJH,CAIQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAJX,EAKGF,IALH,CAKQ,UAAAC,GAAG,EAAI;AACXP,QAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ,EAAiB,KAAjB;;AACE,QAAA,MAAI,CAACpB,QAAL,CAAc;AAACO,UAAAA,aAAa,EAAGa,GAAG,CAACM;AAArB,SAAd;;AAaH,QAAA,MAAI,CAACC,YAAL;AACA,OArBH,EAsBGH,KAtBH,CAsBS,UAAAC,GAAG,EAAG;AAACZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AAAiB,OAtBjC;AAuBH;;;mCAEa;AAAA;;AAEV,UAAIG,QAAQ,GAAG,EAAf;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK3B,KAAL,CAAWK,aAAX,CAAyBuB,MAA7C,EAAqDD,CAAC,EAAtD,EAAyD;AAEvD,YAAIjB,KAAK,GAAG,KAAKV,KAAL,CAAWK,aAAX,CAAyBsB,CAAzB,CAAZ;AAIED,QAAAA,QAAQ,CAACG,IAAT,CAAc,oBAAC,YAAD;AAAc,UAAA,GAAG,EAAEF,CAAnB;AAAsB,UAAA,IAAI,EAAEjB,KAAK,CAACT,IAAlC;AAAwC,UAAA,IAAI,EAAES,KAAK,CAACP,IAApD;AACC,UAAA,QAAQ,EAAEO,KAAK,CAACR,QADjB;AAC2B,UAAA,QAAQ,EAAEQ,KAAK,CAACN,QAD3C;AAEC,UAAA,EAAE,EAAEM,KAAK,CAACG,EAFX;AAEe,UAAA,WAAW,EAAE,KAAKb,KAAL,CAAWM,WAFvC;AAGC,UAAA,cAAc,EAAI,wBAACO,EAAD;AAAA,mBAAM,MAAI,CAACiB,cAAL,CAAoBjB,EAApB,CAAN;AAAA,WAHnB;AAIA,UAAA,UAAU,EAAI;AAAA,mBAAK,MAAI,CAACO,UAAL,EAAL;AAAA,WAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;AAMH;;AACD,aAAOM,QAAP;AACH;;;4BACM,CAAE;;;;;;;;;;;+CAGC,KAAKK,aAAL,CAAmB,aAAnB,C;;;;+CACA,KAAKA,aAAL,CAAmB,UAAnB,C;;;AAGN,mBAAKX,UAAL;AAEA,mBAAKY,WAAL,GAAmB,KAAKpC,KAAL,CAAWqC,UAAX,CAAsBC,WAAtB,CAAkC,OAAlC,EAA2C,YAAM;AAClEvB,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACZ,KAAL,CAAWK,aAAvB,EAAsC,oBAAtC;;AACA,gBAAA,MAAI,CAACe,UAAL;AAEF,eAJmB,CAAnB;;;;;;;;;;;2CAUmB;AAErB,WAAKY,WAAL;AACF;;;6BAGS;AAAA;;AAEL,aACA,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAEG,MAAM,CAACC,aAA1B;AAAyC,QAAA,qBAAqB,EAAE;AAAEC,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,cAAc,EAAE,QAAhC;AAA0CC,UAAAA,UAAU,EAAE;AAAtD,SAAhE;AAAkI,QAAA,yBAAyB,EAAC,SAA5J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACK,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,aAAa,EAAE,KAAjB;AAAwBC,UAAAA,QAAQ,EAAE;AAAlC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,SAAX;AAAqB,QAAA,IAAI,EAAE,EAA3B;AAA+B,QAAA,KAAK,EAAC,MAArC;AAA4C,QAAA,KAAK,EAAE;AAAEC,UAAAA,WAAW,EAAE;AAAf,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEF,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACS,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFE,CAFJ,EAMI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAET,MAAM,CAACU,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAOA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAPA,EAQA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCARA,EAYA,oBAAC,GAAD;AACO,QAAA,IAAI,EAAC,MADZ;AAEO,QAAA,MAAM,MAFb;AAIO,QAAA,KAAK,EAAEV,MAAM,CAACW,GAJrB;AAKO,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,iBAAL,EAAN;AAAA,SALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZA,EAmBK,KAAKC,QAAL,EAnBL,EA4BI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKvB,YAAL,EAAP,CA5BJ,CADA;AA+BH;;;;EAvKuB3C,KAAK,CAACmE,S;;AA0KlC,IAAMd,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,UAAU,EAAE;AACRC,IAAAA,MAAM,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF;AADzB,GADiB;AAI3BjB,EAAAA,aAAa,EAAE;AACboB,IAAAA,IAAI,EAAE;AADO,GAJY;AAO3BC,EAAAA,mBAAmB,EAAE,EAPM;AAQ3BC,EAAAA,SAAS,EAAE;AACTF,IAAAA,IAAI,EAAE,CADG;AAETG,IAAAA,eAAe,EAAE;AAFR,GARgB;AAY3Bf,EAAAA,OAAO,EAAE;AACPgB,IAAAA,QAAQ,EAAE,EADH;AAEPC,IAAAA,UAAU,EAAE,KAFL;AAGPC,IAAAA,YAAY,EAAE;AAHP,GAZkB;AAiB3BjB,EAAAA,UAAU,EAAE;AACVkB,IAAAA,KAAK,EAAE,EADG;AAEVV,IAAAA,MAAM,EAAE;AAFE,GAjBe;AAqB3Bb,EAAAA,KAAK,EAAE;AACLuB,IAAAA,KAAK,EAAE,EADF;AAELV,IAAAA,MAAM,EAAE;AAFH,GArBoB;AAyB3BW,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAE;AADG,GAzBa;AA6B3BnB,EAAAA,GAAG,EAAE;AACHoB,IAAAA,SAAS,EAAE,UADR;AAEHC,IAAAA,QAAQ,EAAE,UAFP;AAGHC,IAAAA,GAAG,EAAE,EAHF;AAIHC,IAAAA,KAAK,EAAE,EAJJ;AAKHV,IAAAA,eAAe,EAAE;AALd;AA7BsB,CAAlB,CAAf;AAuCA,eAAehE,aAAf","sourcesContent":["import React from 'react';\nimport moment from \"moment\";\nimport { Modal, Portal, Title, Provider, FAB } from 'react-native-paper';\nimport {StyleSheet, Text, View, Button, TextInput, ScrollView } from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome5';\nimport { Dimensions } from 'react-native';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport ActivityCard from './ActivityCard';\nimport ActivityModal from './ActivityModal';\nimport AddActivity from './AddActivity';\nimport { useIsFocused } from '@react-navigation/native'\n// import { withNavigation, NavigationEvents } from 'react-navigation';\n// class ExercisesView extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n            \n//         }\n\n//     }\n\n//     componentDidMount() {\n\n//     }\n\n//     render() {\n//         return <></>\n//     }\n// }\n\n// const styles = StyleSheet.create({\n    \n// });\n\n\nclass ExercisesView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            duration: 0.0,\n            date: \"\",\n            calories: 0.0,\n            activityArray: [],\n            accessToken: \"\",\n            username: \"\",\n            visible: false,\n          }\n\n    }\n\n    async getStoredData(key){\n        try{\n            let value = await AsyncStorage.getItem(key);\n            this.setState({[key]: value});\n         } catch (error) {\n            console.log(error);\n         }\n    }\n\n    deleteExercise(id){\n        fetch('https://mysqlcs639.cs.wisc.edu/activities/' + id, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json',\n            'x-access-token': this.state.accessToken\n          },\n        })\n          .then(res => res.json())\n          .then(res => {\n            this.updateData();\n          // console.log(this.state.activityArray, \"after delete\")\n            alert(\"Exercise has been deleted!\");\n\n          })\n          .catch(err => {\n            alert(\"Something went wrong! \");\n          });\n          \n    \n    }\n\n    hideModal = () => this.setState({visible: false});\n    handleAddActivity(){\n        this.setState({visible: true});\n\n        // return(\n           \n        // )\n    }\n\n    getModal(){\n      if(this.state.visible){\n          return(\n              <AddActivity visible={this.state.visible} updateData = {() =>this.updateData() } hideModal={this.hideModal} accessToken={this.state.accessToken} />\n          )\n      }\n  }\n\n    updateData(){\n        fetch('https://mysqlcs639.cs.wisc.edu/activities/', {\n          method: 'GET',\n          headers: { 'x-access-token': this.state.accessToken }\n        })\n          .then(res => res.json())\n          .then(res => {\n            console.log(res, \"res\")\n              this.setState({activityArray:  res.activities});\n              // try{\n              //   let result = JSON.stringify(res.activities);\n              //   console.log(result, \"exercises act\")\n              // AsyncStorage.setItem('activityArray',  result)}\n              // this.getStoredData('activityArray')\n              // console.log(this.state.activityArray, \"this.state.activityArray\")}\n            //   catch (error) {\n            //     console.log(error);\n            //  }\n            //   for(const [key, value] of Object.entries(res)){\n            //       this.setState({[key]: value})\n            //   }\n           this.getExercises();\n          })\n          .catch(err =>{console.log(err)});\n    }\n\n    getExercises(){\n      // this.updateData();\n        let cardList = [];\n        // console.log(this.state.activityArray, \"activity\")\n        for (let i = 0; i < this.state.activityArray.length; i++){\n        // for(const key of this.state.activityArray.keys()){\n          let value = this.state.activityArray[i];\n          // console.log(value, \"activity info\")\n          // console.log(value.id, \"activity id\")\n          \n            cardList.push(<ActivityCard key={i} name={value.name} date={value.date}\n                           duration={value.duration} calories={value.calories}\n                           id={value.id} accessToken={this.state.accessToken}\n                           deleteExercise = {(id)=>this.deleteExercise(id)} \n                          updateData = {() =>this.updateData() }/>)\n\n        }\n        return cardList;\n    }\n    empty(){}\n\n    async componentDidMount() {\n        await this.getStoredData(\"accessToken\");\n        await this.getStoredData(\"username\");\n        \n        // console.log(this.state.accessToken)\n        this.updateData();\n        // this.getExercises()\n        this.navListener = this.props.navigation.addListener('focus', () => {\n          console.log(this.state.activityArray, \"exercises activity\")\n          this.updateData();\n          \n       });\n    //   if(this.props.isFocused){\n    //     this.updateData();\n    //   // }\n    }\n\n    componentWillUnmount() {\n \n      this.navListener();\n   }\n  \n\n    render() {\n      // const { isFocused } = this.props;\n        return (\n        <ScrollView style={styles.mainContainer} contentContainerStyle={{ flexGrow: 11, justifyContent: 'center', alignItems: \"center\" }} keyboardShouldPersistTaps='handled'>\n            <View style={styles.space} />\n            <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n            <Icon name=\"walking\" size={40} color=\"#900\" style={{ marginRight: 20 }} />\n          <Text style={styles.bigText}>Exercises</Text>\n            </View>\n            <View style={styles.spaceSmall}></View>\n        <Text>Let's get to work!</Text>\n        <Text>Record your exercises below.</Text>\n        {/* <View style={styles.space} />\n        <Button color=\"#942a21\" style={styles.buttonInline} title=\"ADD ACTIVITY\" onPress={() => this.handleAddActivity()} />\n        <View style={styles.space} /> */}\n        <FAB\n               icon=\"plus\"\n               medium\n              //  size={35}\n               style={styles.fab}\n               onPress={() => this.handleAddActivity()}\n            />\n            {this.getModal()}\n             {/* <ActivityModal visible={this.state.visible} hideModal={this.hideModal} accessToken={this.state.accessToken} addmode={true} editmode={false}/> */}\n        {/* <View>{isFocused? this.updateData(): this.empty()}</View> */}\n        \n        {/* <NavigationEvents\n              onWillFocus={() => {\n                this.updateData()\n              }}\n            /> */}\n            <View>{this.getExercises()}</View>\n        </ScrollView>)\n    }\n}\n\nconst styles = StyleSheet.create({\n    scrollView: {\n        height: Dimensions.get('window').height\n      },\n      mainContainer: {\n        flex: 1\n      },\n      scrollViewContainer: {},\n      container: {\n        flex: 1,\n        backgroundColor: '#fff',\n      },\n      bigText: {\n        fontSize: 32,\n        fontWeight: \"700\",\n        marginBottom: 5\n      },\n      spaceSmall: {\n        width: 20,\n        height: 10,\n      },\n      space: {\n        width: 20,\n        height: 20,\n      },\n      buttonInline: {\n        display: \"flex\"\n      },\n\n      fab: {\n        alignSelf: 'flex-end',\n        position: 'absolute',\n        top: 55,\n        right: 15,\n        backgroundColor: '#900',\n     },\n      \n});\n\nexport default ExercisesView;\n// export default withNavigation(ExercisesView);\n// export default function(props) {\n//   const isFocused = useIsFocused();\n\n//   return <ExercisesView {...props} isFocused={isFocused} />;\n// }"]},"metadata":{},"sourceType":"module"}