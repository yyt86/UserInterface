{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\course\\\\639-UI\\\\react_native2_alpha-yyt86-main\\\\TodayView.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport moment from \"moment\";\nimport { Modal, Portal, Title, Provider, Surface, Headline } from 'react-native-paper';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\n\nvar TodayView = function (_React$Component) {\n  _inherits(TodayView, _React$Component);\n\n  var _super = _createSuper(TodayView);\n\n  function TodayView(props) {\n    var _this;\n\n    _classCallCheck(this, TodayView);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      todayExercises: [],\n      todayMeals: [],\n      currentDate: new Date(),\n      dailyDuration: 0.0,\n      dailyCalories: 0.0,\n      dailyProtein: 0.0,\n      dailyCarbo: 0.0,\n      dailyActivity: 0,\n      dailyFats: 0.0,\n      dailyFoodCal: 0.0,\n      accessToken: '',\n      activityArray: ''\n    };\n    return _this;\n  }\n\n  _createClass(TodayView, [{\n    key: \"getStoredData\",\n    value: function getStoredData(key) {\n      var value;\n      return _regeneratorRuntime.async(function getStoredData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n            case 3:\n              value = _context.sent;\n              this.setState(_defineProperty({}, key, value));\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 7]], Promise);\n    }\n  }, {\n    key: \"getMeal\",\n    value: function getMeal() {\n      var _this2 = this;\n\n      var todayProteins = 0.0;\n      var todayCarbo = 0.0;\n      var todayFats = 0.0;\n      var todayFoodCal = 0.0;\n      fetch('https://mysqlcs639.cs.wisc.edu/meals/', {\n        method: 'GET',\n        headers: {\n          'x-access-token': this.state.accessToken\n        }\n      }).then(function (res1) {\n        return res1.json();\n      }).then(function (res1) {\n        var _loop = function _loop(meal) {\n          if (moment(meal.date).format('DD-MM-YYYY') === moment(_this2.state.currentDate).format('DD-MM-YYYY')) {\n            _this2.setState(function (prevState) {\n              return {\n                todayMeals: [].concat(_toConsumableArray(prevState.todayMeals), [meal])\n              };\n            });\n\n            fetch('https://mysqlcs639.cs.wisc.edu/meals/' + meal.id + '/foods', {\n              method: 'GET',\n              headers: {\n                'x-access-token': _this2.state.accessToken\n              }\n            }).then(function (res2) {\n              return res2.json();\n            }).then(function (res2) {\n              for (var _iterator2 = _createForOfIteratorHelperLoose(res2.foods.values()), _step2; !(_step2 = _iterator2()).done;) {\n                var food = _step2.value;\n                todayProteins += food.protein;\n                todayCarbo += food.carbohydrates;\n                todayFats += food.fat;\n                todayFoodCal = food.calories;\n              }\n\n              _this2.setState({\n                dailyProtein: todayProteins\n              });\n\n              _this2.setState({\n                dailyCarbo: todayCarbo\n              });\n\n              _this2.setState({\n                dailyFats: todayFats\n              });\n\n              _this2.setState({\n                dailyFoodCal: todayFoodCal\n              });\n            });\n          }\n        };\n\n        for (var _iterator = _createForOfIteratorHelperLoose(res1.meals.values()), _step; !(_step = _iterator()).done;) {\n          var meal = _step.value;\n\n          _loop(meal);\n        }\n      });\n    }\n  }, {\n    key: \"displayExercises\",\n    value: function displayExercises() {\n      var _this3 = this;\n\n      var cardList = [];\n\n      for (var i = 0; i < this.state.todayExercises.length; i++) {\n        var value = this.state.todayExercises[i];\n        var currentDate = moment(value.date).format(\"MMMM D, YYYY\");\n        cardList.push(React.createElement(ActivityCard, {\n          key: i,\n          name: value.name,\n          date: currentDate,\n          duration: value.duration,\n          calories: value.calories,\n          id: value.id,\n          accessToken: this.state.accessToken,\n          deleteExercise: function deleteExercise(id) {\n            return _this3.deleteExercise(id);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 27\n          }\n        }));\n      }\n\n      return cardList;\n    }\n  }, {\n    key: \"getExercise\",\n    value: function getExercise() {\n      var _this4 = this;\n\n      var todayDuration = 0;\n      var todarCalorie = 0;\n      fetch('https://mysqlcs639.cs.wisc.edu/activities/', {\n        method: 'GET',\n        headers: {\n          'x-access-token': this.state.accessToken\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        console.log(res, \"res in today\");\n\n        var _loop2 = function _loop2(activity) {\n          if (moment(activity.date).format(\"MMM Do YY\") === moment(_this4.state.currentDate).format(\"MMM Do YY\")) {\n            _this4.setState(function (prevState) {\n              return {\n                todayExercises: [].concat(_toConsumableArray(prevState.todayExercises), [activity])\n              };\n            });\n\n            todayDuration += activity.duration;\n            todarCalorie += activity.calories;\n\n            _this4.setState({\n              dailyActivity: _this4.state.todayExercises.length\n            });\n\n            _this4.setState({\n              dailyDuration: todayDuration\n            });\n\n            _this4.setState({\n              dailyCalories: todarCalorie\n            });\n          }\n        };\n\n        for (var _iterator3 = _createForOfIteratorHelperLoose(res.activities.values()), _step3; !(_step3 = _iterator3()).done;) {\n          var activity = _step3.value;\n\n          _loop2(activity);\n        }\n\n        console.log(_this4.state.todayExercises, \"today exercise\");\n      });\n    }\n  }, {\n    key: \"updateData\",\n    value: function updateData() {\n      var _this5 = this;\n\n      fetch('https://mysqlcs639.cs.wisc.edu/activities/', {\n        method: 'GET',\n        headers: {\n          'x-access-token': this.state.accessToken\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        console.log(res, \"res\");\n\n        _this5.setState({\n          activityArray: res.activities\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this6 = this;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(this.getStoredData(\"accessToken\"));\n\n            case 2:\n              console.log(this.state.accessToken, \"token\");\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(this.getStoredData(\"username\"));\n\n            case 5:\n              this.getExercise();\n              this.getMeal();\n              console.log(this.state.dailyDuration, \"this.state.dailyDuration\");\n              console.log(this.state.dailyCalories, \"this.state.dailyCalories\");\n              console.log(this.state.dailyCarbo, \"this.state.dailyCarbo\");\n              console.log(this.state.dailyProtein, \"this.state.dailyProtein\");\n              this.navListener = this.props.navigation.addListener('focus', function () {\n                console.log(_this6.state.todayExercises, \"todayExercises\");\n\n                _this6.getExercise();\n              });\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.navListener();\n    }\n  }, {\n    key: \"displayExercises\",\n    value: function displayExercises() {\n      var cardList = [];\n\n      for (var i = 0; i < this.state.todayExercises.length; i++) {\n        var value = this.state.todayExercises[i];\n        cardList.push(React.createElement(View, {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }\n        }, React.createElement(Surface, {\n          style: styles.surface,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: {\n            flexDirection: 'column',\n            flexWrap: 'wrap'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: {\n            marginLeft: 10,\n            fontWeight: \"700\",\n            fontSize: 20\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }\n        }, value.name), React.createElement(Text, {\n          style: {\n            marginLeft: 10,\n            fontWeight: \"400\",\n            fontSize: 16\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 18\n          }\n        }, value.duration, \" min\")), React.createElement(View, {\n          style: {\n            flexDirection: 'column'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: {\n            marginLeft: 30,\n            fontWeight: \"500\",\n            fontSize: 27\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }\n        }, value.calories, \" kcal\"))), React.createElement(View, {\n          style: styles.spaceSmall,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 10\n          }\n        })));\n      }\n\n      return cardList;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      return React.createElement(ScrollView, {\n        style: styles.mainContainer,\n        contentContainerStyle: {\n          flexGrow: 11,\n          justifyContent: 'center',\n          alignItems: \"center\"\n        },\n        keyboardShouldPersistTaps: \"handled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }\n      }, React.createElement(Icon, {\n        name: \"calendar-day\",\n        size: 40,\n        color: \"#900\",\n        style: {\n          marginRight: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }\n      }), React.createElement(Text, {\n        style: styles.bigText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 15\n        }\n      }, \"Today\")), React.createElement(Headline, {\n        style: {\n          fontWeight: '600',\n          color: '#900',\n          fontSize: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }\n      }, moment(new Date()).format('YYYY/MM/DD, h:mm:ss a')), React.createElement(View, {\n        style: styles.space,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 17\n        }\n      }, React.createElement(Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }\n      }, \" Exercises\"), React.createElement(View, {\n        style: styles.spaceSmall,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }\n      }), this.displayExercises()), React.createElement(TouchableHighlight, {\n        style: styles.openButton,\n        onPress: function onPress() {\n          _this7.props.navigation.navigate('Comparison', {\n            dailyDuration: _this7.state.dailyDuration,\n            dailyCalories: _this7.state.dailyCalories,\n            dailyProtein: _this7.state.dailyProtein,\n            dailyCarbo: _this7.state.dailyCarbo,\n            dailyFats: _this7.state.dailyFats,\n            dailyFoodCal: _this7.state.dailyFoodCal\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 10\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 16\n        }\n      }, \"Check performance\")));\n    }\n  }]);\n\n  return TodayView;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  scrollView: {\n    height: Dimensions.get('window').height\n  },\n  mainContainer: {\n    flex: 1\n  },\n  scrollViewContainer: {},\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  spaceSmall: {\n    width: 20,\n    height: 10\n  },\n  space: {\n    width: 20,\n    height: 20\n  },\n  bigText: {\n    fontSize: 32,\n    fontWeight: \"700\",\n    marginBottom: 5\n  },\n  surface: {\n    flexDirection: 'row',\n    padding: 10,\n    height: 70,\n    width: Dimensions.get('window').width * 0.8,\n    backgroundColor: \"#FAFAD2\",\n    borderRadius: 8,\n    elevation: 6\n  },\n  button: {\n    display: 'flex',\n    height: 30,\n    borderRadius: 6,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '90%',\n    backgroundColor: '#2AC062',\n    shadowColor: '#2AC062',\n    shadowOpacity: 0.5,\n    shadowOffset: {\n      height: 10,\n      width: 0\n    },\n    shadowRadius: 10\n  },\n  opacity: {\n    height: 30,\n    borderRadius: 6,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: Dimensions.get('window').width * 0.8,\n    backgroundColor: '#900'\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontSize: 16\n  },\n  openButton: {\n    backgroundColor: \"#900\",\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  }\n});\nexport default TodayView;","map":{"version":3,"sources":["F:/course/639-UI/react_native2_alpha-yyt86-main/TodayView.js"],"names":["React","moment","Modal","Portal","Title","Provider","Surface","Headline","AsyncStorage","Icon","TodayView","props","state","todayExercises","todayMeals","currentDate","Date","dailyDuration","dailyCalories","dailyProtein","dailyCarbo","dailyActivity","dailyFats","dailyFoodCal","accessToken","activityArray","key","getItem","value","setState","console","log","todayProteins","todayCarbo","todayFats","todayFoodCal","fetch","method","headers","then","res1","json","meal","date","format","prevState","id","res2","foods","values","food","protein","carbohydrates","fat","calories","meals","cardList","i","length","push","name","duration","deleteExercise","todayDuration","todarCalorie","res","activity","activities","catch","err","getStoredData","getExercise","getMeal","navListener","navigation","addListener","styles","surface","flexDirection","flexWrap","marginLeft","fontWeight","fontSize","spaceSmall","mainContainer","flexGrow","justifyContent","alignItems","marginRight","bigText","color","space","displayExercises","openButton","navigate","textStyle","Component","StyleSheet","create","scrollView","height","Dimensions","get","flex","scrollViewContainer","container","backgroundColor","width","marginBottom","padding","borderRadius","elevation","button","display","shadowColor","shadowOpacity","shadowOffset","shadowRadius","opacity","buttonText","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from \"moment\";\nimport { Modal, Portal, Title, Provider, Surface,  Headline  } from 'react-native-paper';\nimport {StyleSheet, Text, View, Button, TextInput, ScrollView, TouchableHighlight } from 'react-native';\nimport { Dimensions } from 'react-native';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport Icon from 'react-native-vector-icons/FontAwesome5';\n\nclass TodayView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            todayExercises: [],\n            todayMeals: [],\n            currentDate: new Date(),\n            dailyDuration: 0.0,\n            dailyCalories: 0.0,\n            dailyProtein: 0.0,\n            dailyCarbo: 0.0,\n            dailyActivity: 0,\n            dailyFats: 0.0,\n            dailyFoodCal: 0.0,\n            accessToken: '',\n            activityArray:'',\n\n        }\n\n    }\n\n    async getStoredData(key){\n        try{\n            let value = await AsyncStorage.getItem(key);\n            this.setState({[key]: value});   \n         } catch (error) {\n            console.log(error);\n         }\n    }\n\n    \n\n    getMeal(){\n        let todayProteins = 0.0;\n        let todayCarbo = 0.0;\n        let todayFats = 0.0;\n        let todayFoodCal = 0.0;\n        fetch('https://mysqlcs639.cs.wisc.edu/meals/', {\n          method: 'GET',\n          headers: { 'x-access-token': this.state.accessToken }\n        })\n          .then(res1 => res1.json())\n          .then(res1 => {\n            // console.log(res1, \"res1\")\n              for(const meal of res1.meals.values()){\n                  if(moment(meal.date).format('DD-MM-YYYY') === moment(this.state.currentDate).format('DD-MM-YYYY')) {\n                    this.setState(prevState => ({\n                        todayMeals: [...prevState.todayMeals, meal] \n                      }));\n                      fetch('https://mysqlcs639.cs.wisc.edu/meals/' + meal.id + '/foods', {\n                        method: 'GET',\n                         headers: { 'x-access-token': this.state.accessToken }\n                     })\n                    .then(res2 => res2.json())\n                    .then(res2 => {\n                        for(const food of res2.foods.values()){\n                            todayProteins += food.protein;\n                            todayCarbo += food.carbohydrates;\n                            todayFats += food.fat;\n                            todayFoodCal = food.calories;\n                        }\n                      this.setState({dailyProtein: todayProteins})\n                      this.setState({dailyCarbo: todayCarbo})\n                      this.setState({dailyFats: todayFats})\n                      this.setState({dailyFoodCal: todayFoodCal})\n                    });\n                    }\n              }\n                });\n    }\n\n    displayExercises(){\n        let cardList = [];\n        for (let i = 0; i < this.state.todayExercises.length; i++){\n        // for(const key of this.state.activityArray.keys()){\n          let value = this.state.todayExercises[i];\n          // console.log(value, \"activity info\")\n          // console.log(value.id, \"activity id\")\n            let currentDate = moment(value.date).format(\"MMMM D, YYYY\");\n            cardList.push(<ActivityCard key={i} name={value.name} date={currentDate}\n                           duration={value.duration} calories={value.calories}\n                           id={value.id} accessToken={this.state.accessToken}\n                           deleteExercise = {(id)=>this.deleteExercise(id)} />)\n\n        }\n        return cardList;\n    }\n\n    getExercise(){\n        let todayDuration = 0;\n        let todarCalorie = 0;\n        fetch('https://mysqlcs639.cs.wisc.edu/activities/', {\n          method: 'GET',\n          headers: { 'x-access-token': this.state.accessToken }\n        })\n          .then(res => res.json())\n          .then(res => {\n            console.log(res, \"res in today\")\n              for(const activity of res.activities.values()){\n                  if(moment(activity.date).format(\"MMM Do YY\") === moment(this.state.currentDate).format(\"MMM Do YY\")) {\n                    this.setState(prevState => ({\n                        todayExercises: [...prevState.todayExercises, activity] \n                      }));\n                      todayDuration += activity.duration;\n                      todarCalorie += activity.calories;\n                      this.setState({dailyActivity: this.state.todayExercises.length})\n                      this.setState({dailyDuration: todayDuration})\n                      this.setState({dailyCalories: todarCalorie})\n              }\n            }\n            console.log(this.state.todayExercises, \"today exercise\")\n          });\n    }\n\n    updateData(){\n      fetch('https://mysqlcs639.cs.wisc.edu/activities/', {\n        method: 'GET',\n        headers: { 'x-access-token': this.state.accessToken }\n      })\n        .then(res => res.json())\n        .then(res => {\n          console.log(res, \"res\")\n            this.setState({activityArray:  res.activities});\n            // try{\n            //   let result = JSON.stringify(res.activities);\n            //   console.log(result, \"exercises act\")\n            // AsyncStorage.setItem('activityArray',  result)}\n            // this.getStoredData('activityArray')\n            // console.log(this.state.activityArray, \"this.state.activityArray\")}\n          //   catch (error) {\n          //     console.log(error);\n          //  }\n          //   for(const [key, value] of Object.entries(res)){\n          //       this.setState({[key]: value})\n          //   }\n        //  this.getExercises();\n        })\n        .catch(err =>{console.log(err)});\n  }\n  //  async getExercise(){\n  //     let todayDuration = 0;\n  //     let todarCalorie = 0;\n  //     // await this.getStoredData();\n  //     console.log(this.state.activityArray, \"this.state.activityArray\")\n  //     let activities = JSON.parse(this.state.activityArray)\n  //     console.log(typeof  activities, \"today activities\")\n  //         // console.log(res, \"res in today\")\n  //           for(const activity of activities.values()){\n  //               if(moment(activity.date).format(\"MMM Do YY\") === moment(this.state.currentDate).format(\"MMM Do YY\")) {\n  //                 this.setState(prevState => ({\n  //                     todayExercises: [...prevState.todayExercises, activity] \n  //                   }));\n  //                   todayDuration += activity.duration;\n  //                   todarCalorie += activity.calories;\n  //                   this.setState({dailyActivity: this.state.todayExercises.length})\n  //                   this.setState({dailyDuration: todayDuration})\n  //                   this.setState({dailyCalories: todarCalorie})\n  //           }\n  //         }\n  //         console.log(this.state.todayExercises, \"today exercise\")\n        \n  // }\n\n\n   async componentDidMount() {\n        await this.getStoredData(\"accessToken\");\n        console.log(this.state.accessToken, \"token\")\n        await this.getStoredData(\"username\");\n        this.getExercise();\n        this.getMeal();\n        console.log(this.state.dailyDuration, \"this.state.dailyDuration\")\n        console.log(this.state.dailyCalories, \"this.state.dailyCalories\")\n        console.log(this.state.dailyCarbo, \"this.state.dailyCarbo\")\n        console.log(this.state.dailyProtein, \"this.state.dailyProtein\")\n\n        this.navListener = this.props.navigation.addListener('focus', () => {\n          console.log(this.state.todayExercises, \"todayExercises\")\n          this.getExercise();\n       });\n    //   if(this.props.isFocused){\n    //     this.updateData();\n    //   // }\n    }\n\n    componentWillUnmount() {\n \n      this.navListener();\n   }\n\n    // renderItem = (item) =>{\n    //     return(\n    //         <View key={item.id}>\n    //         <Surface style={styles.surface}>\n    //         <View style={{ flexDirection: 'column', flexWrap: 'wrap' }}>\n    //             <Text style={{marginLeft:10, fontWeight: \"700\", fontSize: 20 }}>{item.name}</Text>\n    //              <Text style={{marginLeft:10,  fontWeight: \"400\", fontSize: 16, }}>{item.duration} min</Text>\n    //         </View>\n    //         <View style={{ flexDirection: 'column' }}>\n               \n    //             <Text style={{marginLeft:30, fontWeight: \"500\", fontSize: 27  }}>{item.calories} kcal</Text>\n    //         </View>\n    //      </Surface>\n    //      <View style={styles.spaceSmall} />\n    //      </View>\n    //     )\n    // }\n\n    displayExercises(){\n      \n      let cardList = [];\n      // console.log(this.state.activityArray, \"activity\")\n      for (let i = 0; i < this.state.todayExercises.length; i++){\n      // for(const key of this.state.activityArray.keys()){\n        let value = this.state.todayExercises[i];\n        // console.log(value, \"activity info\")\n        // console.log(value.id, \"activity id\")\n          // let currentDate = moment(value.date).format('MMMM Do YYYY');\n          cardList.push( \n            <View key={i}>\n            <Surface style={styles.surface}>\n            <View style={{ flexDirection: 'column', flexWrap: 'wrap' }}>\n                <Text style={{marginLeft:10, fontWeight: \"700\", fontSize: 20 }}>{value.name}</Text>\n                 <Text style={{marginLeft:10,  fontWeight: \"400\", fontSize: 16, }}>{value.duration} min</Text>\n            </View>\n            <View style={{ flexDirection: 'column' }}>\n               \n                <Text style={{marginLeft:30, fontWeight: \"500\", fontSize: 27  }}>{value.calories} kcal</Text>\n            </View>\n         </Surface>\n         <View style={styles.spaceSmall} />\n         </View>\n          )\n\n      }\n      return cardList;\n  }\n\n\n    render() {\n        return (\n            <ScrollView style={styles.mainContainer} contentContainerStyle={{ flexGrow: 11, justifyContent: 'center', alignItems: \"center\" }} keyboardShouldPersistTaps='handled'>\n              <View>\n              <Icon name=\"calendar-day\" size={40} color=\"#900\" style={{ marginRight: 20 }} />\n              <Text style={styles.bigText}>Today</Text>\n              </View>\n              <Headline style = {{fontWeight: '600', color:'#900', fontSize:16} }>{moment(new Date()).format('YYYY/MM/DD, h:mm:ss a')}</Headline>\n              <View style={styles.space} />\n            \n                <View>\n                    <Title> Exercises</Title>\n                    <View style={styles.spaceSmall} />\n                   {this.displayExercises()}\n                </View>\n\n         <TouchableHighlight\n          style={styles.openButton}\n              onPress={() => {\n                this.props.navigation.navigate('Comparison', {dailyDuration: this.state.dailyDuration,\n            dailyCalories: this.state.dailyCalories,\n            dailyProtein: this.state.dailyProtein,\n            dailyCarbo: this.state.dailyCarbo,\n           dailyFats: this.state.dailyFats,\n             dailyFoodCal: this.state.dailyFoodCal,})\n              }}>\n               <Text style={styles.textStyle}>Check performance</Text>\n        </TouchableHighlight>\n                     \n        \n            \n            </ScrollView>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    scrollView: {\n        height: Dimensions.get('window').height\n      },\n      mainContainer: {\n        flex: 1\n      },\n      scrollViewContainer: {},\n      container: {\n        flex: 1,\n        backgroundColor: '#fff',\n      },\n      spaceSmall: {\n        width: 20,\n        height: 10,\n      },\n      space: {\n        width: 20,\n        height: 20,\n      },\n\n      bigText: {\n        fontSize: 32,\n        fontWeight: \"700\",\n        marginBottom: 5\n      },\n\n    surface: {\n        flexDirection: 'row',\n        padding: 10,\n        height: 70,\n        width: Dimensions.get('window').width *0.8,\n        backgroundColor:\"#FAFAD2\",\n        borderRadius: 8,\n        // alignItems: 'center',\n        // justifyContent: 'center',\n        elevation: 6,\n      },\n\n      button: {\n        display: 'flex',\n        height: 30,\n        borderRadius: 6,\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '90%',\n        backgroundColor: '#2AC062',\n        shadowColor: '#2AC062',\n        shadowOpacity: 0.5,\n        shadowOffset: { \n          height: 10, \n          width: 0 \n        },\n        shadowRadius: 10,\n      },\n      opacity:{\n        // display: 'flex',\n        height: 30,\n        borderRadius: 6,\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: Dimensions.get('window').width *0.8,\n        backgroundColor: '#900',\n      },\n\n      buttonText: {\n        color: '#FFFFFF',\n        fontSize: 16,\n      },\n\n      openButton: {\n        backgroundColor: \"#900\",\n        borderRadius: 20,\n        padding: 10,\n        elevation: 2\n      },\n      textStyle: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n      },\n});\n\nexport default TodayView;"]},"metadata":{},"sourceType":"module"}